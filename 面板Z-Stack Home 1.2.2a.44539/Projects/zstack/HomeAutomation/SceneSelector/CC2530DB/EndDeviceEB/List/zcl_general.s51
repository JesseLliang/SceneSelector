///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.10.1.2146 for 8051               18/Jan/2018  14:04:33
// Copyright 2004-2014 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Components\stack\zcl\zcl_general.c
//    Command line       =  
//        -f "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
//        "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x07FFF800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=120000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=60000)
//        -f "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Components\stack\zcl\zcl_general.c" -D
//        SCENE_SELECTOR_TOUCHKEY -D xSCENE_SELECTOR -D ISR_KEYINTERRUPT -D
//        OSC32K_CRYSTAL_INSTALLED=FALSE -D xxHAL_PA_LNA -D SECURE=1 -D
//        TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D POWER_SAVING -D
//        NWK_AUTO_POLL -D xHOLD_AUTO_START -D xZTOOL_P1 -D MT_TASK -D
//        MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D xLCD_SUPPORTED=DEBUG -D
//        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_WRITE -D ZCL_REPORT -D
//        xZCL_EZMODE -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_GROUPS -D ZCL_SCENES
//        -D ZCL_ON_OFF -D ZCL_LEVEL_CTRL -D ZCL_DIAGNOSTIC -D
//        FEATURE_SYSTEM_STATS -lC "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack
//        Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\EndDeviceEB\List\"
//        -lA "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\EndDeviceEB\List\"
//        --diag_suppress Pe001,Pa010 -o
//        "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\EndDeviceEB\Obj\"
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -I
//        "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\Add\AddSceneSelector\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\Add\AddCommon\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\Add\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\Source\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\Source\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz --require_prototypes
//    List file          =  
//        C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\EndDeviceEB\List\zcl_general.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME zcl_general

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V1
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?US_DIV_MOD
        EXTERN ?US_SWITCH_DENSE
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN __INIT_XDATA_Z

        FUNCTION ??zclGeneral_AddGroup?relay,0203H
        PUBLIC ??zclGeneral_AddScene?relay
        FUNCTION ??zclGeneral_AddScene?relay,0203H
        PUBLIC ??zclGeneral_CountAllScenes?relay
        FUNCTION ??zclGeneral_CountAllScenes?relay,0203H
        PUBLIC ??zclGeneral_CountScenes?relay
        FUNCTION ??zclGeneral_CountScenes?relay,0203H
        PUBLIC ??zclGeneral_FindAllScenesForGroup?relay
        FUNCTION ??zclGeneral_FindAllScenesForGroup?relay,0203H
        PUBLIC ??zclGeneral_FindScene?relay
        FUNCTION ??zclGeneral_FindScene?relay,0203H
        FUNCTION ??zclGeneral_HdlInSpecificCommands?relay,0203H
        FUNCTION ??zclGeneral_HdlIncoming?relay,0203H
        FUNCTION ??zclGeneral_ProcessInGroupsClient?relay,0203H
        FUNCTION ??zclGeneral_ProcessInGroupsServer?relay,0203H
        FUNCTION ??zclGeneral_ProcessInIdentity?relay,0203H
        FUNCTION ??zclGeneral_ProcessInLevelControl?relay,0203H
        FUNCTION ??zclGeneral_ProcessInScenesClient?relay,0203H
        FUNCTION ??zclGeneral_ProcessInScenesServer?relay,0203H
        PUBLIC ??zclGeneral_ReadSceneCountCB?relay
        FUNCTION ??zclGeneral_ReadSceneCountCB?relay,0203H
        PUBLIC ??zclGeneral_RegisterCmdCallbacks?relay
        FUNCTION ??zclGeneral_RegisterCmdCallbacks?relay,0203H
        PUBLIC ??zclGeneral_RemoveAllScenes?relay
        FUNCTION ??zclGeneral_RemoveAllScenes?relay,0203H
        PUBLIC ??zclGeneral_RemoveScene?relay
        FUNCTION ??zclGeneral_RemoveScene?relay,0203H
        PUBLIC ??zclGeneral_ScenesInit?relay
        FUNCTION ??zclGeneral_ScenesInit?relay,0203H
        PUBLIC ??zclGeneral_ScenesSave?relay
        FUNCTION ??zclGeneral_ScenesSave?relay,0203H
        FUNCTION ??zclGeneral_ScenesWriteNV?relay,0203H
        PUBLIC ??zclGeneral_SendAddGroupRequest?relay
        FUNCTION ??zclGeneral_SendAddGroupRequest?relay,0203H
        PUBLIC ??zclGeneral_SendAddSceneRequest?relay
        FUNCTION ??zclGeneral_SendAddSceneRequest?relay,0203H
        PUBLIC ??zclGeneral_SendGroupGetMembershipRequest?rela
        FUNCTION ??zclGeneral_SendGroupGetMembershipRequest?rela,0203H
        PUBLIC ??zclGeneral_SendGroupRequest?relay
        FUNCTION ??zclGeneral_SendGroupRequest?relay,0203H
        PUBLIC ??zclGeneral_SendGroupResponse?relay
        FUNCTION ??zclGeneral_SendGroupResponse?relay,0203H
        PUBLIC ??zclGeneral_SendGroupViewResponse?relay
        FUNCTION ??zclGeneral_SendGroupViewResponse?relay,0203H
        PUBLIC ??zclGeneral_SendIdentify?relay
        FUNCTION ??zclGeneral_SendIdentify?relay,0203H
        PUBLIC ??zclGeneral_SendIdentifyEZModeInvoke?relay
        FUNCTION ??zclGeneral_SendIdentifyEZModeInvoke?relay,0203H
        PUBLIC ??zclGeneral_SendIdentifyQueryResponse?relay
        FUNCTION ??zclGeneral_SendIdentifyQueryResponse?relay,0203H
        PUBLIC ??zclGeneral_SendIdentifyUpdateCommState?relay
        FUNCTION ??zclGeneral_SendIdentifyUpdateCommState?relay,0203H
        PUBLIC ??zclGeneral_SendLevelControlMoveRequest?relay
        FUNCTION ??zclGeneral_SendLevelControlMoveRequest?relay,0203H
        PUBLIC ??zclGeneral_SendLevelControlMoveToLevelRequest
        FUNCTION ??zclGeneral_SendLevelControlMoveToLevelRequest,0203H
        PUBLIC ??zclGeneral_SendLevelControlStepRequest?relay
        FUNCTION ??zclGeneral_SendLevelControlStepRequest?relay,0203H
        PUBLIC ??zclGeneral_SendLevelControlStopRequest?relay
        FUNCTION ??zclGeneral_SendLevelControlStopRequest?relay,0203H
        PUBLIC ??zclGeneral_SendSceneGetMembershipResponse?rel
        FUNCTION ??zclGeneral_SendSceneGetMembershipResponse?rel,0203H
        PUBLIC ??zclGeneral_SendSceneRequest?relay
        FUNCTION ??zclGeneral_SendSceneRequest?relay,0203H
        PUBLIC ??zclGeneral_SendSceneResponse?relay
        FUNCTION ??zclGeneral_SendSceneResponse?relay,0203H
        PUBLIC ??zclGeneral_SendSceneViewRsp?relay
        FUNCTION ??zclGeneral_SendSceneViewRsp?relay,0203H
        FUNCTION zclGeneral_AddGroup,021203H
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC zclGeneral_AddScene
        FUNCTION zclGeneral_AddScene,021203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC zclGeneral_CountAllScenes
        FUNCTION zclGeneral_CountAllScenes,0203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclGeneral_CountScenes
        FUNCTION zclGeneral_CountScenes,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclGeneral_FindAllScenesForGroup
        FUNCTION zclGeneral_FindAllScenesForGroup,080203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zclGeneral_FindScene
        FUNCTION zclGeneral_FindScene,080203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        FUNCTION zclGeneral_HdlInSpecificCommands,0a1203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION zclGeneral_HdlIncoming,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION zclGeneral_ProcessInGroupsClient,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 53, STACK
        FUNCTION zclGeneral_ProcessInGroupsServer,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 83, STACK
        FUNCTION zclGeneral_ProcessInIdentity,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclGeneral_ProcessInLevelControl,080203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclGeneral_ProcessInScenesClient,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 90, STACK
        FUNCTION zclGeneral_ProcessInScenesServer,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 89, STACK
        PUBLIC zclGeneral_ReadSceneCountCB
        FUNCTION zclGeneral_ReadSceneCountCB,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zclGeneral_RegisterCmdCallbacks
        FUNCTION zclGeneral_RegisterCmdCallbacks,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC zclGeneral_RemoveAllScenes
        FUNCTION zclGeneral_RemoveAllScenes,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 13, STACK
        PUBLIC zclGeneral_RemoveScene
        FUNCTION zclGeneral_RemoveScene,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC zclGeneral_ScenesInit
        FUNCTION zclGeneral_ScenesInit,0a1203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 72, STACK
        PUBLIC zclGeneral_ScenesSave
        FUNCTION zclGeneral_ScenesSave,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION zclGeneral_ScenesWriteNV,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 73, STACK
        PUBLIC zclGeneral_SendAddGroupRequest
        FUNCTION zclGeneral_SendAddGroupRequest,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC zclGeneral_SendAddSceneRequest
        FUNCTION zclGeneral_SendAddSceneRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 37, STACK
        PUBLIC zclGeneral_SendGroupGetMembershipRequest
        FUNCTION zclGeneral_SendGroupGetMembershipRequest,0a1203H
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC zclGeneral_SendGroupRequest
        FUNCTION zclGeneral_SendGroupRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclGeneral_SendGroupResponse
        FUNCTION zclGeneral_SendGroupResponse,0a1203H
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendGroupViewResponse
        FUNCTION zclGeneral_SendGroupViewResponse,0a1203H
        ARGFRAME XSTACK, 79, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC zclGeneral_SendIdentify
        FUNCTION zclGeneral_SendIdentify,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendIdentifyEZModeInvoke
        FUNCTION zclGeneral_SendIdentifyEZModeInvoke,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclGeneral_SendIdentifyQueryResponse
        FUNCTION zclGeneral_SendIdentifyQueryResponse,0a1203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendIdentifyUpdateCommState
        FUNCTION zclGeneral_SendIdentifyUpdateCommState,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclGeneral_SendLevelControlMoveRequest
        FUNCTION zclGeneral_SendLevelControlMoveRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclGeneral_SendLevelControlMoveToLevelRequest
        FUNCTION zclGeneral_SendLevelControlMoveToLevelRequest,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendLevelControlStepRequest
        FUNCTION zclGeneral_SendLevelControlStepRequest,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclGeneral_SendLevelControlStopRequest
        FUNCTION zclGeneral_SendLevelControlStopRequest,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendSceneGetMembershipResponse
        FUNCTION zclGeneral_SendSceneGetMembershipResponse,0a1203H
        ARGFRAME XSTACK, 89, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC zclGeneral_SendSceneRequest
        FUNCTION zclGeneral_SendSceneRequest,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendSceneResponse
        FUNCTION zclGeneral_SendSceneResponse,0a1203H
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclGeneral_SendSceneViewRsp
        FUNCTION zclGeneral_SendSceneViewRsp,0a1203H
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 37, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
addSceneSelector_setGroupID SYMBOL "addSceneSelector_setGroupID"
??addSceneSelector_setGroupID?relay SYMBOL "?relay", addSceneSelector_setGroupID
addSceneSelector_setSceneID SYMBOL "addSceneSelector_setSceneID"
??addSceneSelector_setSceneID?relay SYMBOL "?relay", addSceneSelector_setSceneID
aps_CountAllGroups  SYMBOL "aps_CountAllGroups"
??aps_CountAllGroups?relay SYMBOL "?relay", aps_CountAllGroups
aps_FindAllGroupsForEndpoint SYMBOL "aps_FindAllGroupsForEndpoint"
??aps_FindAllGroupsForEndpoint?relay SYMBOL "?relay", aps_FindAllGroupsForEndpoint
aps_FindGroup       SYMBOL "aps_FindGroup"
??aps_FindGroup?relay SYMBOL "?relay", aps_FindGroup
aps_RemoveAllGroup  SYMBOL "aps_RemoveAllGroup"
??aps_RemoveAllGroup?relay SYMBOL "?relay", aps_RemoveAllGroup
aps_RemoveGroup     SYMBOL "aps_RemoveGroup"
??aps_RemoveGroup?relay SYMBOL "?relay", aps_RemoveGroup
osal_mem_alloc      SYMBOL "osal_mem_alloc"
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
??osal_memset?relay SYMBOL "?relay", osal_memset
osal_nv_item_init   SYMBOL "osal_nv_item_init"
??osal_nv_item_init?relay SYMBOL "?relay", osal_nv_item_init
osal_nv_read        SYMBOL "osal_nv_read"
??osal_nv_read?relay SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
??osal_nv_write?relay SYMBOL "?relay", osal_nv_write
zcl_ReadAttrData    SYMBOL "zcl_ReadAttrData"
??zcl_ReadAttrData?relay SYMBOL "?relay", zcl_ReadAttrData
zcl_SendCommand     SYMBOL "zcl_SendCommand"
??zcl_SendCommand?relay SYMBOL "?relay", zcl_SendCommand
zcl_SendDefaultRspCmd SYMBOL "zcl_SendDefaultRspCmd"
??zcl_SendDefaultRspCmd?relay SYMBOL "?relay", zcl_SendDefaultRspCmd
zcl_registerPlugin  SYMBOL "zcl_registerPlugin"
??zcl_registerPlugin?relay SYMBOL "?relay", zcl_registerPlugin
zclGeneral_AddScene SYMBOL "zclGeneral_AddScene"
??zclGeneral_AddScene?relay SYMBOL "?relay", zclGeneral_AddScene
zclGeneral_CountAllScenes SYMBOL "zclGeneral_CountAllScenes"
??zclGeneral_CountAllScenes?relay SYMBOL "?relay", zclGeneral_CountAllScenes
zclGeneral_CountScenes SYMBOL "zclGeneral_CountScenes"
??zclGeneral_CountScenes?relay SYMBOL "?relay", zclGeneral_CountScenes
zclGeneral_FindAllScenesForGroup SYMBOL "zclGeneral_FindAllScenesForGroup"
??zclGeneral_FindAllScenesForGroup?relay SYMBOL "?relay", zclGeneral_FindAllScenesForGroup
zclGeneral_FindScene SYMBOL "zclGeneral_FindScene"
??zclGeneral_FindScene?relay SYMBOL "?relay", zclGeneral_FindScene
zclGeneral_ReadSceneCountCB SYMBOL "zclGeneral_ReadSceneCountCB"
??zclGeneral_ReadSceneCountCB?relay SYMBOL "?relay", zclGeneral_ReadSceneCountCB
zclGeneral_RegisterCmdCallbacks SYMBOL "zclGeneral_RegisterCmdCallbacks"
??zclGeneral_RegisterCmdCallbacks?relay SYMBOL "?relay", zclGeneral_RegisterCmdCallbacks
zclGeneral_RemoveAllScenes SYMBOL "zclGeneral_RemoveAllScenes"
??zclGeneral_RemoveAllScenes?relay SYMBOL "?relay", zclGeneral_RemoveAllScenes
zclGeneral_RemoveScene SYMBOL "zclGeneral_RemoveScene"
??zclGeneral_RemoveScene?relay SYMBOL "?relay", zclGeneral_RemoveScene
zclGeneral_ScenesInit SYMBOL "zclGeneral_ScenesInit"
??zclGeneral_ScenesInit?relay SYMBOL "?relay", zclGeneral_ScenesInit
zclGeneral_ScenesSave SYMBOL "zclGeneral_ScenesSave"
??zclGeneral_ScenesSave?relay SYMBOL "?relay", zclGeneral_ScenesSave
zclGeneral_SendAddGroupRequest SYMBOL "zclGeneral_SendAddGroupRequest"
??zclGeneral_SendAddGroupRequest?relay SYMBOL "?relay", zclGeneral_SendAddGroupRequest
zclGeneral_SendAddSceneRequest SYMBOL "zclGeneral_SendAddSceneRequest"
??zclGeneral_SendAddSceneRequest?relay SYMBOL "?relay", zclGeneral_SendAddSceneRequest
zclGeneral_SendGroupGetMembershipRequest SYMBOL "zclGeneral_SendGroupGetMembershipRequest"
??zclGeneral_SendGroupGetMembershipRequest?rela SYMBOL "?relay", zclGeneral_SendGroupGetMembershipRequest
zclGeneral_SendGroupRequest SYMBOL "zclGeneral_SendGroupRequest"
??zclGeneral_SendGroupRequest?relay SYMBOL "?relay", zclGeneral_SendGroupRequest
zclGeneral_SendGroupResponse SYMBOL "zclGeneral_SendGroupResponse"
??zclGeneral_SendGroupResponse?relay SYMBOL "?relay", zclGeneral_SendGroupResponse
zclGeneral_SendGroupViewResponse SYMBOL "zclGeneral_SendGroupViewResponse"
??zclGeneral_SendGroupViewResponse?relay SYMBOL "?relay", zclGeneral_SendGroupViewResponse
zclGeneral_SendIdentify SYMBOL "zclGeneral_SendIdentify"
??zclGeneral_SendIdentify?relay SYMBOL "?relay", zclGeneral_SendIdentify
zclGeneral_SendIdentifyEZModeInvoke SYMBOL "zclGeneral_SendIdentifyEZModeInvoke"
??zclGeneral_SendIdentifyEZModeInvoke?relay SYMBOL "?relay", zclGeneral_SendIdentifyEZModeInvoke
zclGeneral_SendIdentifyQueryResponse SYMBOL "zclGeneral_SendIdentifyQueryResponse"
??zclGeneral_SendIdentifyQueryResponse?relay SYMBOL "?relay", zclGeneral_SendIdentifyQueryResponse
zclGeneral_SendIdentifyUpdateCommState SYMBOL "zclGeneral_SendIdentifyUpdateCommState"
??zclGeneral_SendIdentifyUpdateCommState?relay SYMBOL "?relay", zclGeneral_SendIdentifyUpdateCommState
zclGeneral_SendLevelControlMoveRequest SYMBOL "zclGeneral_SendLevelControlMoveRequest"
??zclGeneral_SendLevelControlMoveRequest?relay SYMBOL "?relay", zclGeneral_SendLevelControlMoveRequest
zclGeneral_SendLevelControlMoveToLevelRequest SYMBOL "zclGeneral_SendLevelControlMoveToLevelRequest"
??zclGeneral_SendLevelControlMoveToLevelRequest SYMBOL "?relay", zclGeneral_SendLevelControlMoveToLevelRequest
zclGeneral_SendLevelControlStepRequest SYMBOL "zclGeneral_SendLevelControlStepRequest"
??zclGeneral_SendLevelControlStepRequest?relay SYMBOL "?relay", zclGeneral_SendLevelControlStepRequest
zclGeneral_SendLevelControlStopRequest SYMBOL "zclGeneral_SendLevelControlStopRequest"
??zclGeneral_SendLevelControlStopRequest?relay SYMBOL "?relay", zclGeneral_SendLevelControlStopRequest
zclGeneral_SendSceneGetMembershipResponse SYMBOL "zclGeneral_SendSceneGetMembershipResponse"
??zclGeneral_SendSceneGetMembershipResponse?rel SYMBOL "?relay", zclGeneral_SendSceneGetMembershipResponse
zclGeneral_SendSceneRequest SYMBOL "zclGeneral_SendSceneRequest"
??zclGeneral_SendSceneRequest?relay SYMBOL "?relay", zclGeneral_SendSceneRequest
zclGeneral_SendSceneResponse SYMBOL "zclGeneral_SendSceneResponse"
??zclGeneral_SendSceneResponse?relay SYMBOL "?relay", zclGeneral_SendSceneResponse
zclGeneral_SendSceneViewRsp SYMBOL "zclGeneral_SendSceneViewRsp"
??zclGeneral_SendSceneViewRsp?relay SYMBOL "?relay", zclGeneral_SendSceneViewRsp

        EXTERN ??addSceneSelector_setGroupID?relay
        FUNCTION ??addSceneSelector_setGroupID?relay,00H
        EXTERN ??addSceneSelector_setSceneID?relay
        FUNCTION ??addSceneSelector_setSceneID?relay,00H
        EXTERN ??aps_CountAllGroups?relay
        FUNCTION ??aps_CountAllGroups?relay,00H
        EXTERN ??aps_FindAllGroupsForEndpoint?relay
        FUNCTION ??aps_FindAllGroupsForEndpoint?relay,00H
        EXTERN ??aps_FindGroup?relay
        FUNCTION ??aps_FindGroup?relay,00H
        EXTERN ??aps_RemoveAllGroup?relay
        FUNCTION ??aps_RemoveAllGroup?relay,00H
        EXTERN ??aps_RemoveGroup?relay
        FUNCTION ??aps_RemoveGroup?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_mem_free?relay
        FUNCTION ??osal_mem_free?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_memset?relay
        FUNCTION ??osal_memset?relay,00H
        EXTERN ??osal_nv_item_init?relay
        FUNCTION ??osal_nv_item_init?relay,00H
        EXTERN ??osal_nv_read?relay
        FUNCTION ??osal_nv_read?relay,00H
        EXTERN ??osal_nv_write?relay
        FUNCTION ??osal_nv_write?relay,00H
        EXTERN ??zcl_ReadAttrData?relay
        FUNCTION ??zcl_ReadAttrData?relay,00H
        EXTERN ??zcl_SendCommand?relay
        FUNCTION ??zcl_SendCommand?relay,00H
        EXTERN ??zcl_SendDefaultRspCmd?relay
        FUNCTION ??zcl_SendDefaultRspCmd?relay,00H
        EXTERN ??zcl_registerPlugin?relay
        FUNCTION ??zcl_registerPlugin?relay,00H
        EXTERN addSceneSelector_setGroupID
        FUNCTION addSceneSelector_setGroupID,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN addSceneSelector_setSceneID
        FUNCTION addSceneSelector_setSceneID,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_CountAllGroups
        FUNCTION aps_CountAllGroups,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_FindAllGroupsForEndpoint
        FUNCTION aps_FindAllGroupsForEndpoint,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_FindGroup
        FUNCTION aps_FindGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_RemoveAllGroup
        FUNCTION aps_RemoveAllGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_RemoveGroup
        FUNCTION aps_RemoveGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_item_init
        FUNCTION osal_nv_item_init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 70, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_ReadAttrData
        FUNCTION zcl_ReadAttrData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendCommand
        FUNCTION zcl_SendCommand,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendDefaultRspCmd
        FUNCTION zcl_SendDefaultRspCmd,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_registerPlugin
        FUNCTION zcl_registerPlugin,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// C:\Users\JC_liang\Desktop\LIFUD\面板Z-Stack Home 1.2.2a.44539\Components\stack\zcl\zcl_general.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_general.c
//    3   Revised:        $Date: 2015-09-10 09:36:48 -0700 (Thu, 10 Sep 2015) $
//    4   Revision:       $Revision: 44493 $
//    5 
//    6   Description:    Zigbee Cluster Library - General.  This application receives all
//    7                   ZCL messages and initially parses them before passing to application.
//    8 
//    9 
//   10   Copyright 2006-2015 Texas Instruments Incorporated. All rights reserved.
//   11 
//   12   IMPORTANT: Your use of this Software is limited to those specific rights
//   13   granted under the terms of a software license agreement between the user
//   14   who downloaded the software, his/her employer (which must be your employer)
//   15   and Texas Instruments Incorporated (the "License"). You may not use this
//   16   Software unless you agree to abide by the terms of the License. The License
//   17   limits your use, and you acknowledge, that the Software may not be modified,
//   18   copied or distributed unless embedded on a Texas Instruments microcontroller
//   19   or used solely and exclusively in conjunction with a Texas Instruments radio
//   20   frequency transceiver, which is integrated into your product. Other than for
//   21   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   22   works of, modify, distribute, perform, display or sell this Software and/or
//   23   its documentation for any purpose.
//   24 
//   25   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   26   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   27   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   28   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   29   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   30   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   31   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   32   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   33   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   34   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   35   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   36 
//   37   Should you have any questions regarding your right to use this Software,
//   38   contact Texas Instruments Incorporated at www.TI.com.
//   39 **************************************************************************************************/
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "ZComDef.h"
//   45 #include "zcl.h"
//   46 #include "zcl_general.h"
//   47 //#include "ZDApp.h"
//   48 #include "zcl_ezmode.h"
//   49 
//   50 //###################################################################
//   51 //###################################################################
//   52 #include "add_common.h"
//   53 //###################################################################
//   54 //###################################################################
//   55 
//   56 #if defined ( INTER_PAN )
//   57   #include "stub_aps.h"
//   58 #endif
//   59 
//   60 /*********************************************************************
//   61  * MACROS
//   62  */
//   63 #define locationTypeAbsolute( a )          ( (a) & LOCATION_TYPE_ABSOLUTE )
//   64 #define locationType2D( a )                ( (a) & LOCATION_TYPE_2_D )
//   65 #define locationTypeCoordinateSystem( a )  ( (a) & LOCATION_TYPE_COORDINATE_SYSTEM )
//   66 
//   67 #ifdef ZCL_SCENES
//   68 #define zclGeneral_ScenesRemaingCapacity() ( ZCL_GEN_MAX_SCENES - zclGeneral_CountAllScenes() )
//   69 #endif // ZCL_SCENES
//   70 
//   71 /*********************************************************************
//   72  * CONSTANTS
//   73  */
//   74 
//   75 /*********************************************************************
//   76  * TYPEDEFS
//   77  */
//   78 typedef struct zclGenCBRec
//   79 {
//   80   struct zclGenCBRec        *next;
//   81   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   82   zclGeneral_AppCallbacks_t *CBs;     // Pointer to Callback function
//   83 } zclGenCBRec_t;
//   84 
//   85 typedef struct zclGenSceneItem
//   86 {
//   87   struct zclGenSceneItem    *next;
//   88   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   89   zclGeneral_Scene_t        scene;    // Scene info
//   90 } zclGenSceneItem_t;
//   91 
//   92 typedef struct zclGenAlarmItem
//   93 {
//   94   struct zclGenAlarmItem    *next;
//   95   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   96   zclGeneral_Alarm_t        alarm;    // Alarm info
//   97 } zclGenAlarmItem_t;
//   98 
//   99 // Scene NV types
//  100 typedef struct
//  101 {
//  102   uint16                    numRecs;
//  103 } nvGenScenesHdr_t;
//  104 
//  105 typedef struct zclGenSceneNVItem
//  106 {
//  107   uint8                     endpoint;
//  108   zclGeneral_Scene_t        scene;
//  109 } zclGenSceneNVItem_t;
//  110 
//  111 /*********************************************************************
//  112  * GLOBAL VARIABLES
//  113  */
//  114 
//  115 /*********************************************************************
//  116  * GLOBAL FUNCTIONS
//  117  */
//  118 
//  119 /*********************************************************************
//  120  * LOCAL VARIABLES
//  121  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  122 static zclGenCBRec_t *zclGenCBs = (zclGenCBRec_t *)NULL;
zclGenCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  123 static uint8 zclGenPluginRegisted = FALSE;
zclGenPluginRegisted:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  124 
//  125 #if defined( ZCL_SCENES )
//  126   #if !defined ( ZCL_STANDALONE )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  127     static zclGenSceneItem_t *zclGenSceneTable = (zclGenSceneItem_t *)NULL;
zclGenSceneTable:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  128   #endif
//  129 #endif // ZCL_SCENES
//  130 
//  131 #ifdef ZCL_ALARMS
//  132 static zclGenAlarmItem_t *zclGenAlarmTable = (zclGenAlarmItem_t *)NULL;
//  133 #endif // ZCL_ALARMS
//  134 
//  135 /*********************************************************************
//  136  * LOCAL FUNCTIONS
//  137  */
//  138 static ZStatus_t zclGeneral_HdlIncoming( zclIncoming_t *pInMsg );
//  139 static ZStatus_t zclGeneral_HdlInSpecificCommands( zclIncoming_t *pInMsg );
//  140 static zclGeneral_AppCallbacks_t *zclGeneral_FindCallbacks( uint8 endpoint );
//  141 
//  142 // Device Configuration and Installation clusters
//  143 #ifdef ZCL_BASIC
//  144 static ZStatus_t zclGeneral_ProcessInBasic( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  145 #endif // ZCL_BASIC
//  146 
//  147 #ifdef ZCL_IDENTIFY
//  148 static ZStatus_t zclGeneral_ProcessInIdentity( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  149 #endif // ZCL_IDENTIFY
//  150 
//  151 // Groups and Scenes clusters
//  152 #ifdef ZCL_GROUPS
//  153 static ZStatus_t zclGeneral_ProcessInGroupsServer( zclIncoming_t *pInMsg );
//  154 static ZStatus_t zclGeneral_ProcessInGroupsClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  155 static ZStatus_t zclGeneral_AddGroup( uint8 endPoint, aps_Group_t *group, uint8 *pData );
//  156 #endif // ZCL_GROUPS
//  157 
//  158 #ifdef ZCL_SCENES
//  159 static ZStatus_t zclGeneral_ProcessInScenesServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  160 static ZStatus_t zclGeneral_ProcessInScenesClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  161 #endif // ZCL_SCENES
//  162 
//  163 // On/Off and Level Control Configuration clusters
//  164 #ifdef ZCL_ON_OFF
//  165 static ZStatus_t zclGeneral_ProcessInOnOff( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  166 #endif // ZCL_ONOFF
//  167 
//  168 #ifdef ZCL_LEVEL_CTRL
//  169 static ZStatus_t zclGeneral_ProcessInLevelControl( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  170 #endif // ZCL_LEVEL_CTRL
//  171 
//  172 // Alarms cluster
//  173 #ifdef ZCL_ALARMS
//  174 static ZStatus_t zclGeneral_ProcessInAlarmsServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  175 static ZStatus_t zclGeneral_ProcessInAlarmsClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  176 #endif // ZCL_ALARMS
//  177 
//  178 // Location cluster
//  179 #ifdef ZCL_LOCATION
//  180 static ZStatus_t zclGeneral_ProcessInLocationServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  181 static ZStatus_t zclGeneral_ProcessInLocationClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  182 #endif // ZCL_LOCATION
//  183 
//  184 #ifdef ZCL_SCENES
//  185   #if !defined ( ZCL_STANDALONE )
//  186     static uint8 zclGeneral_ScenesInitNV( void );
//  187     static void zclGeneral_ScenesSetDefaultNV( void );
//  188     static void zclGeneral_ScenesWriteNV( void );
//  189     static uint16 zclGeneral_ScenesRestoreFromNV( void );
//  190   #endif
//  191 #endif // ZCL_SCENES
//  192 
//  193 /*********************************************************************
//  194  * @fn      zclGeneral_RegisterCmdCallbacks
//  195  *
//  196  * @brief   Register an applications command callbacks
//  197  *
//  198  * @param   endpoint - application's endpoint
//  199  * @param   callbacks - pointer to the callback record.
//  200  *
//  201  * @return  ZMemError if not able to allocate
//  202  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  203 ZStatus_t zclGeneral_RegisterCmdCallbacks( uint8 endpoint, zclGeneral_AppCallbacks_t *callbacks )
zclGeneral_RegisterCmdCallbacks:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
        CODE
//  204 {
        FUNCALL zclGeneral_RegisterCmdCallbacks, zcl_registerPlugin
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RegisterCmdCallbacks, zclGeneral_ScenesInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RegisterCmdCallbacks, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0,R1
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  205   zclGenCBRec_t *pNewItem;
//  206   zclGenCBRec_t *pLoop;
//  207 
//  208   // Register as a ZCL Plugin
//  209   if ( zclGenPluginRegisted == FALSE )
        MOV     DPTR,#zclGenPluginRegisted
        MOVX    A,@DPTR
        JNZ     ??zclGeneral_RegisterCmdCallbacks_0
//  210   {
//  211     zcl_registerPlugin( ZCL_CLUSTER_ID_GEN_BASIC,
//  212                         ZCL_CLUSTER_ID_GEN_MULTISTATE_VALUE_BASIC,
//  213                         zclGeneral_HdlIncoming );
        ; Setup parameters for call to function zcl_registerPlugin
        MOV     ?V2,#??zclGeneral_HdlIncoming?relay & 0xff
        MOV     ?V3,#(??zclGeneral_HdlIncoming?relay >> 8) & 0xff
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#0x14
        MOV     R5,#0x0
        MOV     R2,#0x0
        MOV     R3,#0x0
        LCALL   ??zcl_registerPlugin?relay; Banked call to: zcl_registerPlugin
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
//  214 
//  215 #ifdef ZCL_SCENES
//  216     // Initialize the Scenes Table
//  217     zclGeneral_ScenesInit();
        ; Setup parameters for call to function zclGeneral_ScenesInit
        LCALL   ??zclGeneral_ScenesInit?relay; Banked call to: zclGeneral_ScenesInit
//  218 #endif // ZCL_SCENES
//  219 
//  220     zclGenPluginRegisted = TRUE;
        MOV     DPTR,#zclGenPluginRegisted
        MOV     A,#0x1
        MOVX    @DPTR,A
//  221   }
//  222 
//  223   // Fill in the new profile list
//  224   pNewItem = zcl_mem_alloc( sizeof( zclGenCBRec_t ) );
??zclGeneral_RegisterCmdCallbacks_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R0,?V2
        MOV     R1,?V3
//  225   if ( pNewItem == NULL )
        MOV     A,R0
        ORL     A,R1
        JNZ     ??zclGeneral_RegisterCmdCallbacks_1
//  226     return (ZMemError);
        MOV     R1,#0x10
        SJMP    ??zclGeneral_RegisterCmdCallbacks_2
//  227 
//  228   pNewItem->next = (zclGenCBRec_t *)NULL;
??zclGeneral_RegisterCmdCallbacks_1:
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  229   pNewItem->endpoint = endpoint;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOV     A,?V0
        MOVX    @DPTR,A
//  230   pNewItem->CBs = callbacks;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
//  231 
//  232   // Find spot in list
//  233   if (  zclGenCBs == NULL )
        MOV     DPTR,#zclGenCBs
        LCALL   ??Subroutine92_0 & 0xFFFF
??CrossCallReturnLabel_222:
        MOV     DPTR,#zclGenCBs
        JZ      ??zclGeneral_RegisterCmdCallbacks_3
//  234   {
//  235     zclGenCBs = pNewItem;
//  236   }
//  237   else
//  238   {
//  239     // Look for end of list
//  240     pLoop = zclGenCBs;
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??zclGeneral_RegisterCmdCallbacks_4
//  241     while ( pLoop->next != NULL )
//  242       pLoop = pLoop->next;
??zclGeneral_RegisterCmdCallbacks_5:
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
??zclGeneral_RegisterCmdCallbacks_4:
        LCALL   ??Subroutine91_0 & 0xFFFF
??CrossCallReturnLabel_220:
        JNZ     ??zclGeneral_RegisterCmdCallbacks_5
//  243 
//  244     // Put new item at end of list
//  245     pLoop->next = pNewItem;
        MOV     DPL,R4
        MOV     DPH,R5
//  246   }
??zclGeneral_RegisterCmdCallbacks_3:
        LCALL   ?Subroutine56 & 0xFFFF
//  247 
//  248   return ( ZSuccess );
??CrossCallReturnLabel_178:
        MOV     R1,#0x0
??zclGeneral_RegisterCmdCallbacks_2:
        LJMP    ??Subroutine82_0 & 0xFFFF
          CFI EndBlock cfiBlock0
//  249 }
//  250 
//  251 #ifdef ZCL_IDENTIFY
//  252 /*********************************************************************
//  253  * @fn      zclGeneral_SendIdentify
//  254  *
//  255  * @brief   Call to send out an Identify Command
//  256  *
//  257  * @param   srcEP - Sending application's endpoint
//  258  * @param   dstAddr - where you want the message to go
//  259  * @param   identifyTime - how long the device will continue to identify itself (in seconds)
//  260  * @param   seqNum - identification number for the transaction
//  261  *
//  262  * @return  ZStatus_t
//  263  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  264 ZStatus_t zclGeneral_SendIdentify( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentify:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
        CODE
//  265                                    uint16 identifyTime, uint8 disableDefaultRsp, uint8 seqNum )
//  266 {
        FUNCALL zclGeneral_SendIdentify, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R1
        MOV     R6,A
//  267   uint8 buf[2];
//  268 
//  269   buf[0] = LO_UINT16( identifyTime );
        MOV     A,R4
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
//  270   buf[1] = HI_UINT16( identifyTime );
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine47 & 0xFFFF
//  271 
//  272   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  273                           COMMAND_IDENTIFY, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  274                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_131:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x2
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_20:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR     A
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_21:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0,#0x1
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock1
//  275 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond2 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
          CFI Conditional ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond3 Using cfiCommon0
          CFI (cfiCond3) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond3) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond3) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond3) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond3) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond3) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond3) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond3) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond3) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond3) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond3) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond3) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond3) CFA_SP SP+-2
          CFI (cfiCond3) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker4 Using cfiCommon1
          CFI (cfiPicker4) NoFunction
          CFI (cfiPicker4) Picker
        MOV     A,R5
          CFI EndBlock cfiCond2
          CFI EndBlock cfiCond3
          CFI EndBlock cfiPicker4
        REQUIRE ??Subroutine76_0
        ; // Fall through to label ??Subroutine76_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine76_0:
          CFI Block cfiCond5 Using cfiCommon0
          CFI Function zclGeneral_ScenesInit
          CFI Conditional ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 68)
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function zclGeneral_SendIdentify
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond6) CFA_SP SP+-2
          CFI (cfiCond6) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+-2
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function osal_nv_write
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8
//  276 
//  277 /*********************************************************************
//  278  * @fn      zclGeneral_SendIdentifyEZModeInvoke
//  279  *
//  280  * @brief   Call to send out an Identify EZ-Mode Invoke Command
//  281  *
//  282  * @param   srcEP - Sending application's endpoint
//  283  * @param   dstAddr - where you want the message to go
//  284  * @param   action - describes the EZ-Mode action to be performed
//  285  * @param   seqNum - identification number for the transaction
//  286  *
//  287  * @return  ZStatus_t
//  288  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  289 ZStatus_t zclGeneral_SendIdentifyEZModeInvoke( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyEZModeInvoke:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
        CODE
//  290                                                uint8 action, uint8 disableDefaultRsp, uint8 seqNum )
//  291 {
        FUNCALL zclGeneral_SendIdentifyEZModeInvoke, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
//  292   uint8 buf[1];
//  293 
//  294   buf[0] = action;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine77_0 & 0xFFFF
//  295 
//  296   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  297                           COMMAND_IDENTIFY_EZMODE_INVOKE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  298                           disableDefaultRsp, 0, seqNum, 1, buf );
??CrossCallReturnLabel_138:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V2,#0x1
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_144:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R5
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V1,#0x0
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V1,#0x2
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R4,#0x3
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,#0x1
        LJMP    ??Subroutine81_0 & 0xFFFF
          CFI EndBlock cfiBlock9
//  299 }
//  300 
//  301 /*********************************************************************
//  302  * @fn      zclGeneral_SendIdentifyUpdateCommState
//  303  *
//  304  * @brief   Call to send out an Identify Update Commission State Command
//  305  *
//  306  * @param   srcEP - Sending application's endpoint
//  307  * @param   dstAddr - where you want the message to go
//  308  * @param   action - describes the EZ-Mode action to be performed
//  309  * @param   commissionStateMask - updates the device's commission state
//  310  * @param   seqNum - identification number for the transaction
//  311  *
//  312  * @return  ZStatus_t
//  313  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  314 ZStatus_t zclGeneral_SendIdentifyUpdateCommState( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyUpdateCommState:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyUpdateCommState
        CODE
//  315                                                   uint8 action, uint8 commissionStateMask,
//  316                                                   uint8 disableDefaultRsp, uint8 seqNum )
//  317 {
        FUNCALL zclGeneral_SendIdentifyUpdateCommState, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
//  318   uint8 buf[2];
//  319 
//  320   buf[0] = action;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
//  321   buf[1] = commissionStateMask;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        LCALL   ??Subroutine77_0 & 0xFFFF
//  322 
//  323   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  324                           COMMAND_IDENTIFY_UPDATE_COMMISSION_STATE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  325                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_139:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V2,#0x2
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_145:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_146:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V1,#0x0
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V1,#0x3
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,#0x3
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock10
//  326 }
//  327 
//  328 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  329 /*********************************************************************
//  330  * @fn      zclGeneral_SendIdentifyTriggerEffect
//  331  *
//  332  * @brief   Call to send out a Trigger Effect Command
//  333  *
//  334  * @param   srcEP - Sending application's endpoint
//  335  * @param   dstAddr - where you want the message to go
//  336  * @param   effectId - identify effect to use
//  337  * @param   effectVariant - which variant of effect to be triggered
//  338  * @param   disableDefaultRsp - whether to disable the Default Response command
//  339  * @param   seqNum - identification number for the transaction
//  340  *
//  341  * @return  ZStatus_t
//  342  */
//  343 ZStatus_t zclGeneral_SendIdentifyTriggerEffect( uint8 srcEP, afAddrType_t *dstAddr,
//  344                                                 uint8 effectId, uint8 effectVariant,
//  345                                                 uint8 disableDefaultRsp, uint8 seqNum )
//  346 {
//  347   uint8 buf[2];
//  348 
//  349   buf[0] = effectId;
//  350   buf[1] = effectVariant;
//  351 
//  352   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  353                           COMMAND_IDENTIFY_TRIGGER_EFFECT, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  354                           disableDefaultRsp, 0, seqNum, 2, buf );
//  355 }
//  356 #endif // ZCL_LIGHT_LINK_ENHANCE
//  357 
//  358 /*********************************************************************
//  359  * @fn      zclGeneral_SendIdentifyQueryResponse
//  360  *
//  361  * @brief   Call to send out an Identify Query Response Command
//  362  *
//  363  * @param   srcEP - Sending application's endpoint
//  364  * @param   dstAddr - where you want the message to go
//  365  * @param   timeout - how long the device will continue to identify itself (in seconds)
//  366  * @param   seqNum - identification number for the transaction
//  367  *
//  368  * @return  ZStatus_t
//  369  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  370 ZStatus_t zclGeneral_SendIdentifyQueryResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyQueryResponse:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyQueryResponse
        CODE
//  371                                                 uint16 timeout, uint8 disableDefaultRsp, uint8 seqNum )
//  372 {
        FUNCALL zclGeneral_SendIdentifyQueryResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R1
        MOV     R6,A
//  373   uint8 buf[2];
//  374 
//  375   buf[0] = LO_UINT16( timeout );
        MOV     A,R4
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
//  376   buf[1] = HI_UINT16( timeout );
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine47 & 0xFFFF
//  377 
//  378   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  379                           COMMAND_IDENTIFY_QUERY_RSP, TRUE,
//  380                           ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_132:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x2
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_22:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR     A
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_23:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V0,#0x1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock11
//  381 }
//  382 #endif // ZCL_IDENTIFY
//  383 
//  384 #ifdef ZCL_GROUPS
//  385 /*********************************************************************
//  386  * @fn      zclGeneral_SendGroupRequest
//  387  *
//  388  * @brief   Send a Group Request to a device.  You can also use the
//  389  *          appropriate macro.
//  390  *
//  391  * @param   srcEP - Sending Apps endpoint
//  392  * @param   dstAddr - where to send the request
//  393  * @param   cmd - one of the following:
//  394  *              COMMAND_GROUP_VIEW
//  395  *              COMMAND_GROUP_REMOVE
//  396  * @param   groupID -
//  397  *
//  398  * @return  ZStatus_t
//  399  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  400 ZStatus_t zclGeneral_SendGroupRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupRequest:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
        CODE
//  401                                        uint8 cmd, uint16 groupID, uint8 disableDefaultRsp, uint8 seqNum )
//  402 {
        FUNCALL zclGeneral_SendGroupRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,R1
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
//  403   uint8 buf[2];
//  404 
//  405   buf[0] = LO_UINT16( groupID );
//  406   buf[1] = HI_UINT16( groupID );
??CrossCallReturnLabel_36:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
//  407 
//  408   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  409                             cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  410                             disableDefaultRsp, 0, seqNum, 2, buf ) );
??CrossCallReturnLabel_134:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V2,#0x2
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_147:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R7
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V1,#0x0
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R6
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,#0x4
        MOV     R5,#0x0
        MOV     R1,?V0
        LJMP    ??Subroutine80_0 & 0xFFFF
          CFI EndBlock cfiBlock12

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond13 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_134
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond14 Using cfiCommon0
          CFI (cfiCond14) Function zclGeneral_SendGroupResponse
          CFI (cfiCond14) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond14) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond14) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond14) CFA_SP SP+-2
          CFI (cfiCond14) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_136
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+-2
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-2
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker17 Using cfiCommon1
          CFI (cfiPicker17) NoFunction
          CFI (cfiPicker17) Picker
        MOV     A,R1
          CFI EndBlock cfiCond13
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiPicker17
        REQUIRE ??Subroutine77_0
        ; // Fall through to label ??Subroutine77_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine77_0:
          CFI Block cfiCond18 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
          CFI Conditional ??CrossCallReturnLabel_138
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond19) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond19) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond19) CFA_SP SP+-2
          CFI (cfiCond19) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond20 Using cfiCommon0
          CFI (cfiCond20) Function zclGeneral_SendLevelControlMoveRequest
          CFI (cfiCond20) Conditional ??CrossCallReturnLabel_140
          CFI (cfiCond20) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond20) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond20) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond20) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond20) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond20) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond20) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond20) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond20) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond20) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond20) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond20) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond20) CFA_SP SP+-2
          CFI (cfiCond20) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function zclGeneral_SendGroupRequest
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_134
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+-2
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function zclGeneral_SendGroupResponse
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+-2
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond23 Using cfiCommon0
          CFI (cfiCond23) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond23) Conditional ??CrossCallReturnLabel_136
          CFI (cfiCond23) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond23) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond23) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond23) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond23) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond23) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond23) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond23) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond23) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond23) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond23) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond23) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond23) CFA_SP SP+-2
          CFI (cfiCond23) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond24 Using cfiCommon0
          CFI (cfiCond24) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond24) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond24) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond24) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond24) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond24) CFA_SP SP+-2
          CFI (cfiCond24) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker25 Using cfiCommon1
          CFI (cfiPicker25) NoFunction
          CFI (cfiPicker25) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        RET
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiCond23
          CFI EndBlock cfiCond24
          CFI EndBlock cfiPicker25
//  411 }
//  412 
//  413 /*********************************************************************
//  414  * @fn      zclGeneral_SendAddGroupRequest
//  415  *
//  416  * @brief   Send the Add Group Request to a device
//  417  *
//  418  * @param   srcEP - Sending Apps endpoint
//  419  * @param   dstAddr - where to send the request
//  420  * @param   cmd - one of the following:
//  421  *                COMMAND_GROUP_ADD
//  422  *                COMMAND_GROUP_ADD_IF_IDENTIFYING
//  423  * @param   groupID - pointer to the group structure
//  424  * @param   groupName - pointer to Group Name.  This is a Zigbee
//  425  *          string data type, so the first byte is the length of the
//  426  *          name (in bytes), then the name.
//  427  *
//  428  * @return  ZStatus_t
//  429  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  430 ZStatus_t zclGeneral_SendAddGroupRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendAddGroupRequest:
          CFI Block cfiBlock26 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
        CODE
//  431                                           uint8 cmd, uint16 groupID, uint8 *groupName,
//  432                                           uint8 disableDefaultRsp, uint8 seqNum )
//  433 {
        FUNCALL zclGeneral_SendAddGroupRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV     ?V7,R1
        MOV     ?V12,R2
        MOV     ?V13,R3
        MOV     ?V11,R4
        MOV     ?V10,R5
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
//  434   uint8 *buf;
//  435   uint8 *pBuf;
//  436   uint8 len;
//  437   ZStatus_t status;
//  438 
//  439   len = 2;    // Group ID
//  440   len += groupName[0] + 1;  // String + 1 for length
        MOV     DPL,?V0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,#0x3
        MOV     R6,A
//  441 
//  442   buf = zcl_mem_alloc( len );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
//  443   if ( buf )
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??zclGeneral_SendAddGroupRequest_0 & 0xFFFF
//  444   {
//  445     pBuf = buf;
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine29 & 0xFFFF
//  446     *pBuf++ = LO_UINT16( groupID );
??CrossCallReturnLabel_38:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
//  447     *pBuf++ = HI_UINT16( groupID );
        MOV     A,R1
        LCALL   ?Subroutine50 & 0xFFFF
//  448     *pBuf++ = groupName[0]; // string length
??CrossCallReturnLabel_92:
        MOVX    A,@DPTR
        MOV     DPL,?V8
        MOV     DPH,?V9
        LCALL   ?Subroutine50 & 0xFFFF
//  449     zcl_memcpy( pBuf, &(groupName[1]), groupName[0] );
??CrossCallReturnLabel_93:
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     R2,?V8
        MOV     R3,?V9
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
//  450 
//  451     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  452                               cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  453                               disableDefaultRsp, 0, seqNum, len, buf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0,R6
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_24:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        CLR     A
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,?V10
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V0,#0x1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,?V11
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     R4,#0x4
        MOV     R5,#0x0
        MOV     R2,?V12
        MOV     R3,?V13
        MOV     R1,?V7
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R1
        MOV     R6,A
//  454     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V2
        MOV     R3,?V3
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        SJMP    ??zclGeneral_SendAddGroupRequest_1
//  455   }
//  456   else
//  457     status = ZMemError;
??zclGeneral_SendAddGroupRequest_0:
        MOV     R6,#0x10
          CFI EndBlock cfiBlock26
//  458 
//  459   return ( status );
??zclGeneral_SendAddGroupRequest_1:
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
//  460 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock27 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R1,A
        LJMP    ??Subroutine99_0 & 0xFFFF
          CFI EndBlock cfiBlock27

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond28 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_92
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond29 Using cfiCommon0
          CFI (cfiCond29) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond29) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond29) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond29) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond29) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond29) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond29) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond29) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond29) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond29) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond29) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond29) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond29) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond29) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond29) CFA_SP SP+-2
          CFI (cfiCond29) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker30 Using cfiCommon1
          CFI (cfiPicker30) NoFunction
          CFI (cfiPicker30) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     ?V8,DPL
        MOV     ?V9,DPH
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V0
        MOV     DPH,?V1
        RET
          CFI EndBlock cfiCond28
          CFI EndBlock cfiCond29
          CFI EndBlock cfiPicker30
//  461 
//  462 /*********************************************************************
//  463  * @fn      zclGeneral_SendGroupGetMembershipRequest
//  464  *
//  465  * @brief   Send a Get Group Membership (Resposne) Command to a device
//  466  *
//  467  * @param   srcEP - Sending Apps endpoint
//  468  * @param   dstAddr - where to send the request
//  469  * @param   cmd - one of the following:
//  470  *                COMMAND_GROUP_GET_MEMBERSHIP
//  471  *                COMMAND_GROUP_GET_MEMBERSHIP_RSP
//  472  * @param   groupID - pointer to the group structure
//  473  * @param   groupName - pointer to Group Name.  This is a Zigbee
//  474  *          string data type, so the first byte is the length of the
//  475  *          name (in bytes), then the name.
//  476  *
//  477  * @return  ZStatus_t
//  478  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  479 ZStatus_t zclGeneral_SendGroupGetMembershipRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupGetMembershipRequest:
          CFI Block cfiBlock31 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
        CODE
//  480                                                     uint8 cmd, uint8 rspCmd, uint8 direction, uint8 capacity,
//  481                                                     uint8 grpCnt, uint16 *grpList, uint8 disableDefaultRsp, uint8 seqNum )
//  482 {
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV     ?V2,R1
        MOV     ?V6,R2
        MOV     ?V7,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  483   uint8 *buf;
//  484   uint8 *pBuf;
//  485   uint8 len = 0;
        MOV     R0,#0x0
//  486   uint8 i;
//  487   ZStatus_t status;
//  488 
//  489   if ( rspCmd )
        JZ      ??zclGeneral_SendGroupGetMembershipRequest_0
//  490     len++;  // Capacity
        MOV     R0,#0x1
??zclGeneral_SendGroupGetMembershipRequest_0:
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V3,A
//  491 
//  492   len++;  // Group Count
//  493   len += sizeof ( uint16 ) * grpCnt;  // Group List
        CLR     C
        RLC     A
        INC     A
        ADD     A,R0
        MOV     R0,A
//  494 
//  495   buf = zcl_mem_alloc( len );
        MOV     ?V4,R0
        MOV     ?V5,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,?V5
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
//  496   if ( buf )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??zclGeneral_SendGroupGetMembershipRequest_1 & 0xFFFF
//  497   {
//  498     pBuf = buf;
        MOV     R0,?V0
        MOV     R1,?V1
//  499     if ( rspCmd )
        MOV     A,R7
        JZ      ??CrossCallReturnLabel_29
//  500       *pBuf++ = capacity;
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine24 & 0xFFFF
//  501 
//  502     *pBuf++ = grpCnt;
??CrossCallReturnLabel_29:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,?V3
        LCALL   ?Subroutine68 & 0xFFFF
//  503     for ( i = 0; i < grpCnt; i++ )
??CrossCallReturnLabel_117:
        MOV     ?V8,#0x0
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_64:
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        SJMP    ??zclGeneral_SendGroupGetMembershipRequest_2
//  504     {
//  505       *pBuf++ = LO_UINT16( grpList[i] );
??zclGeneral_SendGroupGetMembershipRequest_3:
        MOV     R2,?V8
        MOV     A,R2
        ADD     A,R2
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        MOV     A,R4
        ADD     A,R2
        MOV     R2,A
        MOV     A,R5
        ADDC    A,R3
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine24 & 0xFFFF
//  506       *pBuf++ = HI_UINT16( grpList[i] );
??CrossCallReturnLabel_30:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
        INC     R0
        MOV     R1,DPH
//  507     }
        INC     ?V8
??zclGeneral_SendGroupGetMembershipRequest_2:
        MOV     A,?V8
        CLR     C
        SUBB    A,?V3
        JC      ??zclGeneral_SendGroupGetMembershipRequest_3
//  508 
//  509     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  510                               cmd, TRUE, direction,
//  511                               disableDefaultRsp, 0, seqNum, len, buf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_49:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        CLR     A
        MOV     ?V4,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_50:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_51:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V3,#0x1
        MOV     R0,#?V3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,R6
        MOV     ?V3,A
        MOV     R0,#?V3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R4,#0x4
        MOV     R5,#0x0
        MOV     R2,?V6
        MOV     R3,?V7
        MOV     R1,?V2
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V3,A
//  512     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        SJMP    ??zclGeneral_SendGroupGetMembershipRequest_4
//  513   }
//  514   else
//  515     status = ZMemError;
??zclGeneral_SendGroupGetMembershipRequest_1:
        MOV     ?V3,#0x10
//  516 
//  517   return ( status );
??zclGeneral_SendGroupGetMembershipRequest_4:
        MOV     R1,?V3
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock31
//  518 }
//  519 
//  520 /*********************************************************************
//  521  * @fn      zclGeneral_SendGroupResponse
//  522  *
//  523  * @brief   Send Group Response (not Group View Response)
//  524  *
//  525  * @param   srcEP - Sending application's endpoint
//  526  * @param   dstAddr - where you want the message to go
//  527  * @param   cmd - either COMMAND_GROUP_ADD_RSP or COMMAND_GROUP_REMOVE_RSP
//  528  * @param   status - group command status
//  529  * @param   groupID - what group
//  530  *
//  531  * @return  ZStatus_t
//  532  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  533 ZStatus_t zclGeneral_SendGroupResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupResponse:
          CFI Block cfiBlock32 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
        CODE
//  534                                         uint8 cmd, uint8 status, uint16 groupID,
//  535                                         uint8 disableDefaultRsp, uint8 seqNum )
//  536 {
        FUNCALL zclGeneral_SendGroupResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
//  537   uint8 buf[3];
//  538 
//  539   buf[0] = status;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
//  540   buf[1] = LO_UINT16( groupID );
??CrossCallReturnLabel_54:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  541   buf[2] = HI_UINT16( groupID );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
//  542 
//  543   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  544                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  545                           disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_135:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V2,#0x3
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_148:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_149:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R7
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R4,#0x4
          CFI EndBlock cfiBlock32
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
//  546 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock33 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,#0x3
        LJMP    ??Subroutine81_0 & 0xFFFF
          CFI EndBlock cfiBlock33
//  547 
//  548 /*********************************************************************
//  549  * @fn      zclGeneral_SendGroupViewResponse
//  550  *
//  551  * @brief   Call to send Group Response Command
//  552  *
//  553  * @param   srcEP - Sending application's endpoint
//  554  * @param   dstAddr - where you want the message to go
//  555  * @param   cmd - either COMMAND_GROUP_ADD_RSP or COMMAND_GROUP_REMOVE_RSP
//  556  * @param   status - group command status
//  557  * @param   grp - group info
//  558  *
//  559  * @return  ZStatus_t
//  560  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  561 ZStatus_t zclGeneral_SendGroupViewResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupViewResponse:
          CFI Block cfiBlock34 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
        CODE
//  562                                             uint8 status, aps_Group_t *grp, uint8 disableDefaultRsp, uint8 seqNum )
//  563 {
        FUNCALL zclGeneral_SendGroupViewResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV     ?V8,R1
        MOV     ?V12,R2
        MOV     ?V13,R3
        MOV     ?V7,R4
        MOV     ?V9,R5
//  564   uint8 *buf;
//  565   uint8 len;
//  566   ZStatus_t stat;
//  567 
//  568   len = 1 + 2 + 1; // Status + Group ID + name length
        MOV     R6,#0x4
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
//  569 
//  570   if ( status == ZCL_STATUS_SUCCESS )
        MOV     A,?V4
        ADD     A,#0x2
        MOV     ?V2,A
        CLR     A
        ADDC    A,?V5
        MOV     ?V3,A
        MOV     A,R4
        JNZ     ??zclGeneral_SendGroupViewResponse_0
//  571   {
//  572     len += grp->name[0];  // String length
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        ADD     A,R6
        MOV     R6,A
//  573   }
//  574 
//  575   buf = zcl_mem_alloc( len );
??zclGeneral_SendGroupViewResponse_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
//  576   if ( buf )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??zclGeneral_SendGroupViewResponse_1 & 0xFFFF
//  577   {
//  578     buf[0] = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V7
        MOVX    @DPTR,A
//  579     buf[1] = LO_UINT16( grp->ID );
        MOV     DPL,?V4
        MOV     DPH,?V5
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        LCALL   ?Subroutine57 & 0xFFFF
//  580     buf[2] = HI_UINT16( grp->ID );
??CrossCallReturnLabel_100:
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
//  581 
//  582     if ( status == ZCL_STATUS_SUCCESS )
        MOV     A,R2
        ADD     A,#0x3
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
        MOV     A,?V7
        JNZ     ??zclGeneral_SendGroupViewResponse_2
//  583     {
//  584       buf[3] = grp->name[0]; // string length
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine57 & 0xFFFF
//  585       zcl_memcpy( &buf[4], (&grp->name[1]), grp->name[0] );
//  586     }
??CrossCallReturnLabel_101:
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,?V0
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        SJMP    ??zclGeneral_SendGroupViewResponse_3
//  587     else //ZCL_STATUS_NOT_FOUND
//  588     {
//  589       buf[3] = 0;
??zclGeneral_SendGroupViewResponse_2:
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
//  590     }
//  591 
//  592     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  593                             COMMAND_GROUP_VIEW_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  594                             disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendGroupViewResponse_3:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V2,R6
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,?V9
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V2,#0x1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     R4,#0x4
        MOV     R5,#0x0
        MOV     R2,?V12
        MOV     R3,?V13
        MOV     R1,?V8
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R1
        MOV     R6,A
//  595     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        SJMP    ??zclGeneral_SendGroupViewResponse_4
//  596   }
//  597   else
//  598   {
//  599     stat = ZMemError;
??zclGeneral_SendGroupViewResponse_1:
        MOV     R6,#0x10
//  600   }
//  601 
//  602   return ( stat );
??zclGeneral_SendGroupViewResponse_4:
        LJMP    ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock34
//  603 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond35 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond36) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond36) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond36) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond36) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond36) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond36) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond36) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond36) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond36) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond36) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond36) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond36) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond36) CFA_SP SP+-2
          CFI (cfiCond36) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker37 Using cfiCommon1
          CFI (cfiPicker37) NoFunction
          CFI (cfiPicker37) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V4
        MOV     DPH,?V5
        INC     DPTR
        RET
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiPicker37
//  604 #endif // ZCL_GROUPS
//  605 
//  606 #ifdef ZCL_SCENES
//  607 /*********************************************************************
//  608  * @fn      zclGeneral_SendAddSceneRequest
//  609  *
//  610  * @brief   Send the (Enhanced) Add Scene Request to a device. You can
//  611  *           also use the appropriate macro.
//  612  *
//  613  * @param   srcEP - Sending Apps endpoint
//  614  * @param   dstAddr - where to send the request
//  615  * @param   scene - pointer to the scene structure
//  616  * @param  cmd - COMMAND_SCENE_ADD or COMMAND_SCENE_ENHANCED_ADD
//  617  * @param   disableDefaultRsp - whether to disable the Default Response command
//  618  * @param   seqNum - sequence number
//  619  *
//  620  * @return  ZStatus_t
//  621  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  622 ZStatus_t zclGeneral_SendAddSceneRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendAddSceneRequest:
          CFI Block cfiBlock38 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
        CODE
//  623                                           uint8 cmd, zclGeneral_Scene_t *scene,
//  624                                           uint8 disableDefaultRsp, uint8 seqNum )
//  625 {
        FUNCALL zclGeneral_SendAddSceneRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_218:
        MOV     ?V7,R1
        MOV     ?V15,R4
        MOV     ?V14,R5
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine14 & 0xFFFF
//  626   uint8 *buf;
//  627   uint8 *pBuf;
//  628   uint8 len;
//  629   ZStatus_t status;
//  630 
//  631   len = 2 + 1 + 2;    // Group ID + Scene ID + transition time
//  632   len += scene->name[0] + 1; // String + 1 for length
//  633 
//  634   // Add something for the extension field length
//  635   len += scene->extLen;
??CrossCallReturnLabel_4:
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_75:
        ADD     A,#0x6
        MOV     ?V0,A
//  636 
//  637   buf = zcl_mem_alloc( len );
        MOV     ?V1,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,?V1
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V8,R2
        MOV     ?V9,R3
//  638   if ( buf )
        MOV     A,R2
        ORL     A,?V9
        JNZ     $+5
        LJMP    ??zclGeneral_SendAddSceneRequest_0 & 0xFFFF
//  639   {
//  640     pBuf = buf;
        MOV     R6,?V8
        MOV     R7,?V9
//  641     *pBuf++ = LO_UINT16( scene->groupID );
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R6,DPL
        LCALL   ?Subroutine17 & 0xFFFF
//  642     *pBuf++ = HI_UINT16( scene->groupID );
//  643     *pBuf++ = scene->ID;
//  644     *pBuf++ = LO_UINT16( scene->transTime );
??CrossCallReturnLabel_9:
        MOV     A,?V2
        ADD     A,#0x3
        MOV     R0,A
        CLR     A
        ADDC    A,?V3
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_83:
        MOV     R7,DPH
//  645     *pBuf++ = HI_UINT16( scene->transTime );
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ?Subroutine25 & 0xFFFF
//  646     *pBuf++ = scene->name[0]; // string length
??CrossCallReturnLabel_32:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
//  647     zcl_memcpy( pBuf, &(scene->name[1]), scene->name[0] );
        ; Setup parameters for call to function osal_memcpy
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_142:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  648     pBuf += scene->name[0]; // move pass name
//  649 
//  650     // Add the extension fields
//  651     if ( scene->extLen > 0 )
        MOV     DPL,?V12
        MOV     DPH,?V13
        MOVX    A,@DPTR
        MOV     R4,A
        JZ      ??zclGeneral_SendAddSceneRequest_1
//  652       zcl_memcpy( pBuf, scene->extField, scene->extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V2
        ADD     A,#0x18
        MOV     ?V4,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V5,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R5,#0x0
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R6
        ADD     A,R0
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  653 
//  654     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  655                               cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  656                               disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendAddSceneRequest_1:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_25:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        CLR     A
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     A,?V14
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0,#0x1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,?V15
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     R4,#0x5
        MOV     R5,#0x0
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_65:
        MOV     R1,?V7
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R1
        MOV     R6,A
//  657     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V8
        MOV     R3,?V9
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        SJMP    ??zclGeneral_SendAddSceneRequest_2
//  658   }
//  659   else
//  660     status = ZMemError;
??zclGeneral_SendAddSceneRequest_0:
        MOV     R6,#0x10
          CFI EndBlock cfiBlock38
//  661 
//  662   return ( status );
??zclGeneral_SendAddSceneRequest_2:
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
//  663 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock39 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R1,A
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock39

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond40 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_142
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond41) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond41) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond41) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond41) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond41) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond41) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond41) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond41) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond41) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond41) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond41) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond41) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+-2
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker42 Using cfiCommon1
          CFI (cfiPicker42) NoFunction
          CFI (cfiPicker42) Picker
        MOV     A,?V2
        ADD     A,#0x8
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiPicker42
        REQUIRE ??Subroutine78_0
        ; // Fall through to label ??Subroutine78_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine78_0:
          CFI Block cfiCond43 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_141
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond44) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond44) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond44) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond44) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond44) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond44) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond44) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond44) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond44) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-2
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond45) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond45) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond45) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond45) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond45) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond45) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond45) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-2
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker46 Using cfiCommon1
          CFI (cfiPicker46) NoFunction
          CFI (cfiPicker46) Picker
        MOV     ?V4,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V5,A
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiPicker46

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond47 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
          CFI Conditional ??CrossCallReturnLabel_20
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function zclGeneral_SendIdentify
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+-2
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+-2
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond50 Using cfiCommon0
          CFI (cfiCond50) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond50) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond50) CFA_SP SP+-2
          CFI (cfiCond50) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond51) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond51) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond51) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond51) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond51) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond51) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond51) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond51) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond51) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond51) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+-2
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond52) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond52) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond52) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond52) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond52) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond52) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond52) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond52) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond52) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond52) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond52) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+-2
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond53) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond53) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond53) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond53) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond53) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond53) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond53) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond53) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-2
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-2
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-2
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker56 Using cfiCommon1
          CFI (cfiPicker56) NoFunction
          CFI (cfiPicker56) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiPicker56
//  664 
//  665 /*********************************************************************
//  666  * @fn      zclGeneral_SendSceneRequest
//  667  *
//  668  * @brief   Send a Scene Request to a device.  You can also use the
//  669  *          appropriate macro.
//  670  *
//  671  * @param   srcEP - Sending Apps endpoint
//  672  * @param   dstAddr - where to send the request
//  673  * @param   cmd - one of the following:
//  674  *              COMMAND_SCENE_VIEW
//  675  *              COMMAND_SCENE_REMOVE
//  676  *              COMMAND_SCENE_REMOVE_ALL
//  677  *              COMMAND_SCENE_STORE
//  678  *              COMMAND_SCENE_RECALL
//  679  *              COMMAND_SCENE_GET_MEMBERSHIP
//  680  *              COMMAND_SCENE_ENHANCED_VIEW
//  681  * @param   groupID - group ID
//  682  * @param   sceneID - scene ID (not applicable to COMMAND_SCENE_REMOVE_ALL and
//  683  *                    COMMAND_SCENE_GET_MEMBERSHIP)
//  684  * @param   disableDefaultRsp - whether to disable the Default Response command
//  685  * @param   seqNum - sequence number
//  686  * @return  ZStatus_t
//  687  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  688 ZStatus_t zclGeneral_SendSceneRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneRequest:
          CFI Block cfiBlock57 Using cfiCommon0
          CFI Function zclGeneral_SendSceneRequest
        CODE
//  689                                        uint8 cmd, uint16 groupID, uint8 sceneID,
//  690                                        uint8 disableDefaultRsp, uint8 seqNum )
//  691 {
        FUNCALL zclGeneral_SendSceneRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
//  692   uint8 buf[3];
//  693   uint8 len = 2;
        MOV     R4,#0x2
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
//  694 
//  695   buf[0] = LO_UINT16( groupID );
//  696   buf[1] = HI_UINT16( groupID );
??CrossCallReturnLabel_37:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
//  697 
//  698   if ( cmd != COMMAND_SCENE_REMOVE_ALL && cmd != COMMAND_SCENE_GET_MEMBERSHIP )
        MOV     A,#0x3
        XRL     A,R7
        JZ      ??zclGeneral_SendSceneRequest_0
        MOV     A,#0x6
        XRL     A,R7
        JZ      ??zclGeneral_SendSceneRequest_0
//  699   {
//  700     buf[2] = sceneID;
        MOV     A,R4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        MOVX    @DPTR,A
//  701     len++;
        MOV     R4,#0x3
//  702   }
//  703 
//  704   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  705                             cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  706                             disableDefaultRsp, 0, seqNum, len, buf ) );
??zclGeneral_SendSceneRequest_0:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V2,R4
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_150:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V1,#0x0
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R7
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R4,#0x5
        LJMP    ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock57
//  707 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond58 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_36
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function zclGeneral_SendSceneRequest
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+-2
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker60 Using cfiCommon1
          CFI (cfiPicker60) NoFunction
          CFI (cfiPicker60) Picker
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_207:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiPicker60
//  708 
//  709 /*********************************************************************
//  710  * @fn      zclGeneral_SendSceneResponse
//  711  *
//  712  * @brief   Send Group Response (not Group View Response)
//  713  *
//  714  * @param   srcEP - Sending application's endpoint
//  715  * @param   dstAddr - where you want the message to go
//  716  * @param   cmd - either COMMAND_SCENE_ADD_RSP, COMMAND_SCENE_REMOVE_RSP
//  717  *                COMMAND_SCENE_STORE_RSP, or COMMAND_SCENE_REMOVE_ALL_RSP
//  718  * @param   status - scene command status
//  719  * @param   groupID - what group
//  720  * @param   sceneID - what scene (not applicable to COMMAND_SCENE_REMOVE_ALL_RSP)
//  721  *
//  722  * @return  ZStatus_t
//  723  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  724 ZStatus_t zclGeneral_SendSceneResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneResponse:
          CFI Block cfiBlock61 Using cfiCommon0
          CFI Function zclGeneral_SendSceneResponse
        CODE
//  725                                         uint8 cmd, uint8 status, uint16 groupID,
//  726                                         uint8 sceneID, uint8 disableDefaultRsp, uint8 seqNum )
//  727 {
        FUNCALL zclGeneral_SendSceneResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
//  728   uint8 buf[4];
//  729   uint8 len = 1 + 2; // Status + Group ID
        MOV     R4,#0x3
//  730 
//  731   buf[0] = status;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
//  732   buf[1] = LO_UINT16( groupID );
??CrossCallReturnLabel_55:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  733   buf[2] = HI_UINT16( groupID );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
//  734 
//  735   if ( cmd != COMMAND_SCENE_REMOVE_ALL_RSP )
        MOV     A,R4
        XRL     A,R7
        JZ      ??zclGeneral_SendSceneResponse_0
//  736   {
//  737     buf[3] = sceneID;
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  738     len++;
        MOV     R4,#0x4
//  739   }
//  740 
//  741   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  742                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  743                           disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneResponse_0:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V2,R4
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_152:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_153:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R7
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,#0x5
          CFI EndBlock cfiBlock61
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
//  744 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock62 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x4
        SJMP    ??Subroutine81_0
          CFI EndBlock cfiBlock62

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond63 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function zclGeneral_SendSceneResponse
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-2
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-2
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker66 Using cfiCommon1
          CFI (cfiPicker66) NoFunction
          CFI (cfiPicker66) Picker
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_249:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiPicker66

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond67 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond68) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond68) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond69) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond69) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond69) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond69) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond69) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond69) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond69) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond69) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+-2
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond70 Using cfiCommon0
          CFI (cfiCond70) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond70) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond70) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond70) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond70) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond70) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond70) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond70) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond70) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond70) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond70) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond70) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond70) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond70) CFA_SP SP+-2
          CFI (cfiCond70) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond71) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond71) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond71) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond71) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond71) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond71) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond71) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-2
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker72 Using cfiCommon1
          CFI (cfiPicker72) NoFunction
          CFI (cfiPicker72) Picker
        MOV     DPL,?V12
        MOV     DPH,?V13
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiPicker72
        REQUIRE ??Subroutine79_0
        ; // Fall through to label ??Subroutine79_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine79_0:
          CFI Block cfiCond73 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
          CFI Conditional ??CrossCallReturnLabel_144
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+-2
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+-2
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function zclGeneral_SendGroupRequest
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_SP SP+-2
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function zclGeneral_SendGroupResponse
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_148
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+-2
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function zclGeneral_SendGroupResponse
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-2
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function zclGeneral_SendSceneRequest
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_150
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-2
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function zclGeneral_SendSceneRequest
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-2
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function zclGeneral_SendSceneResponse
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+-2
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function zclGeneral_SendSceneResponse
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-2
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-2
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-2
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function zclGeneral_SendLevelControlMoveRequest
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_SP SP+-2
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function zclGeneral_SendLevelControlMoveRequest
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+-2
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-2
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+-2
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function zclGeneral_SendLevelControlStopRequest
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+-2
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond90) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond90) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond90) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond90) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond90) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond90) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond90) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+-2
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 84)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond91) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond91) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-2
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 84)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond92) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond92) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond92) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond92) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond92) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond92) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-2
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 84)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond93) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond93) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond93) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond93) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond93) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond93) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond93) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond93) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond93) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+-2
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond94) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond94) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond94) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond94) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond94) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond94) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond94) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond94) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+-2
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond95 Using cfiCommon0
          CFI (cfiCond95) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond95) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond95) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond95) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond95) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond95) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond95) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond95) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond95) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond95) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond95) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond95) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond95) CFA_SP SP+-2
          CFI (cfiCond95) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond96) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond96) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond96) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond96) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond96) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+-2
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond97) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond97) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond97) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond97) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond97) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+-2
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker98 Using cfiCommon1
          CFI (cfiPicker98) NoFunction
          CFI (cfiPicker98) Picker
        MOVX    A,@DPTR
        MOV     ?V1,A
        MOV     R0,#?V1
        RET
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiPicker98

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock99 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
          CFI EndBlock cfiBlock99
        REQUIRE ??Subroutine80_0
        ; // Fall through to label ??Subroutine80_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine80_0:
          CFI Block cfiBlock100 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,#0x2
          CFI EndBlock cfiBlock100
        REQUIRE ??Subroutine81_0
        ; // Fall through to label ??Subroutine81_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine81_0:
          CFI Block cfiBlock101 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock101
        REQUIRE ??Subroutine82_0
        ; // Fall through to label ??Subroutine82_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine82_0:
          CFI Block cfiBlock102 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock102
//  745 
//  746 /*********************************************************************
//  747  * @fn      zclGeneral_SendSceneViewResponse
//  748  *
//  749  * @brief   Call to send Scene (Enahced) View Response Command. You can
//  750  *           also use the appropriate macro.
//  751  *
//  752  * @param   srcEP - Sending application's endpoint
//  753  * @param   dstAddr - where you want the message to go
//  754  * @param   cmd - either COMMAND_SCENE_VIEW_RSP or COMMAND_SCENE_ENHANCED_VIEW_RSP
//  755  * @param   status - scene command status
//  756  * @param   scene - scene info
//  757  *
//  758  * @return  ZStatus_t
//  759  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  760 ZStatus_t zclGeneral_SendSceneViewRsp( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneViewRsp:
          CFI Block cfiBlock103 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
        CODE
//  761                                        uint8 cmd, uint8 status, zclGeneral_Scene_t *scene,
//  762                                        uint8 disableDefaultRsp, uint8 seqNum )
//  763 {
        FUNCALL zclGeneral_SendSceneViewRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_219:
        MOV     ?V15,R1
        MOV     ?V14,R4
        MOV     ?V7,R5
//  764   uint8 *buf;
//  765   uint8 *pBuf;
//  766   uint8 len = 1 + 2 + 1; // Status + Group ID + Scene ID
        MOV     R0,#0x4
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine14 & 0xFFFF
//  767   ZStatus_t stat;
//  768 
//  769   if ( status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_5:
        MOV     A,R5
        JNZ     ??zclGeneral_SendSceneViewRsp_0
//  770   {
//  771     len += 2; // Transition Time
//  772     len += scene->name[0] + 1; // string + 1 for length
//  773 
//  774     // Add something for the extension field length
//  775     len += scene->extLen;
        LCALL   ?Subroutine40 & 0xFFFF
//  776   }
??CrossCallReturnLabel_76:
        ADD     A,#0x7
        MOV     R0,A
//  777 
//  778   buf = zcl_mem_alloc( len );
??zclGeneral_SendSceneViewRsp_0:
        MOV     ?V0,R0
        MOV     ?V1,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V8,R2
        MOV     ?V9,R3
//  779   if ( buf )
        MOV     A,R2
        ORL     A,?V9
        JNZ     $+5
        LJMP    ??zclGeneral_SendSceneViewRsp_1 & 0xFFFF
//  780   {
//  781     pBuf = buf;
        MOV     R6,?V8
        MOV     R7,?V9
//  782     *pBuf++ = status;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
//  783     *pBuf++ = LO_UINT16( scene->groupID );
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_84:
        LCALL   ?Subroutine17 & 0xFFFF
//  784     *pBuf++ = HI_UINT16( scene->groupID );
//  785     *pBuf++ = scene->ID;
//  786     if ( status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_10:
        MOV     A,?V7
        JZ      $+5
        LJMP    ??zclGeneral_SendSceneViewRsp_2 & 0xFFFF
//  787     {
//  788       uint16 transTime = scene->transTime;
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine35 & 0xFFFF
//  789       if ( cmd == COMMAND_SCENE_ENHANCED_VIEW_RSP )
??CrossCallReturnLabel_246:
        MOV     A,#0x41
        XRL     A,?V14
        JNZ     ??zclGeneral_SendSceneViewRsp_3
//  790       {
//  791         // Transition time is in 1/10s
//  792         transTime *= 10;
//  793         transTime += scene->transTime100ms;
        MOV     A,R0
        MOV     B,#0xa
        MUL     AB
        MOV     R0,A
        MOV     R2,B
        MOV     B,#0xa
        MOV     A,R1
        MUL     AB
        ADD     A,R2
        MOV     R1,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R1,A
//  794       }
//  795 
//  796       *pBuf++ = LO_UINT16( transTime );
??zclGeneral_SendSceneViewRsp_3:
        MOV     A,R0
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine85_0 & 0xFFFF
//  797       *pBuf++ = HI_UINT16( transTime );
??CrossCallReturnLabel_177:
        INC     DPTR
        INC     R6
        INC     R6
        MOV     R7,DPH
//  798       *pBuf++ = scene->name[0]; // string length
        MOV     DPL,?V10
        MOV     DPH,?V11
        LCALL   ?Subroutine25 & 0xFFFF
//  799       if ( scene->name[0] != 0 )
??CrossCallReturnLabel_33:
        MOV     R4,A
        JZ      ??zclGeneral_SendSceneViewRsp_4
//  800       {
//  801         zcl_memcpy( pBuf, &(scene->name[1]), scene->name[0] );
        ; Setup parameters for call to function osal_memcpy
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_143:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  802         pBuf += scene->name[0]; // move pass name
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R6
        ADD     A,R0
        MOV     R6,A
        CLR     A
        ADDC    A,R7
        MOV     R7,A
//  803       }
//  804 
//  805       // Add the extension fields
//  806       if ( scene->extLen > 0 )
??zclGeneral_SendSceneViewRsp_4:
        MOV     DPL,?V12
        MOV     DPH,?V13
        MOVX    A,@DPTR
        MOV     R4,A
        JZ      ??zclGeneral_SendSceneViewRsp_2
//  807         zcl_memcpy( pBuf, scene->extField, scene->extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V2
        ADD     A,#0x18
        LCALL   ??Subroutine78_0 & 0xFFFF
//  808     }
??CrossCallReturnLabel_141:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  809 
//  810     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  811                             cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  812                             disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneViewRsp_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,#0x21
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        CLR     A
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     A,#0x23
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_27:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0,#0x1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,?V14
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     R4,#0x5
        MOV     R5,#0x0
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_66:
        MOV     R1,?V15
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R1
        MOV     R6,A
//  813     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V8
        MOV     R3,?V9
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        SJMP    ??zclGeneral_SendSceneViewRsp_5
//  814   }
//  815   else
//  816     stat = ZMemError;
??zclGeneral_SendSceneViewRsp_1:
        MOV     R6,#0x10
//  817 
//  818   return ( stat );
??zclGeneral_SendSceneViewRsp_5:
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock103
//  819 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond104 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond105) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond105) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond105) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond105) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond105) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond105) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond105) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond105) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond105) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond105) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond105) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+-2
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker106 Using cfiCommon1
          CFI (cfiPicker106) NoFunction
          CFI (cfiPicker106) Picker
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_172:
        RET
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiPicker106

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond107 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_172, ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_172, ??CrossCallReturnLabel_84
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond108) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond108) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond108) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond108) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond108) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond108) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond108) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-4
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_9
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond109) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond109) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond109) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond109) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond109) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond109) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond109) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond109) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond109) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-6
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_10
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond110) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-6
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_171, ??CrossCallReturnLabel_9
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond111) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond111) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond111) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-6
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_171, ??CrossCallReturnLabel_10
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond112) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond112) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond112) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-6
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_32
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond113) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond113) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond113) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond113) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond113) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond113) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond113) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond113) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-6
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_33
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond114) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond114) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond114) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-6
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker115 Using cfiCommon1
          CFI (cfiPicker115) NoFunction
          CFI (cfiPicker115) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
        INC     R6
        RET
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiPicker115

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond116 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_75
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond117) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond117) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond117) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond117) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond117) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond117) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond117) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-2
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker118 Using cfiCommon1
          CFI (cfiPicker118) NoFunction
          CFI (cfiPicker118) Picker
        MOV     DPL,?V12
        MOV     DPH,?V13
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        ADD     A,R0
        RET
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiPicker118

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond119 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_32
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond120) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond120) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond120) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond120) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond120) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-2
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker121 Using cfiCommon1
          CFI (cfiPicker121) NoFunction
          CFI (cfiPicker121) Picker
        LCALL   ??Subroutine83_0 & 0xFFFF
??CrossCallReturnLabel_169:
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiPicker121

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond122 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_9
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond123) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond123) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond123) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond123) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond123) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond123) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond123) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond123) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond123) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+-2
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker124 Using cfiCommon1
          CFI (cfiPicker124) NoFunction
          CFI (cfiPicker124) Picker
        MOV     R7,DPH
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_170:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_171:
        RET
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiPicker124

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond125 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_9
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_10
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond126) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond126) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond126) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond126) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond126) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond126) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond126) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-4
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_171, ??CrossCallReturnLabel_9
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond127) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond127) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond127) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond127) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond127) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond127) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond127) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-4
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_171, ??CrossCallReturnLabel_10
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond128) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond128) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond128) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond128) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond128) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-4
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker129 Using cfiCommon1
          CFI (cfiPicker129) NoFunction
          CFI (cfiPicker129) Picker
        INC     DPTR
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiPicker129
        REQUIRE ??Subroutine83_0
        ; // Fall through to label ??Subroutine83_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine83_0:
          CFI Block cfiCond130 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_32
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_33
          CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond131) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond131) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond131) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond131) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond131) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond131) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond131) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond131) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond131) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond131) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond131) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond131) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond131) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond131) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond131) CFA_SP SP+-4
          CFI (cfiCond131) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_9
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond132) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond132) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond132) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond132) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond132) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond132) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-4
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_10
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond133) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond133) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond133) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond133) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond133) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-4
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_171, ??CrossCallReturnLabel_9
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond134) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond134) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond134) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond134) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+-4
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_171, ??CrossCallReturnLabel_10
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond135) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond135) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond135) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond135) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-4
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker136 Using cfiCommon1
          CFI (cfiPicker136) NoFunction
          CFI (cfiPicker136) Picker
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_173:
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiPicker136

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond137 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond138) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond138) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond138) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond138) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond138) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond138) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond138) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond138) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond138) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond138) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond138) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+-2
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker139 Using cfiCommon1
          CFI (cfiPicker139) NoFunction
          CFI (cfiPicker139) Picker
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
        MOV     A,?V2
        ADD     A,#0x17
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_126:
        RET
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiPicker139

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond140 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_5
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond141) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond141) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond141) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond141) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond141) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond141) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-4
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker143 Using cfiCommon1
          CFI (cfiPicker143) NoFunction
          CFI (cfiPicker143) Picker
        MOV     ?V12,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V13,A
        MOV     A,?V2
        ADD     A,#0x7
        MOV     ?V10,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V11,A
        RET
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiPicker143
//  820 
//  821 /*********************************************************************
//  822  * @fn      zclGeneral_SendSceneGetMembershipResponse
//  823  *
//  824  * @brief   Call to send Scene Get Membership Response Command
//  825  *
//  826  * @param   srcEP - Sending application's endpoint
//  827  * @param   dstAddr - where you want the message to go
//  828  * @param   status - scene command status
//  829  * @param   capacity - remaining capacity of the scene table
//  830  * @param   sceneCnt - number of scenes in the scene list
//  831  * @param   sceneList - list of scene IDs
//  832  * @param   groupID - group ID that scene belongs to
//  833  * @param   seqNum - sequence number
//  834  *
//  835  * @return  ZStatus_t
//  836  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  837 ZStatus_t zclGeneral_SendSceneGetMembershipResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneGetMembershipResponse:
          CFI Block cfiBlock144 Using cfiCommon0
          CFI Function zclGeneral_SendSceneGetMembershipResponse
        CODE
//  838                                                      uint8 status, uint8 capacity, uint8 sceneCnt, uint8 *sceneList,
//  839                                                      uint16 groupID, uint8 disableDefaultRsp, uint8 seqNum )
//  840 {
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V2,R1
        MOV     ?V6,R2
        MOV     ?V7,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  841   uint8 *buf;
//  842   uint8 *pBuf;
//  843   uint8 len = 1 + 1 + 2; // Status + Capacity + Group ID;
        MOV     R0,#0x4
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V3,A
//  844   uint8 i;
//  845   ZStatus_t stat;
//  846 
//  847   if ( status == ZCL_STATUS_SUCCESS )
        MOV     A,R6
        JNZ     ??zclGeneral_SendSceneGetMembershipResponse_0
//  848   {
//  849     len++; // Scene Count
//  850     len += sceneCnt; // Scene List (Scene ID is a single octet)
        MOV     A,#0x5
        ADD     A,?V3
        MOV     R0,A
//  851   }
//  852 
//  853   buf = zcl_mem_alloc( len );
??zclGeneral_SendSceneGetMembershipResponse_0:
        MOV     ?V4,R0
        MOV     ?V5,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,?V4
        MOV     R3,?V5
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
//  854   if ( buf )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??zclGeneral_SendSceneGetMembershipResponse_1 & 0xFFFF
//  855   {
//  856     pBuf = buf;
        MOV     R0,?V0
        MOV     R1,?V1
//  857     *pBuf++ = status;
        MOV     A,R6
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
//  858     *pBuf++ = capacity;
        MOV     A,R7
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_118:
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
//  859     *pBuf++ = LO_UINT16( groupID );
??CrossCallReturnLabel_67:
        MOV     A,R2
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine90_0 & 0xFFFF
//  860     *pBuf++ = HI_UINT16( groupID );
??CrossCallReturnLabel_211:
        INC     DPTR
//  861     if ( status == ZCL_STATUS_SUCCESS )
        MOV     A,R6
        JNZ     ??zclGeneral_SendSceneGetMembershipResponse_2
//  862     {
//  863       *pBuf++ = sceneCnt;
        MOV     A,?V3
        MOVX    @DPTR,A
        INC     DPTR
        INC     R0
        INC     R0
        INC     R0
        MOV     R1,DPH
//  864       for ( i = 0; i < sceneCnt; i++ )
        MOV     ?V8,#0x0
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_68:
        SJMP    ??zclGeneral_SendSceneGetMembershipResponse_3
//  865         *pBuf++ = sceneList[i];
??zclGeneral_SendSceneGetMembershipResponse_4:
        MOV     R4,?V8
        MOV     A,R2
        ADD     A,R4
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_31:
        INC     ?V8
??zclGeneral_SendSceneGetMembershipResponse_3:
        MOV     A,?V8
        CLR     C
        SUBB    A,?V3
        JC      ??zclGeneral_SendSceneGetMembershipResponse_4
//  866     }
//  867 
//  868     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  869                             COMMAND_SCENE_GET_MEMBERSHIP_RSP, TRUE,
//  870                             ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneGetMembershipResponse_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_52:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        CLR     A
        MOV     ?V4,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_53:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V3,#0x1
        MOV     R0,#?V3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R0,#?V3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V3,#0x6
        MOV     R0,#?V3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R4,#0x5
        MOV     R5,#0x0
        MOV     R2,?V6
        MOV     R3,?V7
        MOV     R1,?V2
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R1
        MOV     ?V3,A
//  871     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        SJMP    ??zclGeneral_SendSceneGetMembershipResponse_5
//  872   }
//  873   else
//  874     stat = ZMemError;
??zclGeneral_SendSceneGetMembershipResponse_1:
        MOV     ?V3,#0x10
//  875 
//  876   return ( stat );
??zclGeneral_SendSceneGetMembershipResponse_5:
        MOV     R1,?V3
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock144
//  877 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond145 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_49
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond146) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond146) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond146) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond146) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond146) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+-2
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-2
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-2
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond149) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond149) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond149) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+-2
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker150 Using cfiCommon1
          CFI (cfiPicker150) NoFunction
          CFI (cfiPicker150) Picker
        MOVX    A,@DPTR
        MOV     ?V3,A
        MOV     R0,#?V3
        RET
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiPicker150

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond151 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond152) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-2
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+-2
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker154 Using cfiCommon1
          CFI (cfiPicker154) NoFunction
          CFI (cfiPicker154) Picker
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_119:
        RET
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiPicker154

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond155 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_117
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_SP SP+-2
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_29
          CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond157) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond157) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond157) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond157) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond157) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond157) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond157) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond157) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond157) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond157) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond157) CFA_SP SP+-4
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_30
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+-4
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_31
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-4
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker160 Using cfiCommon1
          CFI (cfiPicker160) NoFunction
          CFI (cfiPicker160) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        RET
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiPicker160
//  878 
//  879 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  880 /*********************************************************************
//  881  * @fn      zclGeneral_SendSceneCopy
//  882  *
//  883  * @brief   Send Scene Copy Request to a device
//  884  *
//  885  * @param   srcEP - sending application's endpoint
//  886  * @param   dstAddr - where to send the request
//  887  * @param   mode - how scene copy is to proceed
//  888  * @param   groupIDFrom - group from which scene to be copied
//  889  * @param   sceneIDFrom - scene from which scene to be copied
//  890  * @param   groupIDTo - group to which scene to be copied
//  891  * @param   sceneIDTo - scene to which scene to be copied
//  892  * @param   disableDefaultRsp - disable Default Response command
//  893  * @param   seqNum - the identification number for the transaction
//  894  *
//  895  * @return  ZStatus_t
//  896  */
//  897 ZStatus_t zclGeneral_SendSceneCopy( uint8 srcEP, afAddrType_t *dstAddr,
//  898                                     uint8 mode, uint16 groupIDFrom, uint8 sceneIDFrom,
//  899                                     uint16 groupIDTo, uint8 sceneIDTo,
//  900                                     uint8 disableDefaultRsp, uint8 seqNum )
//  901 {
//  902   uint8 buf[7];
//  903 
//  904   buf[0] = mode;
//  905   buf[1] = LO_UINT16( groupIDFrom );
//  906   buf[2] = HI_UINT16( groupIDFrom );
//  907   buf[3] = sceneIDFrom;
//  908   buf[4] = LO_UINT16( groupIDTo );
//  909   buf[5] = HI_UINT16( groupIDTo );
//  910   buf[6] = sceneIDTo;
//  911 
//  912   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  913                             COMMAND_SCENE_COPY, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  914                             disableDefaultRsp, 0, seqNum, 7, buf ) );
//  915 }
//  916 
//  917 /*********************************************************************
//  918  * @fn      zclGeneral_SendSceneCopyResponse
//  919  *
//  920  * @brief   Send Scene Copy Response to a device
//  921  *
//  922  * @param   srcEP - sending application's endpoint
//  923  * @param   dstAddr - where to send the request
//  924  * @param   status - status of copy scene attemp
//  925  * @param   groupIDFrom - group from which scene was copied
//  926  * @param   sceneIDFrom - scene from which scene was copied
//  927  * @param   disableDefaultRsp - disable Default Response command
//  928  * @param   seqNum - the identification number for the transaction
//  929  *
//  930  * @return  ZStatus_t
//  931  */
//  932 ZStatus_t zclGeneral_SendSceneCopyResponse( uint8 srcEP, afAddrType_t *dstAddr,
//  933                                             uint8 status, uint16 groupIDFrom, uint8 sceneIDFrom,
//  934                                             uint8 disableDefaultRsp, uint8 seqNum )
//  935 {
//  936   uint8 buf[4];
//  937 
//  938   buf[0] = status;
//  939   buf[1] = LO_UINT16( groupIDFrom );
//  940   buf[2] = HI_UINT16( groupIDFrom );
//  941   buf[3] = sceneIDFrom;
//  942 
//  943   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  944                             COMMAND_SCENE_COPY_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  945                             disableDefaultRsp, 0, seqNum, 4, buf ) );
//  946 }
//  947 #endif // ZCL_LIGHT_LINK_ENHANCE
//  948 #endif // ZCL_SCENES
//  949 
//  950 #ifdef ZCL_ON_OFF
//  951 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  952 /*********************************************************************
//  953  * @fn      zclGeneral_SendOnOff_CmdOffWithEffect
//  954  *
//  955  * @brief   Call to send out an Off with Effect Command.
//  956  *
//  957  * @param   srcEP - Sending application's endpoint
//  958  * @param   dstAddr - where you want the message to go
//  959  * @param   effectId - fading effect to use when switching light off
//  960  * @param   effectVariant - which variant of effect to be triggered
//  961  * @param   disableDefaultRsp - whether to disable the Default Response command
//  962  * @param   seqNum - sequence number
//  963  *
//  964  * @return  ZStatus_t
//  965  */
//  966 ZStatus_t zclGeneral_SendOnOff_CmdOffWithEffect( uint8 srcEP, afAddrType_t *dstAddr,
//  967                                                  uint8 effectId, uint8 effectVariant,
//  968                                                  uint8 disableDefaultRsp, uint8 seqNum )
//  969 {
//  970   uint8 buf[2];
//  971 
//  972   buf[0] = effectId;
//  973   buf[1] = effectVariant;
//  974 
//  975   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF,
//  976                           COMMAND_OFF_WITH_EFFECT, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  977                           disableDefaultRsp, 0, seqNum, 2, buf );
//  978 }
//  979 
//  980 /*********************************************************************
//  981  * @fn      zclGeneral_SendOnOff_CmdOnWithTimedOff
//  982  *
//  983  * @brief   Call to send out an On with Timed Off Command.
//  984  *
//  985  * @param   srcEP - Sending application's endpoint
//  986  * @param   dstAddr - where you want the message to go
//  987  * @param   onOffCtrl - how the lamp is to be operated
//  988  * @param   onTime - the length of time (in 1/10ths second) that the lamp is to remain on, before automatically turning off
//  989  * @param   offWaitTime - the length of time (in 1/10ths second) that the lamp shall remain off, and guarded to prevent an on command turning the light back on.
//  990  * @param   disableDefaultRsp - whether to disable the Default Response command
//  991  * @param   seqNum - sequence number
//  992  *
//  993  * @return  ZStatus_t
//  994  */
//  995 ZStatus_t zclGeneral_SendOnOff_CmdOnWithTimedOff ( uint8 srcEP, afAddrType_t *dstAddr,
//  996                                                    zclOnOffCtrl_t onOffCtrl, uint16 onTime, uint16 offWaitTime,
//  997                                                    uint8 disableDefaultRsp, uint8 seqNum )
//  998 {
//  999   uint8 buf[5];
// 1000 
// 1001   buf[0] = onOffCtrl.byte;
// 1002   buf[1] = LO_UINT16( onTime );
// 1003   buf[2] = HI_UINT16( onTime );
// 1004   buf[3] = LO_UINT16( offWaitTime );
// 1005   buf[4] = HI_UINT16( offWaitTime );
// 1006 
// 1007   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1008                           COMMAND_ON_WITH_TIMED_OFF, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1009                           disableDefaultRsp, 0, seqNum, 5, buf );
// 1010 }
// 1011 #endif // ZCL_LIGHT_LINK_ENHANCE
// 1012 #endif // ZCL_ON_OFF
// 1013 
// 1014 #ifdef ZCL_LEVEL_CTRL
// 1015 /*********************************************************************
// 1016  * @fn      zclGeneral_SendLevelControlMoveToLevelRequest
// 1017  *
// 1018  * @brief   Call to send out a Level Control Request. You can also use
// 1019  *          the appropriate macro.
// 1020  *
// 1021  * @param   srcEP - Sending application's endpoint
// 1022  * @param   dstAddr - where you want the message to go
// 1023  * @param   cmd - one of the following:
// 1024  *              COMMAND_LEVEL_MOVE_TO_LEVEL or
// 1025  *              COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF
// 1026  * @param   level - what level to move to
// 1027  * @param   transitionTime - how long to take to get to the level (in seconds)
// 1028  *
// 1029  * @return  ZStatus_t
// 1030  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1031 ZStatus_t zclGeneral_SendLevelControlMoveToLevelRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendLevelControlMoveToLevelRequest:
          CFI Block cfiBlock161 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlMoveToLevelRequest
        CODE
// 1032                                                          uint8 cmd, uint8 level, uint16 transTime,
// 1033                                                          uint8 disableDefaultRsp, uint8 seqNum )
// 1034 {
        FUNCALL zclGeneral_SendLevelControlMoveToLevelRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
// 1035   uint8 buf[3];
// 1036 
// 1037   buf[0] = level;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
// 1038   buf[1] = LO_UINT16( transTime );
??CrossCallReturnLabel_56:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
// 1039   buf[2] = HI_UINT16( transTime );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
// 1040 
// 1041   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1042                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1043                           disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_136:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V2,#0x3
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_154:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_155:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V1,#0x0
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R7
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R4,#0x8
        LJMP    ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock161
// 1044 }
// 1045 
// 1046 /*********************************************************************
// 1047  * @fn      zclGeneral_SendLevelControlMoveRequest
// 1048  *
// 1049  * @brief   Call to send out a Level Control Request. You can also use
// 1050  *          the appropriate macro.
// 1051  *
// 1052  * @param   srcEP - Sending application's endpoint
// 1053  * @param   dstAddr - where you want the message to go
// 1054  * @param   cmd - one of the following:
// 1055  *              COMMAND_LEVEL_MOVE or
// 1056  *              COMMAND_LEVEL_MOVE_WITH_ON_OFF
// 1057  * @param   moveMode - LEVEL_MOVE_UP or
// 1058  *                     LEVEL_MOVE_DOWN
// 1059  * @param   rate - number of steps to take per second
// 1060  *
// 1061  * @return  ZStatus_t
// 1062  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1063 ZStatus_t zclGeneral_SendLevelControlMoveRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendLevelControlMoveRequest:
          CFI Block cfiBlock162 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlMoveRequest
        CODE
// 1064                                                   uint8 cmd, uint8 moveMode, uint8 rate,
// 1065                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1066 {
        FUNCALL zclGeneral_SendLevelControlMoveRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
// 1067   uint8 buf[2];
// 1068 
// 1069   buf[0] = moveMode;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R5
        MOVX    @DPTR,A
// 1070   buf[1] = rate;
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ??Subroutine77_0 & 0xFFFF
// 1071 
// 1072   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1073                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1074                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_140:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V2,#0x2
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_156:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_157:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V1,#0x0
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R7
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,#0x8
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock162
// 1075 }
// 1076 
// 1077 /*********************************************************************
// 1078  * @fn      zclGeneral_SendLevelControlStepRequest
// 1079  *
// 1080  * @brief   Call to send out a Level Control Request. You can also use
// 1081  *          the appropriate macro.
// 1082  *
// 1083  * @param   srcEP - Sending application's endpoint
// 1084  * @param   dstAddr - where you want the message to go
// 1085  * @param   cmd - one of the following:
// 1086  *              COMMAND_LEVEL_STEP
// 1087  *              COMMAND_LEVEL_STEP_WITH_ON_OFF
// 1088  * @param   stepMode - LEVEL_STEP_UP or
// 1089  *                     LEVEL_STEP_DOWN
// 1090  * @param   amount - number of levels to step
// 1091  * @param   transitionTime - time, in 1/10ths of a second, to take to perform the step
// 1092  *
// 1093  * @return  ZStatus_t
// 1094  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1095 ZStatus_t zclGeneral_SendLevelControlStepRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendLevelControlStepRequest:
          CFI Block cfiBlock163 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlStepRequest
        CODE
// 1096                                                   uint8 cmd, uint8 stepMode, uint8 stepSize, uint16 transTime,
// 1097                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1098 {
        FUNCALL zclGeneral_SendLevelControlStepRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
// 1099   uint8 buf[4];
// 1100 
// 1101   buf[0] = stepMode;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R5
        MOVX    @DPTR,A
// 1102   buf[1] = stepSize;
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine95_0 & 0xFFFF
// 1103   buf[2] = LO_UINT16( transTime );
??CrossCallReturnLabel_239:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
// 1104   buf[3] = HI_UINT16( transTime );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
// 1105 
// 1106   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1107                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1108                           disableDefaultRsp, 0, seqNum, 4, buf );
??CrossCallReturnLabel_137:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V2,#0x4
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_158:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_159:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V1,#0x0
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R7
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,#0x8
        LJMP    ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock163
// 1109 }
// 1110 
// 1111 /*********************************************************************
// 1112  * @fn      zclGeneral_SendLevelControlStepRequest
// 1113  *
// 1114  * @brief   Call to send out a Level Control Request. You can also use
// 1115  *          the appropriate macro.
// 1116  *
// 1117  * @param   srcEP - Sending application's endpoint
// 1118  * @param   dstAddr - where you want the message to go
// 1119  * @param   cmd - one of the following:
// 1120  *              COMMAND_LEVEL_STOP
// 1121  *              COMMAND_LEVEL_STOP_WITH_ON_OFF
// 1122  *
// 1123  * @return  ZStatus_t
// 1124  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1125 ZStatus_t zclGeneral_SendLevelControlStopRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclGeneral_SendLevelControlStopRequest:
          CFI Block cfiBlock164 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlStopRequest
        CODE
// 1126                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1127 {
        FUNCALL zclGeneral_SendLevelControlStopRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R4
        MOV     R7,A
// 1128   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1129                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1130                           disableDefaultRsp, 0, seqNum, 0, NULL );
        ; Setup parameters for call to function zcl_SendCommand
        CLR     A
        MOV     ?V2,A
        MOV     ?V3,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_160:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R5
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V1,#0x0
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R7
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R4,#0x8
        MOV     R5,#0x0
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LJMP    ??Subroutine81_0 & 0xFFFF
          CFI EndBlock cfiBlock164
// 1131 }
// 1132 #endif // ZCL_LEVEL_CTRL
// 1133 
// 1134 #ifdef ZCL_ALARMS
// 1135 /*********************************************************************
// 1136  * @fn      zclGeneral_SendAlarm
// 1137  *
// 1138  * @brief   Call to send out an Alarm Request Command
// 1139  *
// 1140  * @param   srcEP - Sending application's endpoint
// 1141  * @param   dstAddr - where you want the message to go
// 1142  * @param   cmd - COMMAND_ALARMS_ALARM
// 1143  * @param   alarmCode - code for the cause of the alarm
// 1144  * @param   clusterID - cluster whose attribute generate the alarm
// 1145  *
// 1146  * @return  ZStatus_t
// 1147  */
// 1148 ZStatus_t zclGeneral_SendAlarm( uint8 srcEP, afAddrType_t *dstAddr,
// 1149                                 uint8 alarmCode, uint16 clusterID,
// 1150                                 uint8 disableDefaultRsp, uint8 seqNum )
// 1151 {
// 1152   uint8 buf[3];
// 1153 
// 1154   buf[0] = alarmCode;
// 1155   buf[1] = LO_UINT16( clusterID );
// 1156   buf[2] = HI_UINT16( clusterID );
// 1157 
// 1158   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1159                           COMMAND_ALARMS_ALARM, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1160                           disableDefaultRsp, 0, seqNum, 3, buf );
// 1161 }
// 1162 
// 1163 /*********************************************************************
// 1164  * @fn      zclGeneral_SendAlarmReset
// 1165  *
// 1166  * @brief   Call to send out an Alarm Reset Command
// 1167  *
// 1168  * @param   srcEP - Sending application's endpoint
// 1169  * @param   dstAddr - where you want the message to go
// 1170  * @param   alarmCode - code for the cause of the alarm
// 1171  * @param   clusterID - cluster whose attribute generate the alarm
// 1172  *
// 1173  * @return  ZStatus_t
// 1174 */
// 1175 ZStatus_t zclGeneral_SendAlarmReset( uint8 srcEP, afAddrType_t *dstAddr,
// 1176                                      uint8 alarmCode, uint16 clusterID,
// 1177                                      uint8 disableDefaultRsp, uint8 seqNum )
// 1178 {
// 1179   uint8 buf[3];
// 1180 
// 1181   buf[0] = alarmCode;
// 1182   buf[1] = LO_UINT16( clusterID );
// 1183   buf[2] = HI_UINT16( clusterID );
// 1184 
// 1185   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1186                           COMMAND_ALARMS_RESET, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1187                           disableDefaultRsp, 0, seqNum, 3, buf );
// 1188 }
// 1189 
// 1190 /*********************************************************************
// 1191  * @fn      zclGeneral_SendAlarmGetResponse
// 1192  *
// 1193  * @brief   Call to send out an Alarm Get Response Command
// 1194  *
// 1195  * @param   srcEP - Sending application's endpoint
// 1196  * @param   dstAddr - where you want the message to go
// 1197  * @param   status - SUCCESS or NOT_FOUND
// 1198  * @param   alarmCode - code for the cause of the alarm
// 1199  * @param   clusterID - cluster whose attribute generate the alarm
// 1200  * @param   timeStamp - time at which the alarm occured
// 1201  *
// 1202  * @return  ZStatus_t
// 1203  */
// 1204 ZStatus_t zclGeneral_SendAlarmGetResponse( uint8 srcEP, afAddrType_t *dstAddr,
// 1205                                            uint8 status, uint8 alarmCode, uint16 clusterID,
// 1206                                            uint32 timeStamp, uint8 disableDefaultRsp, uint8 seqNum )
// 1207 {
// 1208   uint8 buf[8];
// 1209   uint8 len = 1; // Status
// 1210 
// 1211   buf[0] = status;
// 1212   if ( status == ZCL_STATUS_SUCCESS )
// 1213   {
// 1214     len += 1 + 2 + 4; // Alarm code + Cluster ID + Time stamp
// 1215     buf[1] = alarmCode;
// 1216     buf[2] = LO_UINT16( clusterID );
// 1217     buf[3] = HI_UINT16( clusterID );
// 1218     zcl_buffer_uint32( &buf[4], timeStamp );
// 1219   }
// 1220 
// 1221   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1222                           COMMAND_ALARMS_GET_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1223                           disableDefaultRsp, 0, seqNum, len, buf );
// 1224 }
// 1225 
// 1226 #ifdef SE_UK_EXT
// 1227 /*********************************************************************
// 1228  * @fn      zclGeneral_SendAlarmGetEventLog
// 1229  *
// 1230  * @brief   Call to send out an Alarm Get Event Log Command
// 1231  *
// 1232  * @param   srcEP - Sending application's endpoint
// 1233  * @param   dstAddr - where you want the message to go
// 1234  * @param   pEventLog - pointer to Get Event Log Command
// 1235  * @param   disableDefaultRsp - disable default response
// 1236  * @param   seqNum - ZCL sequence number
// 1237  *
// 1238  * @return  ZStatus_t
// 1239  */
// 1240 ZStatus_t zclGeneral_SendAlarmGetEventLog( uint8 srcEP, afAddrType_t *dstAddr,
// 1241                                            zclGetEventLog_t *pEventLog,
// 1242                                            uint8 disableDefaultRsp, uint8 seqNum )
// 1243 {
// 1244   uint8 buf[10];
// 1245 
// 1246   buf[0] = pEventLog->logID;
// 1247   zcl_buffer_uint32( &buf[1], pEventLog->startTime );
// 1248   zcl_buffer_uint32( &buf[5], pEventLog->endTime );
// 1249   buf[9] = pEventLog->numEvents;
// 1250 
// 1251   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1252                           COMMAND_ALARMS_GET_EVENT_LOG, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1253                           disableDefaultRsp, 0, seqNum, 10, buf );
// 1254 }
// 1255 
// 1256 /*********************************************************************
// 1257  * @fn      zclGeneral_SendAlarmPublishEventLog
// 1258  *
// 1259  * @brief   Call to send out an Alarm Publish Event Log Command
// 1260  *
// 1261  * @param   srcEP - Sending application's endpoint
// 1262  * @param   dstAddr - where you want the message to go
// 1263  * @param   pEventLog - pointer to Publish Event Log Command
// 1264  * @param   disableDefaultRsp - disable default response
// 1265  * @param   seqNum - ZCL sequence number
// 1266  *
// 1267  * @return  ZStatus_t
// 1268  */
// 1269 ZStatus_t zclGeneral_SendAlarmPublishEventLog( uint8 srcEP, afAddrType_t *dstAddr,
// 1270                                                zclPublishEventLog_t *pEventLog,
// 1271                                                uint8 disableDefaultRsp, uint8 seqNum )
// 1272 {
// 1273   uint8 *buf;
// 1274   uint8 *pBuf;
// 1275   uint8 bufLen;
// 1276 
// 1277   // Log ID + Command Index + Total Commands + (numSubLogs * ( Event ID + Event Time))
// 1278   bufLen = 1 + 1 + 1 + (pEventLog->numSubLogs * (1 + 4));
// 1279 
// 1280   buf = zcl_mem_alloc( bufLen );
// 1281   if ( buf == NULL )
// 1282   {
// 1283     return (ZMemError);
// 1284   }
// 1285 
// 1286   pBuf = buf;
// 1287   *pBuf++ = pEventLog->logID;
// 1288   *pBuf++ = pEventLog->cmdIndex;
// 1289   *pBuf++ = pEventLog->totalCmds;
// 1290 
// 1291   for ( uint8 i = 0; i < pEventLog->numSubLogs; i++ )
// 1292   {
// 1293     zclEventLogPayload_t *pLogs = &(pEventLog->pLogs[i]);
// 1294 
// 1295     *pBuf++ = pLogs->eventId;
// 1296     pBuf = zcl_buffer_uint32( pBuf, pLogs->eventTime );
// 1297   }
// 1298 
// 1299   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1300                           COMMAND_ALARMS_PUBLISH_EVENT_LOG, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1301                           disableDefaultRsp, 0, seqNum, bufLen, buf );
// 1302 }
// 1303 #endif // SE_UK_EXT
// 1304 #endif // ZCL_ALARMS
// 1305 
// 1306 #ifdef ZCL_LOCATION
// 1307 /*********************************************************************
// 1308  * @fn      zclGeneral_SendLocationSetAbsolute
// 1309  *
// 1310  * @brief   Call to send out a Set Absolute Location Command
// 1311  *
// 1312  * @param   srcEP - Sending application's endpoint
// 1313  * @param   dstAddr - where you want the message to go
// 1314  * @param   absLoc - absolute location info
// 1315  *
// 1316  * @return  ZStatus_t
// 1317  */
// 1318 ZStatus_t zclGeneral_SendLocationSetAbsolute( uint8 srcEP, afAddrType_t *dstAddr,
// 1319                                               zclLocationAbsolute_t *absLoc,
// 1320                                               uint8 disableDefaultRsp, uint8 seqNum )
// 1321 {
// 1322    uint8 buf[10]; // 5 fields (2 octects each)
// 1323 
// 1324    buf[0] = LO_UINT16( absLoc->coordinate1 );
// 1325    buf[1] = HI_UINT16( absLoc->coordinate1 );
// 1326    buf[2] = LO_UINT16( absLoc->coordinate2 );
// 1327    buf[3] = HI_UINT16( absLoc->coordinate2 );
// 1328    buf[4] = LO_UINT16( absLoc->coordinate3 );
// 1329    buf[5] = HI_UINT16( absLoc->coordinate3 );
// 1330    buf[6] = LO_UINT16( absLoc->power );
// 1331    buf[7] = HI_UINT16( absLoc->power );
// 1332    buf[8] = LO_UINT16( absLoc->pathLossExponent );
// 1333    buf[9] = HI_UINT16( absLoc->pathLossExponent );
// 1334 
// 1335    return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1336                            COMMAND_LOCATION_SET_ABSOLUTE, TRUE,
// 1337                            ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 10, buf );
// 1338 }
// 1339 
// 1340 /*********************************************************************
// 1341  * @fn      zclGeneral_SendLocationSetDevCfg
// 1342  *
// 1343  * @brief   Call to send out a Set Device Configuration Command
// 1344  *
// 1345  * @param   srcEP - Sending application's endpoint
// 1346  * @param   dstAddr - where you want the message to go
// 1347  * @param   devCfg - device configuration info
// 1348  *
// 1349  * @return  ZStatus_t
// 1350  */
// 1351 ZStatus_t zclGeneral_SendLocationSetDevCfg( uint8 srcEP, afAddrType_t *dstAddr,
// 1352                                             zclLocationDevCfg_t *devCfg,
// 1353                                             uint8 disableDefaultRsp, uint8 seqNum )
// 1354 {
// 1355    uint8 buf[9];  // 4 fields (2 octects each) + 1 field with 1 octect
// 1356 
// 1357    buf[0] = LO_UINT16( devCfg->power );
// 1358    buf[1] = HI_UINT16( devCfg->power );
// 1359    buf[2] = LO_UINT16( devCfg->pathLossExponent );
// 1360    buf[3] = HI_UINT16( devCfg->pathLossExponent );
// 1361    buf[4] = LO_UINT16( devCfg->calcPeriod );
// 1362    buf[5] = HI_UINT16( devCfg->calcPeriod );
// 1363    buf[6] = devCfg->numMeasurements;
// 1364    buf[7] = LO_UINT16( devCfg->reportPeriod );
// 1365    buf[8] = HI_UINT16( devCfg->reportPeriod );
// 1366 
// 1367    return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1368                            COMMAND_LOCATION_SET_DEV_CFG, TRUE,
// 1369                            ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 9, buf );
// 1370 }
// 1371 
// 1372 /*********************************************************************
// 1373  * @fn      zclGeneral_SendLocationGetDevCfg
// 1374  *
// 1375  * @brief   Call to send out a Get Device Configuration Command
// 1376  *
// 1377  * @param   srcEP - Sending application's endpoint
// 1378  * @param   dstAddr - where you want the message to go
// 1379  * @param   targetAddr - device for which location parameters are being requested
// 1380  *
// 1381  * @return  ZStatus_t
// 1382  */
// 1383 ZStatus_t zclGeneral_SendLocationGetDevCfg( uint8 srcEP, afAddrType_t *dstAddr,
// 1384                                             uint8 *targetAddr, uint8 disableDefaultRsp, uint8 seqNum )
// 1385 {
// 1386   uint8 buf[8];
// 1387 
// 1388   zcl_memcpy( buf, targetAddr, 8 );
// 1389 
// 1390   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1391                           COMMAND_LOCATION_GET_DEV_CFG, TRUE,
// 1392                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 8, buf );
// 1393 }
// 1394 
// 1395 /*********************************************************************
// 1396  * @fn      zclGeneral_SendLocationGetData
// 1397  *
// 1398  * @brief   Call to send out a Get Location Data Command
// 1399  *
// 1400  * @param   srcEP - Sending application's endpoint
// 1401  * @param   dstAddr - where you want the message to go
// 1402  * @param   locaData - location information and channel parameters that are requested.
// 1403  *
// 1404  * @return  ZStatus_t
// 1405  */
// 1406 ZStatus_t zclGeneral_SendLocationGetData( uint8 srcEP, afAddrType_t *dstAddr,
// 1407                                           zclLocationGetData_t *locData,
// 1408                                           uint8 disableDefaultRsp, uint8 seqNum )
// 1409 {
// 1410   uint8 buf[10]; // bitmap (1) + number responses (1) + IEEE Address (8)
// 1411   uint8 *pBuf = buf;
// 1412   uint8 len = 2; // bitmap + number responses
// 1413 
// 1414   *pBuf  = locData->absoluteOnly;
// 1415   *pBuf |= locData->recalculate << 1;
// 1416   *pBuf |= locData->brdcastIndicator << 2;
// 1417   *pBuf |= locData->brdcastResponse << 3;
// 1418   *pBuf |= locData->compactResponse << 4;
// 1419   pBuf++;  // move past the bitmap field
// 1420 
// 1421   *pBuf++ = locData->numResponses;
// 1422 
// 1423   if ( locData->brdcastIndicator == 0 )
// 1424   {
// 1425     zcl_memcpy( pBuf, locData->targetAddr, 8 );
// 1426     len += 8; // ieee addr
// 1427   }
// 1428 
// 1429   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1430                           COMMAND_LOCATION_GET_DATA, TRUE,
// 1431                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, len, buf );
// 1432 }
// 1433 
// 1434 /*********************************************************************
// 1435  * @fn      zclGeneral_SendLocationDevCfgResponse
// 1436  *
// 1437  * @brief   Call to send out a Device Configuration Response Command
// 1438  *
// 1439  * @param   srcEP - Sending application's endpoint
// 1440  * @param   dstAddr - where you want the message to go
// 1441  * @param   devCfg - device's location parameters that are requested
// 1442  *
// 1443  * @return  ZStatus_t
// 1444  */
// 1445 ZStatus_t zclGeneral_SendLocationDevCfgResponse( uint8 srcEP, afAddrType_t *dstAddr,
// 1446                                                  zclLocationDevCfgRsp_t *devCfg,
// 1447                                                  uint8 disableDefaultRsp, uint8 seqNum )
// 1448 {
// 1449   uint8 buf[10]; // 4 fields (2 octects each) + 2 fields (1 octect each)
// 1450   uint8 len = 1; // Status
// 1451 
// 1452   buf[0] = devCfg->status;
// 1453   if ( devCfg->status == ZCL_STATUS_SUCCESS )
// 1454   {
// 1455     buf[1] = LO_UINT16( devCfg->data.power );
// 1456     buf[2] = HI_UINT16( devCfg->data.power );
// 1457     buf[3] = LO_UINT16( devCfg->data.pathLossExponent );
// 1458     buf[4] = HI_UINT16( devCfg->data.pathLossExponent );
// 1459     buf[5] = LO_UINT16( devCfg->data.calcPeriod );
// 1460     buf[6] = HI_UINT16( devCfg->data.calcPeriod );
// 1461     buf[7] = devCfg->data.numMeasurements;
// 1462     buf[8] = LO_UINT16( devCfg->data.reportPeriod );
// 1463     buf[9] = HI_UINT16( devCfg->data.reportPeriod );
// 1464     len += 9;
// 1465   }
// 1466 
// 1467   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1468                           COMMAND_LOCATION_DEV_CFG_RSP, TRUE,
// 1469                           ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, len, buf );
// 1470 }
// 1471 
// 1472 /*********************************************************************
// 1473  * @fn      zclGeneral_SendLocationData
// 1474  *
// 1475  * @brief   Call to send out location data
// 1476  *
// 1477  * @param   srcEP - Sending application's endpoint
// 1478  * @param   dstAddr - where you want the message to go
// 1479  * @param   status - indicates whether response to request was successful or not
// 1480  * @param   locData - location information and channel parameters being sent
// 1481  *
// 1482  * @return  ZStatus_t
// 1483  */
// 1484 ZStatus_t zclGeneral_SendLocationData( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
// 1485                                        uint8 status, zclLocationData_t *locData,
// 1486                                        uint8 disableDefaultRsp, uint8 seqNum )
// 1487 {
// 1488   uint8 buf[16];
// 1489   uint8 *pBuf = buf;
// 1490   uint8 len = 0;
// 1491 
// 1492   if ( cmd == COMMAND_LOCATION_DATA_RSP )
// 1493   {
// 1494     // Only response command includes a status field
// 1495     *pBuf++ = status;
// 1496     len++;
// 1497   }
// 1498 
// 1499   if ( cmd != COMMAND_LOCATION_DATA_RSP || status == ZCL_STATUS_SUCCESS )
// 1500   {
// 1501     // Notification or Response with successful status
// 1502     *pBuf++ = locData->type;
// 1503     *pBuf++ = LO_UINT16( locData->absLoc.coordinate1 );
// 1504     *pBuf++ = HI_UINT16( locData->absLoc.coordinate1 );
// 1505     *pBuf++ = LO_UINT16( locData->absLoc.coordinate2 );
// 1506     *pBuf++ = HI_UINT16( locData->absLoc.coordinate2 );
// 1507     len += 5;
// 1508 
// 1509     if ( locationType2D(locData->type) == 0 )
// 1510     {
// 1511       // 2D location doesn't have coordinate 3
// 1512       *pBuf++ = LO_UINT16( locData->absLoc.coordinate3 );
// 1513       *pBuf++ = HI_UINT16( locData->absLoc.coordinate3 );
// 1514       len += 2;
// 1515     }
// 1516 
// 1517     if ( cmd != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 1518     {
// 1519       // Compact notification doesn't include these fields
// 1520       *pBuf++ = LO_UINT16( locData->absLoc.power );
// 1521       *pBuf++ = HI_UINT16( locData->absLoc.power );
// 1522       *pBuf++ = LO_UINT16( locData->absLoc.pathLossExponent );
// 1523       *pBuf++ = HI_UINT16( locData->absLoc.pathLossExponent );
// 1524       len += 4;
// 1525     }
// 1526 
// 1527     if ( locationTypeAbsolute(locData->type) == 0 )
// 1528     {
// 1529       // Absolute location doesn't include these fields
// 1530       if ( cmd != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 1531       {
// 1532         // Compact notification doesn't include this field
// 1533         *pBuf++ = locData->calcLoc.locationMethod;
// 1534         len++;
// 1535       }
// 1536 
// 1537       *pBuf++ = locData->calcLoc.qualityMeasure;
// 1538       *pBuf++ = LO_UINT16( locData->calcLoc.locationAge );
// 1539       *pBuf++ = HI_UINT16( locData->calcLoc.locationAge );
// 1540       len += 3;
// 1541     }
// 1542   }
// 1543 
// 1544   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1545                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1546                           disableDefaultRsp, 0, seqNum, len, buf );
// 1547 }
// 1548 #endif // ZCL_LOCATION
// 1549 
// 1550 /*********************************************************************
// 1551  * @fn      zclGeneral_FindCallbacks
// 1552  *
// 1553  * @brief   Find the callbacks for an endpoint
// 1554  *
// 1555  * @param   endpoint - endpoint to find the application callbacks for
// 1556  *
// 1557  * @return  pointer to the callbacks
// 1558  */
// 1559 static zclGeneral_AppCallbacks_t *zclGeneral_FindCallbacks( uint8 endpoint )
// 1560 {
// 1561   zclGenCBRec_t *pCBs;
// 1562 
// 1563   pCBs = zclGenCBs;
// 1564   while ( pCBs )
// 1565   {
// 1566     if ( pCBs->endpoint == endpoint )
// 1567       return ( pCBs->CBs );
// 1568     pCBs = pCBs->next;
// 1569   }
// 1570   return ( (zclGeneral_AppCallbacks_t *)NULL );
// 1571 }
// 1572 
// 1573 /*********************************************************************
// 1574  * @fn      zclGeneral_HdlIncoming
// 1575  *
// 1576  * @brief   Callback from ZCL to process incoming Commands specific
// 1577  *          to this cluster library or Profile commands for attributes
// 1578  *          that aren't in the attribute list
// 1579  *
// 1580  *
// 1581  * @param   pInMsg - pointer to the incoming message
// 1582  *
// 1583  * @return  ZStatus_t
// 1584  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1585 static ZStatus_t zclGeneral_HdlIncoming( zclIncoming_t *pInMsg )
zclGeneral_HdlIncoming:
          CFI Block cfiBlock165 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
        CODE
// 1586 {
        FUNCALL zclGeneral_HdlIncoming, zclGeneral_HdlInSpecificCommands
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1587   ZStatus_t stat = ZSuccess;
// 1588 
// 1589 #if defined ( INTER_PAN )
// 1590   if ( StubAPS_InterPan( pInMsg->msg->srcAddr.panId, pInMsg->msg->srcAddr.endPoint ) )
// 1591     return ( stat ); // Cluster not supported thru Inter-PAN
// 1592 #endif
// 1593   if ( zcl_ClusterCmd( pInMsg->hdr.fc.type ) )
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x7
        XRL     A,#0x1
        JNZ     ??zclGeneral_HdlIncoming_0
// 1594   {
// 1595     // Is this a manufacturer specific command?
// 1596     if ( pInMsg->hdr.fc.manuSpecific == 0 )
// 1597     {
// 1598       stat = zclGeneral_HdlInSpecificCommands( pInMsg );
        ; Setup parameters for call to function zclGeneral_HdlInSpecificCommands
        LCALL   ??zclGeneral_HdlInSpecificCommands?relay; Banked call to: zclGeneral_HdlInSpecificCommands
        MOV     A,R1
        MOV     R1,A
        SJMP    ??zclGeneral_HdlIncoming_1
// 1599     }
// 1600     else
// 1601     {
// 1602       // We don't support any manufacturer specific command.
// 1603       stat = ZFailure;
// 1604     }
// 1605   }
// 1606   else
// 1607   {
// 1608     // Handle all the normal (Read, Write...) commands -- should never get here
// 1609     stat = ZFailure;
??zclGeneral_HdlIncoming_0:
        MOV     R1,#0x1
// 1610   }
// 1611   return ( stat );
??zclGeneral_HdlIncoming_1:
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock165
// 1612 }
// 1613 
// 1614 /*********************************************************************
// 1615  * @fn      zclGeneral_HdlInSpecificCommands
// 1616  *
// 1617  * @brief   Callback from ZCL to process incoming Commands specific
// 1618  *          to this cluster library
// 1619 
// 1620  * @param   pInMsg - pointer to the incoming message
// 1621  *
// 1622  * @return  ZStatus_t
// 1623  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1624 static ZStatus_t zclGeneral_HdlInSpecificCommands( zclIncoming_t *pInMsg )
zclGeneral_HdlInSpecificCommands:
          CFI Block cfiBlock166 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
        CODE
// 1625 {
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInIdentity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInGroupsServer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInGroupsClient
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInScenesServer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInScenesClient
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInLevelControl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1626   ZStatus_t stat;
// 1627   zclGeneral_AppCallbacks_t *pCBs;
// 1628 
// 1629   // make sure endpoint exists
// 1630   pCBs = zclGeneral_FindCallbacks( pInMsg->msg->endPoint );
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_175:
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_109:
        MOV     R4,A
        MOV     DPTR,#zclGenCBs
??zclGeneral_HdlInSpecificCommands_0:
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_186:
        JZ      ??zclGeneral_HdlInSpecificCommands_1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        JNZ     ??zclGeneral_HdlInSpecificCommands_0
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
// 1631   if ( pCBs == NULL )
        MOV     A,R4
        ORL     A,R5
        JZ      ??zclGeneral_HdlInSpecificCommands_1
// 1632     return ( ZFailure );
// 1633 
// 1634   switch ( pInMsg->msg->clusterId )
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        MOV     R0,#?V0
        LCALL   ?US_SWITCH_DENSE
`?<Jumptable for zclGeneral_HdlInSpecificComman_0`:
        DATA
        DATA16
        DATA
        DATA16
        DW        0
        DATA
        DATA8
        DATA
        DATA8
        DB        8
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_3
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_4
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_5
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_6
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_7
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_8
        CODE
// 1635   {
// 1636 #ifdef ZCL_BASIC
// 1637     case ZCL_CLUSTER_ID_GEN_BASIC:
// 1638       stat = zclGeneral_ProcessInBasic( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_3:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        JNZ     ??zclGeneral_HdlInSpecificCommands_9
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??zclGeneral_HdlInSpecificCommands_10
??zclGeneral_HdlInSpecificCommands_2:
        MOV     R6,#0x1
        LJMP    ??zclGeneral_HdlInSpecificCommands_11 & 0xFFFF
??zclGeneral_HdlInSpecificCommands_1:
        MOV     R1,#0x1
        LJMP    ??zclGeneral_HdlInSpecificCommands_12 & 0xFFFF
??zclGeneral_HdlInSpecificCommands_10:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_17:
        JZ      ??zclGeneral_HdlInSpecificCommands_9
        ; Setup parameters for indirect call
        LCALL   ?CALL_IND
??zclGeneral_HdlInSpecificCommands_9:
        MOV     R6,#0x0
        SJMP    ??zclGeneral_HdlInSpecificCommands_11
// 1639       break;
// 1640 #endif // ZCL_BASIC
// 1641 
// 1642 #ifdef ZCL_IDENTIFY
// 1643     case ZCL_CLUSTER_ID_GEN_IDENTIFY:
// 1644       stat = zclGeneral_ProcessInIdentity( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_4:
        ; Setup parameters for call to function zclGeneral_ProcessInIdentity
        LCALL   ??zclGeneral_ProcessInIdentity?relay; Banked call to: zclGeneral_ProcessInIdentity
        SJMP    ??zclGeneral_HdlInSpecificCommands_13
// 1645       break;
// 1646 #endif // ZCL_IDENTIFY
// 1647 
// 1648 #ifdef ZCL_GROUPS
// 1649     case ZCL_CLUSTER_ID_GEN_GROUPS:
// 1650       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
??zclGeneral_HdlInSpecificCommands_5:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        JNZ     ??zclGeneral_HdlInSpecificCommands_14
// 1651         stat = zclGeneral_ProcessInGroupsServer( pInMsg );
        ; Setup parameters for call to function zclGeneral_ProcessInGroupsServer
        LCALL   ??zclGeneral_ProcessInGroupsServer?relay; Banked call to: zclGeneral_ProcessInGroupsServer
        SJMP    ??zclGeneral_HdlInSpecificCommands_13
// 1652       else
// 1653         stat = zclGeneral_ProcessInGroupsClient( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_14:
        ; Setup parameters for call to function zclGeneral_ProcessInGroupsClient
        LCALL   ??zclGeneral_ProcessInGroupsClient?relay; Banked call to: zclGeneral_ProcessInGroupsClient
        SJMP    ??zclGeneral_HdlInSpecificCommands_13
// 1654       break;
// 1655 #endif // ZCL_GROUPS
// 1656 
// 1657 #ifdef ZCL_SCENES
// 1658     case ZCL_CLUSTER_ID_GEN_SCENES:
// 1659       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
??zclGeneral_HdlInSpecificCommands_6:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        JNZ     ??zclGeneral_HdlInSpecificCommands_15
// 1660         stat = zclGeneral_ProcessInScenesServer( pInMsg, pCBs );
        ; Setup parameters for call to function zclGeneral_ProcessInScenesServer
        LCALL   ??zclGeneral_ProcessInScenesServer?relay; Banked call to: zclGeneral_ProcessInScenesServer
        SJMP    ??zclGeneral_HdlInSpecificCommands_13
// 1661       else
// 1662         stat = zclGeneral_ProcessInScenesClient( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_15:
        ; Setup parameters for call to function zclGeneral_ProcessInScenesClient
        LCALL   ??zclGeneral_ProcessInScenesClient?relay; Banked call to: zclGeneral_ProcessInScenesClient
        SJMP    ??zclGeneral_HdlInSpecificCommands_13
// 1663       break;
// 1664 #endif // ZCL_SCENES
// 1665 
// 1666 #ifdef ZCL_ON_OFF
// 1667     case ZCL_CLUSTER_ID_GEN_ON_OFF:
// 1668       stat = zclGeneral_ProcessInOnOff( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_7:
        MOV     R7,#0x0
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        JNZ     ??zclGeneral_HdlInSpecificCommands_16
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        JZ      ??zclGeneral_HdlInSpecificCommands_17
        DEC     A
        JZ      ??zclGeneral_HdlInSpecificCommands_17
        DEC     A
        JNZ     ??zclGeneral_HdlInSpecificCommands_18
??zclGeneral_HdlInSpecificCommands_17:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_18:
        JZ      ??zclGeneral_HdlInSpecificCommands_16
        ; Setup parameters for indirect call
        MOV     A,R2
        MOV     R1,A
        LCALL   ?CALL_IND
        SJMP    ??zclGeneral_HdlInSpecificCommands_16
??zclGeneral_HdlInSpecificCommands_18:
        MOV     R7,#0x1
??zclGeneral_HdlInSpecificCommands_16:
        MOV     A,R7
        SJMP    ??zclGeneral_HdlInSpecificCommands_19
// 1669       break;
// 1670 #endif // ZCL_ON_OFF
// 1671 
// 1672 #ifdef ZCL_LEVEL_CTRL
// 1673     case ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL:
// 1674       stat = zclGeneral_ProcessInLevelControl( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_8:
        ; Setup parameters for call to function zclGeneral_ProcessInLevelControl
        LCALL   ??zclGeneral_ProcessInLevelControl?relay; Banked call to: zclGeneral_ProcessInLevelControl
??zclGeneral_HdlInSpecificCommands_13:
        MOV     A,R1
??zclGeneral_HdlInSpecificCommands_19:
        MOV     R6,A
// 1675       break;
// 1676 #endif // ZCL_LEVEL_CTRL
// 1677 
// 1678 #ifdef ZCL_ALARMS
// 1679     case ZCL_CLUSTER_ID_GEN_ALARMS:
// 1680       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1681         stat = zclGeneral_ProcessInAlarmsServer( pInMsg, pCBs );
// 1682       else
// 1683         stat = zclGeneral_ProcessInAlarmsClient( pInMsg, pCBs );
// 1684       break;
// 1685 #endif // ZCL_ALARMS
// 1686 
// 1687 #ifdef ZCL_LOCATION
// 1688     case ZCL_CLUSTER_ID_GEN_LOCATION:
// 1689       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1690         stat = zclGeneral_ProcessInLocationServer( pInMsg, pCBs );
// 1691       else
// 1692         stat = zclGeneral_ProcessInLocationClient( pInMsg, pCBs );
// 1693       break;
// 1694 #endif // ZCL_LOCATION
// 1695 
// 1696     case ZCL_CLUSTER_ID_GEN_POWER_CFG:
// 1697     case ZCL_CLUSTER_ID_GEN_DEVICE_TEMP_CONFIG:
// 1698     case ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG:
// 1699     case ZCL_CLUSTER_ID_GEN_TIME:
// 1700     default:
// 1701       stat = ZFailure;
// 1702       break;
// 1703   }
// 1704 
// 1705   return ( stat );
??zclGeneral_HdlInSpecificCommands_11:
        MOV     A,R6
        MOV     R1,A
??zclGeneral_HdlInSpecificCommands_12:
        LJMP    ??Subroutine102_0 & 0xFFFF
          CFI EndBlock cfiBlock166
// 1706 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond167 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_175
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+-2
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker169 Using cfiCommon1
          CFI (cfiPicker169) NoFunction
          CFI (cfiPicker169) Picker
        MOV     DPL,R2
        MOV     DPH,R3
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiPicker169
        REQUIRE ??Subroutine84_0
        ; // Fall through to label ??Subroutine84_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine84_0:
          CFI Block cfiCond170 Using cfiCommon0
          CFI Function zclGeneral_ReadSceneCountCB
          CFI Conditional ??CrossCallReturnLabel_174
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-2
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-2
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker173 Using cfiCommon1
          CFI (cfiPicker173) NoFunction
          CFI (cfiPicker173) Picker
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_210:
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        RET
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiPicker173
// 1707 
// 1708 #ifdef ZCL_BASIC
// 1709 /*********************************************************************
// 1710  * @fn      zclGeneral_ProcessInBasic
// 1711  *
// 1712  * @brief   Process in the received Basic Command.
// 1713  *
// 1714  * @param   pInMsg - pointer to the incoming message
// 1715  *
// 1716  * @return  ZStatus_t
// 1717  */
// 1718 static ZStatus_t zclGeneral_ProcessInBasic( zclIncoming_t *pInMsg,
// 1719                                             zclGeneral_AppCallbacks_t *pCBs )
// 1720 {
// 1721   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1722   {
// 1723     if ( pInMsg->hdr.commandID > COMMAND_BASIC_RESET_FACT_DEFAULT )
// 1724       return ( ZFailure );   // Error ignore the command
// 1725 
// 1726     if ( pCBs->pfnBasicReset )
// 1727       pCBs->pfnBasicReset();
// 1728   }
// 1729   // no Client command
// 1730 
// 1731   return ( ZSuccess );
// 1732 }
// 1733 #endif // ZCL_BASIC
// 1734 
// 1735 #ifdef ZCL_IDENTIFY
// 1736 /*********************************************************************
// 1737  * @fn      zclGeneral_ProcessInIdentity
// 1738  *
// 1739  * @brief   Process in the received Identity Command.
// 1740  *
// 1741  * @param   pInMsg - pointer to the incoming message
// 1742  *
// 1743  * @return  ZStatus_t
// 1744  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1745 static ZStatus_t zclGeneral_ProcessInIdentity( zclIncoming_t *pInMsg,
zclGeneral_ProcessInIdentity:
          CFI Block cfiBlock174 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
        CODE
// 1746                                                zclGeneral_AppCallbacks_t *pCBs )
// 1747 {
        FUNCALL zclGeneral_ProcessInIdentity, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInIdentity, zclGeneral_SendIdentifyQueryResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0,R2
        MOV     ?V1,R3
// 1748   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInIdentity_0 & 0xFFFF
// 1749   {
// 1750     if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY )
        MOVX    A,@DPTR
        MOV     R0,A
        JNZ     ??zclGeneral_ProcessInIdentity_1
// 1751     {
// 1752       if ( pCBs->pfnIdentify )
        MOV     DPL,R4
        MOV     DPH,R5
        LJMP    ??zclGeneral_ProcessInIdentity_2 & 0xFFFF
// 1753       {
// 1754         zclIdentify_t cmd;
// 1755 
// 1756         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 1757         cmd.identifyTime = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1758 
// 1759         pCBs->pfnIdentify( &cmd );
// 1760       }
// 1761     }
// 1762     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_QUERY )
??zclGeneral_ProcessInIdentity_1:
        MOV     A,#0x1
        XRL     A,R0
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInIdentity_3 & 0xFFFF
// 1763     {
// 1764       uint16 identifyTime = 0;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1765 
// 1766       // Retrieve Identify Time
// 1767       zcl_ReadAttrData( pInMsg->msg->endPoint, pInMsg->msg->clusterId,
// 1768                         ATTRID_IDENTIFY_TIME, (uint8 *)&identifyTime, NULL );
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_176:
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR     A
        MOV     ?V2,A
        MOV     ?V3,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_69:
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_110:
        MOV     R1,A
        LCALL   ??zcl_ReadAttrData?relay; Banked call to: zcl_ReadAttrData
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1769 
// 1770       // Is device identifying itself?
// 1771       if ( identifyTime > 0 )
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_188:
        JZ      ??zclGeneral_ProcessInIdentity_4
// 1772       {
// 1773         zclGeneral_SendIdentifyQueryResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1774                                               identifyTime, true, pInMsg->hdr.transSeqNum );
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ??Subroutine96_0 & 0xFFFF
??CrossCallReturnLabel_252:
        ; Setup parameters for call to function zclGeneral_SendIdentifyQueryResponse
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_28:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V0,#0x1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_15:
        LCALL   ??zclGeneral_SendIdentifyQueryResponse?relay; Banked call to: zclGeneral_SendIdentifyQueryResponse
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1775 #ifdef ZCL_EZMODE
// 1776         zcl_EZModeAction( EZMODE_ACTION_IDENTIFY_QUERY, NULL );
// 1777 #endif
// 1778         return ( ZCL_STATUS_CMD_HAS_RSP );
        MOV     R1,#-0x1
        SJMP    ??zclGeneral_ProcessInIdentity_5
// 1779       }
// 1780     }
// 1781 #ifdef ZCL_EZMODE
// 1782     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_EZMODE_INVOKE )
// 1783     {
// 1784       if ( pCBs->pfnIdentifyEZModeInvoke )
// 1785       {
// 1786         pCBs->pfnIdentifyEZModeInvoke( pInMsg->pData[0] );
// 1787       }
// 1788     }
// 1789     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_UPDATE_COMMISSION_STATE )
// 1790     {
// 1791       if ( pCBs->pfnIdentifyUpdateCommState )
// 1792       {
// 1793         zclIdentifyUpdateCommState_t cmd;
// 1794 
// 1795         cmd.action = pInMsg->pData[0];
// 1796         cmd.commissionStateMask = pInMsg->pData[1];
// 1797 
// 1798         pCBs->pfnIdentifyUpdateCommState( &cmd );
// 1799       }
// 1800     }
// 1801 #endif
// 1802 
// 1803 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 1804     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_TRIGGER_EFFECT )
// 1805     {
// 1806       if ( pCBs->pfnIdentifyTriggerEffect )
// 1807       {
// 1808         zclIdentifyTriggerEffect_t cmd;
// 1809 
// 1810         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 1811         cmd.effectId = pInMsg->pData[0];
// 1812         cmd.effectVariant = pInMsg->pData[1];
// 1813 
// 1814         pCBs->pfnIdentifyTriggerEffect( &cmd );
// 1815       }
// 1816     }
// 1817 #endif //ZCL_LIGHT_LINK_ENHANCE
// 1818     else
// 1819     {
// 1820       return ( ZFailure );   // Error ignore the command
// 1821     }
// 1822   }
// 1823   else // Client Command
// 1824   {
// 1825     if ( pInMsg->hdr.commandID > COMMAND_IDENTIFY_QUERY_RSP )
??zclGeneral_ProcessInIdentity_0:
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInIdentity_6
// 1826       return ( ZFailure );   // Error ignore the command
??zclGeneral_ProcessInIdentity_3:
        MOV     R1,#0x1
        SJMP    ??zclGeneral_ProcessInIdentity_5
// 1827 
// 1828     if ( pCBs->pfnIdentifyQueryRsp )
??zclGeneral_ProcessInIdentity_6:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
??zclGeneral_ProcessInIdentity_2:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_39:
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,R4
        ORL     A,R5
        JZ      ??zclGeneral_ProcessInIdentity_4
// 1829     {
// 1830       zclIdentifyQueryRsp_t rsp;
// 1831 
// 1832       rsp.srcAddr = &(pInMsg->msg->srcAddr);
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_127:
        LCALL   ?Subroutine55 & 0xFFFF
// 1833       rsp.timeout = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??CrossCallReturnLabel_98:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_247:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine94_0 & 0xFFFF
??CrossCallReturnLabel_234:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine56 & 0xFFFF
// 1834 
// 1835       pCBs->pfnIdentifyQueryRsp( &rsp );
??CrossCallReturnLabel_179:
        ; Setup parameters for indirect call
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?CALL_IND
// 1836     }
// 1837   }
// 1838 
// 1839   return ( ZSuccess );
??zclGeneral_ProcessInIdentity_4:
        MOV     R1,#0x0
??zclGeneral_ProcessInIdentity_5:
        MOV     A,#0x6
        LJMP    ??Subroutine81_0 & 0xFFFF
          CFI EndBlock cfiBlock174
// 1840 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond175 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_109
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker177 Using cfiCommon1
          CFI (cfiPicker177) NoFunction
          CFI (cfiPicker177) Picker
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_129:
        RET
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiPicker177

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond178 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_109
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_110
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-4
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_15
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-6
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_16
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond181) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-6
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_104
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond182) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+-6
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 79)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_105
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+-6
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_106
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond184) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond184) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond184) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond184) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond184) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-6
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_107
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-6
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_108
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond186) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond186) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond186) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond186) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond186) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+-6
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker187 Using cfiCommon1
          CFI (cfiPicker187) NoFunction
          CFI (cfiPicker187) Picker
        MOV     A,R6
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiPicker187

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond188 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond189) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond189) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond189) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond189) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond189) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond189) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond189) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond189) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond189) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond189) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond189) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+-2
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond190) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond190) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond190) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond190) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond190) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond190) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond190) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond190) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond190) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond190) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond190) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond190) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+-2
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-2
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-2
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-2
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-2
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function zclGeneral_RemoveScene
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-2
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-2
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-2
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function zclGeneral_CountAllScenes
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond198) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond198) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond198) CFA_SP SP+-7
          CFI Block cfiPicker199 Using cfiCommon1
          CFI (cfiPicker199) NoFunction
          CFI (cfiPicker199) Picker
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_229:
        RET
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiPicker199

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond200 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_65
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond201) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond201) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond201) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-4
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_66
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond202) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond202) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond202) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond202) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond202) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond202) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+-4
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_67
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond203) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-4
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_68
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-4
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_69
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-4
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_70
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond206) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond206) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond206) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond206) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond206) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond206) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond206) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond206) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond206) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-4
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function zclGeneral_RemoveScene
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_71
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-4
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_72
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-4
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_73
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-4
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function zclGeneral_CountAllScenes
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_74
          CFI (cfiCond210) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond210) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond210) CFA_SP SP+-9
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_43
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+-4
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_44
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond212) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+-4
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_45
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond213) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-4
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_223
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-4
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_224
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-4
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_225
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-4
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_220
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-4
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_222
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-4
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function zclGeneral_CountScenes
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_221
          CFI (cfiCond219) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond219) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond219) CFA_SP SP+-9
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_272
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond220) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond220) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond220) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond220) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond220) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond220) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond220) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+-4
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_273
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond221) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond221) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond221) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond221) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond221) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond221) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond221) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond221) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond221) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-4
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_274
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-4
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_275
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond223) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond223) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond223) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond223) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond223) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-4
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_276
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond224) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond224) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond224) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond224) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond224) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond224) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond224) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond224) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond224) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-4
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_277
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond225) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond225) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond225) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond225) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond225) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond225) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond225) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond225) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond225) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-4
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_278
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond226) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond226) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond226) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond226) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond226) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond226) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond226) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+-4
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_279
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond227) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond227) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond227) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+-4
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_280
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-4
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_281
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-4
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_282
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond230) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond230) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond230) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond230) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond230) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond230) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond230) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond230) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond230) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+-4
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_283
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond231) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond231) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond231) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond231) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond231) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond231) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond231) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond231) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond231) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond231) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+-4
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_284
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond232) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond232) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond232) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond232) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-4
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_62
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-4
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_63
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-4
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker235 Using cfiCommon1
          CFI (cfiPicker235) NoFunction
          CFI (cfiPicker235) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiPicker235
// 1841 #endif // ZCL_IDENTIFY
// 1842 
// 1843 #ifdef ZCL_GROUPS
// 1844 
// 1845 /*********************************************************************
// 1846  * @fn      zclGeneral_AddGroup
// 1847  *
// 1848  * @brief   Add a Group.
// 1849  *
// 1850  * @param   endPoint - application endpoint
// 1851  * @param   group - group to be added
// 1852  * @param   pData - pointer to the group info
// 1853  *
// 1854  * @return  ZStatus_t
// 1855  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1856 static ZStatus_t zclGeneral_AddGroup( uint8 endPoint, aps_Group_t *group, uint8 *pData )
zclGeneral_AddGroup:
          CFI Block cfiBlock236 Using cfiCommon0
          CFI Function zclGeneral_AddGroup
        CODE
// 1857 {
        FUNCALL zclGeneral_AddGroup, addSceneSelector_setGroupID
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 1858 //###################################################################
// 1859 //###################################################################
// 1860 #if defined(SCENE_SELECTOR) || defined(SCENE_SELECTOR_TOUCHKEY)
// 1861 	addSceneSelector_setGroupID(endPoint, group);
        ; Setup parameters for call to function addSceneSelector_setGroupID
        LCALL   ??addSceneSelector_setGroupID?relay; Banked call to: addSceneSelector_setGroupID
// 1862 	return SUCCESS;
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock236
// 1863 	
// 1864 #elif defined(DIMMER_SWITCH) || defined(DIMMER_SWITCH_TOUCHKEY)
// 1865 	addDimmerSwitch_setGroupID(endPoint, group);
// 1866 	return SUCCESS;
// 1867 	
// 1868 #else
// 1869 	uint8 nameLen;
// 1870 	uint8 nameSupport = FALSE;
// 1871 
// 1872 	pData += 2;   // Move past group ID
// 1873 	nameLen = *pData++;
// 1874 
// 1875 	// Retrieve Name Support attribute
// 1876 	zcl_ReadAttrData( endPoint, ZCL_CLUSTER_ID_GEN_GROUPS,
// 1877 					  ATTRID_GROUP_NAME_SUPPORT, &nameSupport, NULL );
// 1878 
// 1879 	if ( nameSupport )
// 1880 	{
// 1881 	  if ( nameLen > (APS_GROUP_NAME_LEN-1) )
// 1882 		 nameLen = (APS_GROUP_NAME_LEN-1);
// 1883 	  group->name[0] = nameLen;
// 1884 	  zcl_memcpy( &(group->name[1]), pData, nameLen );
// 1885 	}
// 1886 
// 1887 	return ( aps_AddGroup( endPoint, group ) );
// 1888 
// 1889 #endif
// 1890 //###################################################################
// 1891 //###################################################################
// 1892 }
// 1893 
// 1894 /*********************************************************************
// 1895  * @fn      zclGeneral_ProcessInGroupsServer
// 1896  *
// 1897  * @brief   Process in the received Groups Command.
// 1898  *
// 1899  * @param   pInMsg - pointer to the incoming message
// 1900  *
// 1901  * @return  ZStatus_t
// 1902  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1903 static ZStatus_t zclGeneral_ProcessInGroupsServer( zclIncoming_t *pInMsg )
zclGeneral_ProcessInGroupsServer:
          CFI Block cfiBlock237 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
        CODE
// 1904 {
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 80, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupViewResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 79, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 79, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindAllGroupsForEndpoint
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_CountAllGroups
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupGetMembershipRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 83, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zcl_SendDefaultRspCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 83, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_RemoveAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_RemoveGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 80, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindAllGroupsForEndpoint
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_RemoveAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_RemoveAllGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 80, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 54
        MOV     A,#-0x36
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1905   aps_Group_t group;
// 1906   aps_Group_t *pGroup;
// 1907   uint8 *pData;
// 1908   uint8 status;
// 1909   uint8 grpCnt;
// 1910   uint8 grpRspCnt = 0;
        MOV     ?V4,#0x0
// 1911   uint16 *grpList;
// 1912   uint16 identifyTime = 0;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1913   uint8 i;
// 1914   ZStatus_t stat = ZSuccess;
        MOV     ?V0,#0x0
// 1915 
// 1916   zcl_memset( (uint8*)&group, 0, sizeof( aps_Group_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x12
        MOV     R5,A
        MOV     R1,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??osal_memset?relay  ; Banked call to: osal_memset
// 1917 
// 1918   pData = pInMsg->pData;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine36 & 0xFFFF
// 1919   group.ID = BUILD_UINT16( pData[0], pData[1] );
??CrossCallReturnLabel_57:
        MOV     DPL,?V2
        MOV     DPH,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     DPL,?V2
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine89_0 & 0xFFFF
// 1920   switch ( pInMsg->hdr.commandID )
??CrossCallReturnLabel_213:
        MOV     A,R6
        ADD     A,#0x6
        MOV     ?V8,A
        CLR     A
        ADDC    A,R7
        MOV     ?V9,A
        MOV     A,R6
        ADD     A,#0x7
        MOV     ?V6,A
        CLR     A
        ADDC    A,R7
        MOV     ?V7,A
        MOV     DPL,?V6
        MOV     DPH,A
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInGroupsServer_0
        DEC     A
        JZ      ??zclGeneral_ProcessInGroupsServer_1
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_2 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_3 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_4 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_5 & 0xFFFF
        LJMP    ??zclGeneral_ProcessInGroupsServer_6 & 0xFFFF
// 1921   {
// 1922     case COMMAND_GROUP_ADD:
// 1923       status = zclGeneral_AddGroup( pInMsg->msg->endPoint, &group, pData );
??zclGeneral_ProcessInGroupsServer_0:
        ; Setup parameters for call to function zclGeneral_AddGroup
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP101_8
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine98_0 & 0xFFFF
??CrossCallReturnLabel_258:
        LCALL   ??zclGeneral_AddGroup?relay; Banked call to: zclGeneral_AddGroup
        MOV     A,R1
        MOV     R4,A
// 1924       if ( status != ZSuccess )
        JZ      ??zclGeneral_ProcessInGroupsServer_7
// 1925       {
// 1926         if ( status == ZApsDuplicateEntry )
        MOV     A,#-0x48
        XRL     A,R4
        JNZ     ??zclGeneral_ProcessInGroupsServer_8
// 1927         {
// 1928           status = ZCL_STATUS_DUPLICATE_EXISTS;
        MOV     R4,#-0x76
        SJMP    ??zclGeneral_ProcessInGroupsServer_7
// 1929         }
// 1930         else
// 1931         {
// 1932           status = ZCL_STATUS_INSUFFICIENT_SPACE;
??zclGeneral_ProcessInGroupsServer_8:
        MOV     R4,#-0x77
// 1933         }
// 1934       }
// 1935 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 1936       if ( UNICAST_MSG( pInMsg->msg ) )
// 1937 #endif
// 1938       {
// 1939         zclGeneral_SendGroupAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1940                                          status, group.ID, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_7:
        LCALL   ?Subroutine15 & 0xFFFF
// 1941         stat = ZCL_STATUS_CMD_HAS_RSP;
// 1942       }
??CrossCallReturnLabel_6:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV     ?V0,#0x1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 78)
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV     A,R4
        MOV     R5,A
        MOV     R4,#0x0
        LJMP    ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 76)
// 1943       break;
// 1944 
// 1945     case COMMAND_GROUP_VIEW:
// 1946 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 1947       if ( UNICAST_MSG( pInMsg->msg ) )
// 1948 #endif
// 1949       {
// 1950         pGroup = aps_FindGroup( pInMsg->msg->endPoint, group.ID );
??zclGeneral_ProcessInGroupsServer_1:
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine98_0 & 0xFFFF
??CrossCallReturnLabel_259:
        LCALL   ??aps_FindGroup?relay; Banked call to: aps_FindGroup
        MOV     ?V0,R2
        MOV     ?V1,R3
// 1951         if ( pGroup )
        MOV     A,R2
        ORL     A,?V1
        JZ      ??zclGeneral_ProcessInGroupsServer_10
// 1952         {
// 1953           status = ZCL_STATUS_SUCCESS;
        MOV     R4,#0x0
        SJMP    ??zclGeneral_ProcessInGroupsServer_11
// 1954         }
// 1955         else
// 1956         {
// 1957           // Group not found
// 1958           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInGroupsServer_10:
        MOV     R4,#-0x75
// 1959           pGroup = &group;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
// 1960         }
// 1961         zclGeneral_SendGroupViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1962                                           status, pGroup, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_11:
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_34:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 79)
        MOV     R5,#0x1
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_104:
        LCALL   ??zclGeneral_SendGroupViewResponse?relay; Banked call to: zclGeneral_SendGroupViewResponse
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 1963         stat = ZCL_STATUS_CMD_HAS_RSP;
        LJMP    ??zclGeneral_ProcessInGroupsServer_12 & 0xFFFF
// 1964       }
// 1965       break;
// 1966 
// 1967     case COMMAND_GROUP_GET_MEMBERSHIP:
// 1968 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 1969       if ( UNICAST_MSG( pInMsg->msg ) )
// 1970 #endif
// 1971       {
// 1972         grpCnt = *pData++;
??zclGeneral_ProcessInGroupsServer_2:
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     ?V10,A
        MOV     ?V2,R0
        MOV     ?V3,R1
// 1973 
// 1974         // Allocate space for the group list
// 1975         grpList = zcl_mem_alloc( sizeof( uint16 ) * APS_MAX_GROUPS );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x20
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 1976         if ( grpList != NULL )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_13 & 0xFFFF
// 1977         {
// 1978           if ( grpCnt == 0 )
        MOV     A,?V10
        JNZ     ??zclGeneral_ProcessInGroupsServer_14
// 1979           {
// 1980             // Find out all the groups of which the endpoint is a member.
// 1981             grpRspCnt = aps_FindAllGroupsForEndpoint( pInMsg->msg->endPoint, grpList );
        ; Setup parameters for call to function aps_FindAllGroupsForEndpoint
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine98_0 & 0xFFFF
// 1982           }
??CrossCallReturnLabel_260:
        LCALL   ??aps_FindAllGroupsForEndpoint?relay; Banked call to: aps_FindAllGroupsForEndpoint
        MOV     A,R1
        MOV     ?V4,A
        SJMP    ??zclGeneral_ProcessInGroupsServer_15
// 1983           else
// 1984           {
// 1985             // Find out the groups (in the list) of which the endpoint is a member.
// 1986             for ( i = 0; i < grpCnt; i++ )
??zclGeneral_ProcessInGroupsServer_14:
        MOV     ?V5,A
// 1987             {
// 1988               group.ID = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInGroupsServer_16:
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine94_0 & 0xFFFF
??CrossCallReturnLabel_235:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine56 & 0xFFFF
// 1989               pData += 2;
??CrossCallReturnLabel_180:
        MOV     A,?V2
        ADD     A,#0x2
        MOV     ?V2,A
        JNC     ??zclGeneral_ProcessInGroupsServer_17
        INC     ?V3
// 1990 
// 1991               if ( aps_FindGroup( pInMsg->msg->endPoint, group.ID ) )
??zclGeneral_ProcessInGroupsServer_17:
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_43:
        LCALL   ??Subroutine98_0 & 0xFFFF
??CrossCallReturnLabel_261:
        LCALL   ??aps_FindGroup?relay; Banked call to: aps_FindGroup
        MOV     ?V7,R3
        MOV     A,R2
        ORL     A,?V7
        JZ      ??zclGeneral_ProcessInGroupsServer_18
// 1992                 grpList[grpRspCnt++] = group.ID;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
// 1993             }
??CrossCallReturnLabel_70:
        MOV     R0,?V4
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,?V0
        ADD     A,R0
        MOV     DPL,A
        MOV     A,?V1
        ADDC    A,R1
        MOV     DPH,A
        LCALL   ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_214:
        INC     ?V4
??zclGeneral_ProcessInGroupsServer_18:
        DEC     ?V5
        MOV     A,?V5
        JNZ     ??zclGeneral_ProcessInGroupsServer_16
        MOV     A,?V4
        JZ      ??zclGeneral_ProcessInGroupsServer_19
// 1994           }
// 1995 
// 1996           if ( grpCnt == 0 ||  grpRspCnt != 0 )
// 1997           {
// 1998             zclGeneral_SendGroupGetMembershipResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1999                                                        aps_GroupsRemaingCapacity(), grpRspCnt,
// 2000                                                        grpList, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_15:
        ; Setup parameters for call to function aps_CountAllGroups
        LCALL   ??aps_CountAllGroups?relay; Banked call to: aps_CountAllGroups
        MOV     A,R1
        MOV     R1,A
        LCALL   ?Subroutine26 & 0xFFFF
// 2001           }
??CrossCallReturnLabel_35:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV     ?V2,#0x1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 78)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV     A,?V4
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 81)
        MOV     A,#0x10
        CLR     C
        SUBB    A,R1
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 82)
        MOV     ?V2,#0x1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV     R5,#0x1
        MOV     R4,#0x2
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_105:
        LCALL   ??zclGeneral_SendGroupGetMembershipRequest?rela; Banked call to: zclGeneral_SendGroupGetMembershipRequest
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 2002 
// 2003           zcl_mem_free( grpList );
??zclGeneral_ProcessInGroupsServer_19:
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        SJMP    ??zclGeneral_ProcessInGroupsServer_20
// 2004         }
// 2005         else
// 2006         {
// 2007           // Couldn't allocate space for the group list -- send a Default Response command back.
// 2008           zclDefaultRspCmd_t defaultRspCmd;
// 2009 
// 2010           defaultRspCmd.commandID = pInMsg->hdr.commandID;
??zclGeneral_ProcessInGroupsServer_13:
        MOV     DPL,?V6
        MOV     DPH,?V7
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 2011           defaultRspCmd.statusCode = ZCL_STATUS_INSUFFICIENT_SPACE;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#-0x77
        MOVX    @DPTR,A
// 2012           zcl_SendDefaultRspCmd( pInMsg->msg->endPoint, &(pInMsg->msg->srcAddr),
// 2013                                  pInMsg->msg->clusterId, &defaultRspCmd,
// 2014                                  ZCL_FRAME_SERVER_CLIENT_DIR, true, 0, pInMsg->hdr.transSeqNum );
        LCALL   ?Subroutine15 & 0xFFFF
// 2015         }
??CrossCallReturnLabel_7:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        CLR     A
        MOV     ?V0,A
        MOV     ?V1,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 79)
        MOV     ?V0,#0x1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 80)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 81)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 83)
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_16:
        LCALL   ??zcl_SendDefaultRspCmd?relay; Banked call to: zcl_SendDefaultRspCmd
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 2016 
// 2017         stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInGroupsServer_20:
        SJMP    ??zclGeneral_ProcessInGroupsServer_12
// 2018       }
// 2019       break;
// 2020 
// 2021     case COMMAND_GROUP_REMOVE:
// 2022 #if defined ( ZCL_SCENES )
// 2023       zclGeneral_RemoveAllScenes( pInMsg->msg->endPoint, group.ID );
??zclGeneral_ProcessInGroupsServer_3:
        ; Setup parameters for call to function zclGeneral_RemoveAllScenes
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine98_0 & 0xFFFF
??CrossCallReturnLabel_262:
        LCALL   ??zclGeneral_RemoveAllScenes?relay; Banked call to: zclGeneral_RemoveAllScenes
// 2024 #endif
// 2025       if ( aps_RemoveGroup( pInMsg->msg->endPoint, group.ID ) )
        ; Setup parameters for call to function aps_RemoveGroup
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_44:
        LCALL   ??Subroutine98_0 & 0xFFFF
??CrossCallReturnLabel_263:
        LCALL   ??aps_RemoveGroup?relay; Banked call to: aps_RemoveGroup
        MOV     A,R1
        JZ      ??zclGeneral_ProcessInGroupsServer_21
// 2026       {
// 2027         status = ZCL_STATUS_SUCCESS;
        MOV     R4,#0x0
        SJMP    ??zclGeneral_ProcessInGroupsServer_22
// 2028       }
// 2029       else
// 2030       {
// 2031         status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInGroupsServer_21:
        MOV     R4,#-0x75
// 2032       }
// 2033 
// 2034 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 2035       if ( UNICAST_MSG( pInMsg->msg ) )
// 2036 #endif
// 2037       {
// 2038         zclGeneral_SendGroupRemoveResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2039                                             status, group.ID, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_22:
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_8:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV     ?V0,#0x1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 78)
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV     A,R4
        MOV     R5,A
        MOV     R4,#0x3
??zclGeneral_ProcessInGroupsServer_9:
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_106:
        LCALL   ??zclGeneral_SendGroupResponse?relay; Banked call to: zclGeneral_SendGroupResponse
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 2040         stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInGroupsServer_12:
        MOV     ?V0,#-0x1
// 2041       }
// 2042       break;
        LJMP    ??zclGeneral_ProcessInGroupsServer_23 & 0xFFFF
// 2043 
// 2044     case COMMAND_GROUP_REMOVE_ALL:
// 2045       {
// 2046         uint8 numGroups;
// 2047         uint16 groupList[APS_MAX_GROUPS];
// 2048 
// 2049         if ( numGroups = aps_FindAllGroupsForEndpoint( pInMsg->msg->endPoint, groupList ) )
??zclGeneral_ProcessInGroupsServer_4:
        ; Setup parameters for call to function aps_FindAllGroupsForEndpoint
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP101_8
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine98_0 & 0xFFFF
??CrossCallReturnLabel_264:
        LCALL   ??aps_FindAllGroupsForEndpoint?relay; Banked call to: aps_FindAllGroupsForEndpoint
        MOV     A,R1
        MOV     ?V2,A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_23 & 0xFFFF
// 2050         {
// 2051           for ( i = 0; i < numGroups; i++ )
        MOV     ?V1,#0x0
// 2052           {
// 2053 #if defined ( ZCL_SCENES )
// 2054             zclGeneral_RemoveAllScenes( pInMsg->msg->endPoint, groupList[i] );
??zclGeneral_ProcessInGroupsServer_24:
        ; Setup parameters for call to function zclGeneral_RemoveAllScenes
        MOV     R0,?V1
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOV     A,DPL
        ADD     A,R0
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,R1
        MOV     DPH,A
        LCALL   ?Subroutine30 & 0xFFFF
// 2055 #endif
// 2056           }
??CrossCallReturnLabel_45:
        LCALL   ??Subroutine98_0 & 0xFFFF
??CrossCallReturnLabel_265:
        LCALL   ??zclGeneral_RemoveAllScenes?relay; Banked call to: zclGeneral_RemoveAllScenes
        INC     ?V1
        MOV     A,?V1
        CLR     C
        SUBB    A,?V2
        JC      ??zclGeneral_ProcessInGroupsServer_24
// 2057 
// 2058           aps_RemoveAllGroup( pInMsg->msg->endPoint );
        ; Setup parameters for call to function aps_RemoveAllGroup
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine98_0 & 0xFFFF
// 2059         }
// 2060       }
??CrossCallReturnLabel_266:
        LCALL   ??aps_RemoveAllGroup?relay; Banked call to: aps_RemoveAllGroup
        SJMP    ??zclGeneral_ProcessInGroupsServer_23
// 2061       break;
// 2062 
// 2063     case COMMAND_GROUP_ADD_IF_IDENTIFYING:
// 2064       // Retrieve Identify Time
// 2065       zcl_ReadAttrData( pInMsg->msg->endPoint, ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 2066                         ATTRID_IDENTIFY_TIME, (uint8 *)&identifyTime, NULL );
??zclGeneral_ProcessInGroupsServer_5:
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR     A
        MOV     ?V6,A
        MOV     ?V7,A
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 78)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V6,R0
        MOV     ?V7,R1
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#0x3
        MOV     R3,#0x0
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine98_0 & 0xFFFF
??CrossCallReturnLabel_267:
        LCALL   ??zcl_ReadAttrData?relay; Banked call to: zcl_ReadAttrData
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 2067 
// 2068       // Is device identifying itself?
// 2069       if ( identifyTime > 0 )
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_189:
        JZ      ??zclGeneral_ProcessInGroupsServer_23
// 2070       {
// 2071         zclGeneral_AddGroup( pInMsg->msg->endPoint, &group, pData );
        ; Setup parameters for call to function zclGeneral_AddGroup
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP101_8
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine98_0 & 0xFFFF
// 2072       }
??CrossCallReturnLabel_268:
        LCALL   ??zclGeneral_AddGroup?relay; Banked call to: zclGeneral_AddGroup
        SJMP    ??zclGeneral_ProcessInGroupsServer_23
// 2073       break;
// 2074 
// 2075     default:
// 2076       stat = ZFailure;
??zclGeneral_ProcessInGroupsServer_6:
        MOV     ?V0,#0x1
// 2077       break;
// 2078   }
// 2079 
// 2080   return ( stat );
??zclGeneral_ProcessInGroupsServer_23:
        MOV     R1,?V0
        MOV     A,#0x36
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock237
// 2081 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond238 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_178
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-2
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+-2
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond242) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond242) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond242) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond242) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond242) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond242) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond242) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond242) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+-2
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond243) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond243) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond243) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond243) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond243) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-2
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+-2
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond245) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+-2
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker246 Using cfiCommon1
          CFI (cfiPicker246) NoFunction
          CFI (cfiPicker246) Picker
        MOV     A,R0
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiPicker246
        REQUIRE ??Subroutine85_0
        ; // Fall through to label ??Subroutine85_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine85_0:
          CFI Block cfiCond247 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_177
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-2
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+-2
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond250) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond250) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond250) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond250) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond250) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond250) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond250) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond250) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+-2
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-2
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-2
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond253) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond253) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-2
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-2
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-2
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker256 Using cfiCommon1
          CFI (cfiPicker256) NoFunction
          CFI (cfiPicker256) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiPicker256

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond257 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond258) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond258) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond258) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond258) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond258) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-2
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond259) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond259) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond259) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond259) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond259) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+-2
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker260 Using cfiCommon1
          CFI (cfiPicker260) NoFunction
          CFI (cfiPicker260) Picker
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_227:
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiPicker260

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond261 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond262) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond262) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond262) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond262) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond262) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond262) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-2
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker263 Using cfiCommon1
          CFI (cfiPicker263) NoFunction
          CFI (cfiPicker263) Picker
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_114:
        MOV     ?V2,A
        MOV     R0,#?V2
        RET
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiPicker263

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond264 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_16
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-2
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiPicker266 Using cfiCommon1
          CFI (cfiPicker266) NoFunction
          CFI (cfiPicker266) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_123:
        RET
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiPicker266

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond267 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-2
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-2
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker270 Using cfiCommon1
          CFI (cfiPicker270) NoFunction
          CFI (cfiPicker270) Picker
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_113:
        MOV     ?V0,A
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiPicker270

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond271 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_114, ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_114, ??CrossCallReturnLabel_35
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-4
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_113, ??CrossCallReturnLabel_6
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond273) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-4
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_113, ??CrossCallReturnLabel_7
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-4
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_113, ??CrossCallReturnLabel_8
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond275) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond275) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond275) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-4
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker276 Using cfiCommon1
          CFI (cfiPicker276) NoFunction
          CFI (cfiPicker276) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        ; Setup parameters for call to function zclGeneral_SendGroupViewResponse
        ; Setup parameters for call to function zclGeneral_SendGroupGetMembershipRequest
        ; Setup parameters for call to function zclGeneral_SendGroupResponse
        ; Setup parameters for call to function zcl_SendDefaultRspCmd
        ; Setup parameters for call to function zclGeneral_SendGroupResponse
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiPicker276
// 2082 
// 2083 /*********************************************************************
// 2084  * @fn      zclGeneral_ProcessInGroupsClient
// 2085  *
// 2086  * @brief   Process in the received Groups Command.
// 2087  *
// 2088  * @param   pInMsg - pointer to the incoming message
// 2089  *
// 2090  * @return  ZStatus_t
// 2091  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2092 static ZStatus_t zclGeneral_ProcessInGroupsClient( zclIncoming_t *pInMsg,
zclGeneral_ProcessInGroupsClient:
          CFI Block cfiBlock277 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
        CODE
// 2093                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2094 {
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 53, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 53, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 28
        MOV     A,#-0x1c
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 50)
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V0,R4
        MOV     ?V1,R5
// 2095   aps_Group_t group;
// 2096   uint8 *pData = pInMsg->pData;
        LCALL   ?Subroutine32 & 0xFFFF
// 2097   uint8 grpCnt;
// 2098   uint8 nameLen;
// 2099   zclGroupRsp_t rsp;
// 2100   uint8 i;
// 2101   ZStatus_t stat = ZSuccess;
??CrossCallReturnLabel_256:
        MOV     ?V11,#0x0
// 2102 
// 2103   zcl_memset( (uint8*)&group, 0, sizeof( aps_Group_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x12
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??osal_memset?relay  ; Banked call to: osal_memset
// 2104   zcl_memset( (uint8*)&rsp, 0, sizeof( zclGroupRsp_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xa
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   ??osal_memset?relay  ; Banked call to: osal_memset
// 2105 
// 2106   switch ( pInMsg->hdr.commandID )
        MOV     A,?V0
        ADD     A,#0x18
        MOV     ?V0,A
        JNC     ??zclGeneral_ProcessInGroupsClient_0
        INC     ?V1
??zclGeneral_ProcessInGroupsClient_0:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,?V4
        ADD     A,#0x7
        MOV     ?V2,A
        CLR     A
        ADDC    A,?V5
        MOV     ?V3,A
        MOV     DPL,?V2
        MOV     DPH,A
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInGroupsClient_1
        DEC     A
        JZ      ??zclGeneral_ProcessInGroupsClient_1
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsClient_2 & 0xFFFF
        DEC     A
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInGroupsClient_3 & 0xFFFF
// 2107   {
// 2108     case COMMAND_GROUP_ADD_RSP:
// 2109     case COMMAND_GROUP_VIEW_RSP:
// 2110     case COMMAND_GROUP_REMOVE_RSP:
// 2111       rsp.status = *pData++;
??zclGeneral_ProcessInGroupsClient_1:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 2112       group.ID = BUILD_UINT16( pData[0], pData[1] );
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_81:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine56 & 0xFFFF
// 2113 
// 2114       if ( rsp.status == ZCL_STATUS_SUCCESS && pInMsg->hdr.commandID == COMMAND_GROUP_VIEW_RSP )
??CrossCallReturnLabel_181:
        MOV     A,R4
        JNZ     ??CrossCallReturnLabel_182
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??CrossCallReturnLabel_182
// 2115       {
// 2116         pData += 2;   // Move past ID
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??zclGeneral_ProcessInGroupsClient_4
        INC     R7
// 2117         nameLen = *pData++;
??zclGeneral_ProcessInGroupsClient_4:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 2118         if ( nameLen > (APS_GROUP_NAME_LEN-1) )
        CLR     C
        SUBB    A,#0x10
        JC      ??zclGeneral_ProcessInGroupsClient_5
// 2119           nameLen = (APS_GROUP_NAME_LEN-1);
        MOV     R4,#0xf
// 2120         group.name[0] = nameLen;
??zclGeneral_ProcessInGroupsClient_5:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
// 2121         zcl_memcpy( &(group.name[1]), pData, nameLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V8,R6
        MOV     ?V9,R7
        MOV     ?V10,#0x0
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 53)
        MOV     R5,#0x0
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 50)
// 2122         rsp.grpName = group.name;
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine56 & 0xFFFF
// 2123       }
// 2124 
// 2125       if ( pCBs->pfnGroupRsp )
??CrossCallReturnLabel_182:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_190:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsClient_6 & 0xFFFF
// 2126       {
// 2127         rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL   ?Subroutine18 & 0xFFFF
// 2128         rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_11:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2129         rsp.grpCnt = 1;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 2130         rsp.grpList = &group.ID;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP100_8
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine56 & 0xFFFF
// 2131         rsp.capacity = 0;
??CrossCallReturnLabel_183:
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine51 & 0xFFFF
// 2132 
// 2133         pCBs->pfnGroupRsp( &rsp );
// 2134       }
??CrossCallReturnLabel_94:
        LCALL   ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_287:
        LCALL   ?CALL_IND
        LJMP    ??zclGeneral_ProcessInGroupsClient_6 & 0xFFFF
// 2135       break;
// 2136 
// 2137     case COMMAND_GROUP_GET_MEMBERSHIP_RSP:
// 2138       {
// 2139         uint16 *grpList = NULL;
??zclGeneral_ProcessInGroupsClient_2:
        MOV     ?V6,#0x0
        MOV     ?V7,#0x0
// 2140         rsp.capacity = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 2141         grpCnt = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V8,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 2142 
// 2143         if ( grpCnt > 0 )
        JZ      ??zclGeneral_ProcessInGroupsClient_7
// 2144         {
// 2145           // Allocate space for the group list
// 2146           grpList = zcl_mem_alloc( sizeof( uint16 ) * grpCnt );
        ; Setup parameters for call to function osal_mem_alloc
        ADD     A,0xE0 /* A   */
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V6,R2
        MOV     ?V7,R3
// 2147           if ( grpList != NULL )
        MOV     A,R2
        ORL     A,?V7
        JZ      ??zclGeneral_ProcessInGroupsClient_7
// 2148           {
// 2149             rsp.grpCnt = grpCnt;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V8
        MOVX    @DPTR,A
// 2150             for ( i = 0; i < grpCnt; i++ )
        MOV     R4,#0x0
        SJMP    ??zclGeneral_ProcessInGroupsClient_8
// 2151             {
// 2152               grpList[i] = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInGroupsClient_9:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        ADD     A,R0
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        MOV     A,R4
        ADD     A,0xE0 /* A   */
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,?V6
        ADD     A,R0
        MOV     DPL,A
        MOV     A,?V7
        ADDC    A,R1
        MOV     DPH,A
        LCALL   ??Subroutine89_0 & 0xFFFF
// 2153               pData += 2;
??CrossCallReturnLabel_215:
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??zclGeneral_ProcessInGroupsClient_10
        INC     R7
// 2154             }
??zclGeneral_ProcessInGroupsClient_10:
        INC     R4
??zclGeneral_ProcessInGroupsClient_8:
        MOV     A,R4
        CLR     C
        SUBB    A,?V8
        JC      ??zclGeneral_ProcessInGroupsClient_9
// 2155           }
// 2156         }
// 2157 
// 2158         if ( pCBs->pfnGroupRsp )
??zclGeneral_ProcessInGroupsClient_7:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_191:
        JZ      ??zclGeneral_ProcessInGroupsClient_11
// 2159         {
// 2160           rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL   ?Subroutine18 & 0xFFFF
// 2161           rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_12:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2162           rsp.grpList = grpList;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V7
        LCALL   ?Subroutine51 & 0xFFFF
// 2163 
// 2164           pCBs->pfnGroupRsp( &rsp );
// 2165         }
??CrossCallReturnLabel_95:
        LCALL   ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_288:
        LCALL   ?CALL_IND
// 2166 
// 2167         if ( grpList != NULL )
??zclGeneral_ProcessInGroupsClient_11:
        MOV     A,?V6
        ORL     A,?V7
        JZ      ??zclGeneral_ProcessInGroupsClient_6
// 2168         {
// 2169           zcl_mem_free( grpList );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V6
        MOV     R3,?V7
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        SJMP    ??zclGeneral_ProcessInGroupsClient_6
// 2170         }
// 2171       }
// 2172       break;
// 2173 
// 2174     default:
// 2175       stat = ZFailure;
??zclGeneral_ProcessInGroupsClient_3:
        MOV     ?V11,#0x1
// 2176       break;
// 2177   }
// 2178 
// 2179   return ( stat );
??zclGeneral_ProcessInGroupsClient_6:
        MOV     R1,?V11
        MOV     A,#0x1c
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock277
// 2180 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond278 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond279) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond279) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond279) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond279) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond279) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+-2
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker280 Using cfiCommon1
          CFI (cfiPicker280) NoFunction
          CFI (cfiPicker280) Picker
        MOVX    @DPTR,A
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     DPL,?V0
        MOV     DPH,?V1
        RET
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiPicker280

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond281 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-2
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker283 Using cfiCommon1
          CFI (cfiPicker283) NoFunction
          CFI (cfiPicker283) Picker
        MOV     DPL,?V4
        MOV     DPH,?V5
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_111:
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiPicker283

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond284 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-2
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-2
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-2
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker288 Using cfiCommon1
          CFI (cfiPicker288) NoFunction
          CFI (cfiPicker288) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiPicker288
        REQUIRE ??Subroutine86_0
        ; // Fall through to label ??Subroutine86_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine86_0:
          CFI Block cfiCond289 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_201
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond290) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-2
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-2
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond292) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond292) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond292) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond292) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond292) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-2
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond293) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond293) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond293) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond293) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond293) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond293) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond293) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond293) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-2
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond294) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond294) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond294) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond294) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond294) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond294) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond294) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-2
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker295 Using cfiCommon1
          CFI (cfiPicker295) NoFunction
          CFI (cfiPicker295) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiPicker295
        REQUIRE ??Subroutine87_0
        ; // Fall through to label ??Subroutine87_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine87_0:
          CFI Block cfiCond296 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_186
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-2
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond298) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond298) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond298) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond298) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond298) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-2
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-2
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond300) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond300) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-2
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-2
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond302) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond302) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond302) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-2
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond303) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond303) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond303) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond303) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-2
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond304) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond304) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond304) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond304) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond304) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond304) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond304) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+-2
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_195
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond305) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond305) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond305) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond305) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond305) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-2
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond306) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-2
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-2
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond308) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond308) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond308) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond308) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond308) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond308) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond308) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond308) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-2
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond309) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond309) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond309) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond309) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond309) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond309) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond309) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond309) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-2
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond310) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond310) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond310) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond310) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond310) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-2
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond311) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond311) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond311) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+-2
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-2
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond313) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-2
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond314) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond314) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond314) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-2
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-2
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond316) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond316) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond316) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond316) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond316) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond316) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+-2
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker317 Using cfiCommon1
          CFI (cfiPicker317) NoFunction
          CFI (cfiPicker317) Picker
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_208:
        ORL     A,R1
        RET
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiPicker317
// 2181 #endif // ZCL_GROUPS
// 2182 
// 2183 #if defined( ZCL_SCENES )
// 2184 #if !defined ( ZCL_STANDALONE )
// 2185 /*********************************************************************
// 2186  * @fn      zclGeneral_AddScene
// 2187  *
// 2188  * @brief   Add a scene for an endpoint
// 2189  *
// 2190  * @param   endpoint -
// 2191  * @param   scene - new scene item
// 2192  *
// 2193  * @return  ZStatus_t
// 2194  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2195 ZStatus_t zclGeneral_AddScene( uint8 endpoint, zclGeneral_Scene_t *scene )
zclGeneral_AddScene:
          CFI Block cfiBlock318 Using cfiCommon0
          CFI Function zclGeneral_AddScene
        CODE
// 2196 {
        FUNCALL zclGeneral_AddScene, addSceneSelector_setSceneID
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2197 //###################################################################
// 2198 //###################################################################
// 2199 #if defined(SCENE_SELECTOR) || defined(SCENE_SELECTOR_TOUCHKEY)
// 2200 	addSceneSelector_setSceneID(endpoint, scene);
        ; Setup parameters for call to function addSceneSelector_setSceneID
        LCALL   ??addSceneSelector_setSceneID?relay; Banked call to: addSceneSelector_setSceneID
// 2201 	return SUCCESS;
        SJMP    ?Subroutine5
          CFI EndBlock cfiBlock318
// 2202 
// 2203 #else
// 2204 	zclGenSceneItem_t *pNewItem;
// 2205 	zclGenSceneItem_t *pLoop;
// 2206 
// 2207 	// Fill in the new profile list
// 2208 	pNewItem = zcl_mem_alloc( sizeof( zclGenSceneItem_t ) );
// 2209 	if ( pNewItem == NULL )
// 2210 	return ( ZMemError );
// 2211 
// 2212 	// Fill in the plugin record.
// 2213 	pNewItem->next = (zclGenSceneItem_t *)NULL;
// 2214 	pNewItem->endpoint = endpoint;
// 2215 	zcl_memcpy( (uint8*)&(pNewItem->scene), (uint8*)scene, sizeof ( zclGeneral_Scene_t ));
// 2216 
// 2217 	// Find spot in list
// 2218 	if (  zclGenSceneTable == NULL )
// 2219 	{
// 2220 	zclGenSceneTable = pNewItem;
// 2221 	}
// 2222 	else
// 2223 	{
// 2224 	// Look for end of list
// 2225 	pLoop = zclGenSceneTable;
// 2226 	while ( pLoop->next != NULL )
// 2227 	pLoop = pLoop->next;
// 2228 
// 2229 	// Put new item at end of list
// 2230 	pLoop->next = pNewItem;
// 2231 	}
// 2232 
// 2233 	// Update NV
// 2234 	zclGeneral_ScenesWriteNV();
// 2235 
// 2236 	return ( ZSuccess );
// 2237 
// 2238 #endif
// 2239 //###################################################################
// 2240 //###################################################################
// 2241 }
// 2242 #endif // ZCL_STANDALONE
// 2243 
// 2244 #if !defined ( ZCL_STANDALONE )
// 2245 /*********************************************************************
// 2246  * @fn      zclGeneral_FindScene
// 2247  *
// 2248  * @brief   Find a scene with endpoint and sceneID
// 2249  *
// 2250  * @param   endpoint -
// 2251  * @param   groupID - what group the scene belongs to
// 2252  * @param   sceneID - ID to look for scene
// 2253  *
// 2254  * @return  a pointer to the scene information, NULL if not found
// 2255  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2256 zclGeneral_Scene_t *zclGeneral_FindScene( uint8 endpoint, uint16 groupID, uint8 sceneID )
zclGeneral_FindScene:
          CFI Block cfiBlock319 Using cfiCommon0
          CFI Function zclGeneral_FindScene
        CODE
// 2257 {
        REQUIRE ?V0
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R5,A
// 2258   zclGenSceneItem_t *pLoop;
// 2259 
// 2260   // Look for end of list
// 2261   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_FindScene_0
// 2262   while ( pLoop )
// 2263   {
// 2264     if ( (pLoop->endpoint == endpoint || endpoint == 0xFF)
// 2265         && pLoop->scene.groupID == groupID && pLoop->scene.ID == sceneID )
// 2266     {
// 2267       return ( &(pLoop->scene) );
// 2268     }
// 2269     pLoop = pLoop->next;
??zclGeneral_FindScene_1:
        MOV     DPL,R6
        MOV     DPH,R7
??zclGeneral_FindScene_0:
        LCALL   ??Subroutine96_0 & 0xFFFF
??CrossCallReturnLabel_253:
        MOV     A,R6
        ORL     A,R7
        JZ      ??zclGeneral_FindScene_2
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
        JZ      ??zclGeneral_FindScene_3
        MOV     A,#-0x1
        XRL     A,R5
        JNZ     ??zclGeneral_FindScene_1
??zclGeneral_FindScene_3:
        MOV     A,R6
        ADD     A,#0x3
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??zclGeneral_FindScene_4
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??zclGeneral_FindScene_4:
        JNZ     ??zclGeneral_FindScene_1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R4
        JNZ     ??zclGeneral_FindScene_1
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        SJMP    ??zclGeneral_FindScene_5
// 2270   }
// 2271 
// 2272   return ( (zclGeneral_Scene_t *)NULL );
??zclGeneral_FindScene_2:
        MOV     R2,#0x0
        MOV     R3,#0x0
??zclGeneral_FindScene_5:
        SJMP    ??Subroutine88_0
          CFI EndBlock cfiBlock319
// 2273 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock320 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R1,#0x0
          CFI EndBlock cfiBlock320
        REQUIRE ??Subroutine88_0
        ; // Fall through to label ??Subroutine88_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine88_0:
          CFI Block cfiBlock321 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock321
// 2274 #endif // ZCL_STANDALONE
// 2275 
// 2276 #if !defined ( ZCL_STANDALONE )
// 2277 /*********************************************************************
// 2278  * @fn      zclGeneral_FindAllScenesForGroup
// 2279  *
// 2280  * @brief   Find all the scenes with groupID
// 2281  *
// 2282  * @param   endpoint - endpoint to look for
// 2283  * @param   sceneList - List to hold scene IDs (should hold APS_MAX_SCENES entries)
// 2284  *
// 2285  * @return  number of scenes copied to sceneList
// 2286  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2287 uint8 zclGeneral_FindAllScenesForGroup( uint8 endpoint, uint16 groupID, uint8 *sceneList )
zclGeneral_FindAllScenesForGroup:
          CFI Block cfiBlock322 Using cfiCommon0
          CFI Function zclGeneral_FindAllScenesForGroup
        CODE
// 2288 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V1,R1
// 2289   zclGenSceneItem_t *pLoop;
// 2290   uint8 cnt = 0;
        MOV     ?V0,#0x0
// 2291 
// 2292   // Look for end of list
// 2293   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_FindAllScenesForGroup_0
// 2294   while ( pLoop )
// 2295   {
// 2296     if ( pLoop->endpoint == endpoint && pLoop->scene.groupID == groupID )
??zclGeneral_FindAllScenesForGroup_1:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
        JNZ     ??zclGeneral_FindAllScenesForGroup_2
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??zclGeneral_FindAllScenesForGroup_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??zclGeneral_FindAllScenesForGroup_3:
        JNZ     ??zclGeneral_FindAllScenesForGroup_2
// 2297       sceneList[cnt++] = pLoop->scene.ID;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     R6,?V0
        MOV     A,R4
        ADD     A,R6
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        INC     ?V0
// 2298     pLoop = pLoop->next;
??zclGeneral_FindAllScenesForGroup_2:
        MOV     DPL,R0
        MOV     DPH,R1
// 2299   }
??zclGeneral_FindAllScenesForGroup_0:
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_187:
        JNZ     ??zclGeneral_FindAllScenesForGroup_1
          CFI EndBlock cfiBlock322
// 2300   return ( cnt );
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
// 2301 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock323 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R1,?V0
        LJMP    ??Subroutine102_0 & 0xFFFF
          CFI EndBlock cfiBlock323
// 2302 #endif // ZCL_STANDALONE
// 2303 
// 2304 #if !defined ( ZCL_STANDALONE )
// 2305 /*********************************************************************
// 2306  * @fn      zclGeneral_RemoveScene
// 2307  *
// 2308  * @brief   Remove a scene with endpoint and sceneID
// 2309  *
// 2310  * @param   endpoint -
// 2311  * @param   groupID - what group the scene belongs to
// 2312  * @param   sceneID - ID to look for scene
// 2313  *
// 2314  * @return  TRUE if removed, FALSE if not found
// 2315  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2316 uint8 zclGeneral_RemoveScene( uint8 endpoint, uint16 groupID, uint8 sceneID )
zclGeneral_RemoveScene:
          CFI Block cfiBlock324 Using cfiCommon0
          CFI Function zclGeneral_RemoveScene
        CODE
// 2317 {
        FUNCALL zclGeneral_RemoveScene, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RemoveScene, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
// 2318   zclGenSceneItem_t *pLoop;
// 2319   zclGenSceneItem_t *pPrev;
// 2320 
// 2321   // Look for end of list
// 2322   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        LCALL   ??Subroutine95_0 & 0xFFFF
// 2323   pPrev = NULL;
??CrossCallReturnLabel_240:
        MOV     R4,#0x0
        MOV     R5,#0x0
        SJMP    ??CrossCallReturnLabel_241
// 2324   while ( pLoop )
// 2325   {
// 2326     if ( pLoop->endpoint == endpoint
// 2327         && pLoop->scene.groupID == groupID && pLoop->scene.ID == sceneID )
// 2328     {
// 2329       if ( pPrev == NULL )
// 2330         zclGenSceneTable = pLoop->next;
// 2331       else
// 2332         pPrev->next = pLoop->next;
// 2333 
// 2334       // Free the memory
// 2335       zcl_mem_free( pLoop );
// 2336 
// 2337       // Update NV
// 2338       zclGeneral_ScenesWriteNV();
// 2339 
// 2340       return ( TRUE );
// 2341     }
// 2342     pPrev = pLoop;
??zclGeneral_RemoveScene_0:
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
// 2343     pLoop = pLoop->next;
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine95_0 & 0xFFFF
??CrossCallReturnLabel_241:
        MOV     A,R0
        ORL     A,R1
        JZ      ??zclGeneral_RemoveScene_1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??zclGeneral_RemoveScene_0
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??zclGeneral_RemoveScene_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??zclGeneral_RemoveScene_2:
        JNZ     ??zclGeneral_RemoveScene_0
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
        JNZ     ??zclGeneral_RemoveScene_0
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_71:
        MOV     A,R4
        ORL     A,R5
        JNZ     ??zclGeneral_RemoveScene_3
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_RemoveScene_4
??zclGeneral_RemoveScene_3:
        MOV     DPL,R4
        MOV     DPH,R5
??zclGeneral_RemoveScene_4:
        LCALL   ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_216:
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay; Banked call to: zclGeneral_ScenesWriteNV
        MOV     R1,#0x1
        SJMP    ??zclGeneral_RemoveScene_5
// 2344   }
// 2345 
// 2346   return ( FALSE );
??zclGeneral_RemoveScene_1:
        MOV     R1,#0x0
??zclGeneral_RemoveScene_5:
        LJMP    ??Subroutine88_0 & 0xFFFF
          CFI EndBlock cfiBlock324
// 2347 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond325 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_218
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond326) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond326) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond326) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond326) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond326) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-2
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker327 Using cfiCommon1
          CFI (cfiPicker327) NoFunction
          CFI (cfiPicker327) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiPicker327
        REQUIRE ??Subroutine89_0
        ; // Fall through to label ??Subroutine89_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine89_0:
          CFI Block cfiCond328 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_213
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond329) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond329) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond329) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond329) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond329) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond329) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond329) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond329) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond329) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond329) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond329) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond329) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond329) CFA_SP SP+-2
          CFI (cfiCond329) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond330) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond330) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond330) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond330) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond330) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond330) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond330) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond330) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond330) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-2
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function zclGeneral_RemoveScene
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-2
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-2
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-2
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond334) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-2
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker335 Using cfiCommon1
          CFI (cfiPicker335) NoFunction
          CFI (cfiPicker335) Picker
        MOV     A,R2
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiPicker335
        REQUIRE ??Subroutine90_0
        ; // Fall through to label ??Subroutine90_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine90_0:
          CFI Block cfiCond336 Using cfiCommon0
          CFI Function zclGeneral_SendSceneGetMembershipResponse
          CFI Conditional ??CrossCallReturnLabel_211
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-2
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-2
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond340) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond340) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond340) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond340) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond340) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond340) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond340) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+-2
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function zclGeneral_RemoveScene
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-2
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-2
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond343) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond343) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond343) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond343) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond343) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond343) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-2
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond344) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond344) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond344) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond344) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-2
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker345 Using cfiCommon1
          CFI (cfiPicker345) NoFunction
          CFI (cfiPicker345) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiPicker345
// 2348 #endif // ZCL_STANDALONE
// 2349 
// 2350 #if !defined ( ZCL_STANDALONE )
// 2351 /*********************************************************************
// 2352  * @fn      zclGeneral_RemoveAllScenes
// 2353  *
// 2354  * @brief   Remove all scenes with endpoint and group Id
// 2355  *
// 2356  * @param   endpoint -
// 2357  * @param   groupID - ID to look for group
// 2358  *
// 2359  * @return  none
// 2360  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2361 void zclGeneral_RemoveAllScenes( uint8 endpoint, uint16 groupID )
zclGeneral_RemoveAllScenes:
          CFI Block cfiBlock346 Using cfiCommon0
          CFI Function zclGeneral_RemoveAllScenes
        CODE
// 2362 {
        FUNCALL zclGeneral_RemoveAllScenes, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RemoveAllScenes, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 0
        MOV     ?V4,R1
        MOV     ?V0,R2
        MOV     ?V1,R3
// 2363   zclGenSceneItem_t *pLoop;
// 2364   zclGenSceneItem_t *pPrev;
// 2365   zclGenSceneItem_t *pNext;
// 2366 
// 2367   // Look for end of list
// 2368   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        LCALL   ?Subroutine39 & 0xFFFF
// 2369   pPrev = NULL;
??CrossCallReturnLabel_72:
        MOV     R6,#0x0
        MOV     R7,#0x0
        SJMP    ??zclGeneral_RemoveAllScenes_0
// 2370   while ( pLoop )
// 2371   {
// 2372     if ( pLoop->endpoint == endpoint && pLoop->scene.groupID == groupID )
// 2373     {
// 2374       if ( pPrev == NULL )
// 2375         zclGenSceneTable = pLoop->next;
// 2376       else
// 2377         pPrev->next = pLoop->next;
??zclGeneral_RemoveAllScenes_1:
        MOV     DPL,R6
        MOV     DPH,R7
??zclGeneral_RemoveAllScenes_2:
        LCALL   ?Subroutine55 & 0xFFFF
// 2378       pNext = pLoop->next;
??CrossCallReturnLabel_99:
        LCALL   ?Subroutine36 & 0xFFFF
// 2379 
// 2380       // Free the memory
// 2381       zcl_mem_free( pLoop );
??CrossCallReturnLabel_58:
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
// 2382       pLoop = pNext;
        MOV     R2,?V2
        MOV     R3,?V3
??zclGeneral_RemoveAllScenes_0:
        MOV     A,R2
        ORL     A,R3
        JZ      ??zclGeneral_RemoveAllScenes_3
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V4
        JNZ     ??zclGeneral_RemoveAllScenes_4
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??zclGeneral_RemoveAllScenes_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??zclGeneral_RemoveAllScenes_5:
        JNZ     ??zclGeneral_RemoveAllScenes_4
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine95_0 & 0xFFFF
??CrossCallReturnLabel_242:
        MOV     A,R6
        ORL     A,R7
        JNZ     ??zclGeneral_RemoveAllScenes_1
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_RemoveAllScenes_2
// 2383     }
// 2384     else
// 2385     {
// 2386       pPrev = pLoop;
??zclGeneral_RemoveAllScenes_4:
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2387       pLoop = pLoop->next;
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine39 & 0xFFFF
// 2388     }
// 2389   }
??CrossCallReturnLabel_73:
        SJMP    ??zclGeneral_RemoveAllScenes_0
// 2390 
// 2391   // Update NV
// 2392   zclGeneral_ScenesWriteNV();
??zclGeneral_RemoveAllScenes_3:
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay; Banked call to: zclGeneral_ScenesWriteNV
// 2393 }
        MOV     R7,#0x5
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock346

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond347 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+-2
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker349 Using cfiCommon1
          CFI (cfiPicker349) NoFunction
          CFI (cfiPicker349) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiPicker349

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond350 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-2
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+-2
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker353 Using cfiCommon1
          CFI (cfiPicker353) NoFunction
          CFI (cfiPicker353) Picker
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
        RET
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiPicker353
// 2394 #endif // ZCL_STANDALONE
// 2395 
// 2396 #if !defined ( ZCL_STANDALONE )
// 2397 /*********************************************************************
// 2398  * @fn      zclGeneral_CountScenes
// 2399  *
// 2400  * @brief   Count the number of scenes for an endpoint
// 2401  *
// 2402  * @param   endpoint -
// 2403  *
// 2404  * @return  number of scenes assigned to an endpoint
// 2405  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2406 uint8 zclGeneral_CountScenes( uint8 endpoint )
zclGeneral_CountScenes:
          CFI Block cfiBlock354 Using cfiCommon0
          CFI Function zclGeneral_CountScenes
        CODE
// 2407 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
        MOV     A,R1
        MOV     R0,A
// 2408   zclGenSceneItem_t *pLoop;
// 2409   uint8 cnt = 0;
        MOV     R1,#0x0
// 2410 
// 2411   // Look for end of list
// 2412   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_CountScenes_0
// 2413   while ( pLoop )
// 2414   {
// 2415     if ( pLoop->endpoint == endpoint  )
??zclGeneral_CountScenes_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??zclGeneral_CountScenes_2
// 2416       cnt++;
        INC     R1
// 2417     pLoop = pLoop->next;
??zclGeneral_CountScenes_2:
        MOV     DPL,R2
        MOV     DPH,R3
// 2418   }
??zclGeneral_CountScenes_0:
        LCALL   ??Subroutine92_0 & 0xFFFF
??CrossCallReturnLabel_221:
        JNZ     ??zclGeneral_CountScenes_1
// 2419   return ( cnt );
        SJMP    ?Subroutine4
          CFI EndBlock cfiBlock354
// 2420 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond355 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_223
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-2
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-2
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker358 Using cfiCommon1
          CFI (cfiPicker358) NoFunction
          CFI (cfiPicker358) Picker
        MOV     R2,A
        CLR     A
        ADDC    A,R5
        MOV     R3,A
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiPicker358
        REQUIRE ??Subroutine91_0
        ; // Fall through to label ??Subroutine91_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine91_0:
          CFI Block cfiCond359 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_220
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-2
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-2
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-2
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker363 Using cfiCommon1
          CFI (cfiPicker363) NoFunction
          CFI (cfiPicker363) Picker
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiPicker363
        REQUIRE ??Subroutine92_0
        ; // Fall through to label ??Subroutine92_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine92_0:
          CFI Block cfiCond364 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_222
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function zclGeneral_CountScenes
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond365) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond365) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond365) CFA_SP SP+-7
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-2
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-2
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-2
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-2
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker370 Using cfiCommon1
          CFI (cfiPicker370) NoFunction
          CFI (cfiPicker370) Picker
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_230:
        MOV     A,R2
        ORL     A,R3
        RET
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiPicker370
// 2421 #endif
// 2422 
// 2423 #if !defined ( ZCL_STANDALONE )
// 2424 /*********************************************************************
// 2425  * @fn      zclGeneral_CountAllScenes
// 2426  *
// 2427  * @brief   Count the total number of scenes
// 2428  *
// 2429  * @param   none
// 2430  *
// 2431  * @return  number of scenes
// 2432  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2433 uint8 zclGeneral_CountAllScenes( void )
zclGeneral_CountAllScenes:
          CFI Block cfiBlock371 Using cfiCommon0
          CFI Function zclGeneral_CountAllScenes
        CODE
// 2434 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2435   zclGenSceneItem_t *pLoop;
// 2436   uint8 cnt = 0;
        MOV     R1,#0x0
// 2437 
// 2438   // Look for end of list
// 2439   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_CountAllScenes_0
// 2440   while ( pLoop )
// 2441   {
// 2442     cnt++;
??zclGeneral_CountAllScenes_1:
        INC     R1
// 2443     pLoop = pLoop->next;
// 2444   }
??zclGeneral_CountAllScenes_0:
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_74:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,DPL
        ORL     A,DPH
        JNZ     ??zclGeneral_CountAllScenes_1
          CFI EndBlock cfiBlock371
// 2445   return ( cnt );
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
// 2446 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock372 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock372
// 2447 #endif // ZCL_STANDALONE
// 2448 
// 2449 /*********************************************************************
// 2450  * @fn      zclGeneral_ReadSceneCountCB
// 2451  *
// 2452  * @brief   Read the number of scenes currently in the device's
// 2453  *          scene table (i.e., the Scene Count attribute).
// 2454  *
// 2455  *          Note: This function gets called only when the pointer
// 2456  *                'dataPtr' to the Scene Count attribute value is
// 2457  *                NULL in the attribute database registered with
// 2458  *                the ZCL.
// 2459  *
// 2460  * @param   clusterId - cluster that attribute belongs to
// 2461  * @param   attrId - attribute to be read or written
// 2462  * @param   oper - ZCL_OPER_LEN, ZCL_OPER_READ, or ZCL_OPER_WRITE
// 2463  * @param   pValue - pointer to attribute value
// 2464  * @param   pLen - pointer to length of attribute value read
// 2465  *
// 2466  * @return  status
// 2467  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2468 ZStatus_t zclGeneral_ReadSceneCountCB( uint16 clusterId, uint16 attrId,
zclGeneral_ReadSceneCountCB:
          CFI Block cfiBlock373 Using cfiCommon0
          CFI Function zclGeneral_ReadSceneCountCB
        CODE
// 2469                                        uint8 oper, uint8 *pValue, uint16 *pLen )
// 2470 {
        FUNCALL zclGeneral_ReadSceneCountCB, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V1,R1
// 2471   ZStatus_t status = ZCL_STATUS_SUCCESS;
        MOV     ?V0,#0x0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine84_0 & 0xFFFF
// 2472 
// 2473   // This callback function should only be called for the Scene Count attribute
// 2474   switch ( oper )
??CrossCallReturnLabel_174:
        MOV     A,?V1
        JZ      ??zclGeneral_ReadSceneCountCB_0
        DEC     A
        JNZ     ??zclGeneral_ReadSceneCountCB_1
// 2475   {
// 2476     case ZCL_OPER_LEN:
// 2477       *pLen = 1; // uint8
// 2478       break;
// 2479 
// 2480     case ZCL_OPER_READ:
// 2481       *pValue = zclGeneral_CountAllScenes();
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL   ??zclGeneral_CountAllScenes?relay; Banked call to: zclGeneral_CountAllScenes
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_289:
        MOV     A,R1
        MOVX    @DPTR,A
// 2482 
// 2483       if ( pLen != NULL )
        MOV     A,R6
        ORL     A,R7
        JZ      ??zclGeneral_ReadSceneCountCB_2
// 2484       {
// 2485         *pLen = 1;
??zclGeneral_ReadSceneCountCB_0:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x1
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        SJMP    ??zclGeneral_ReadSceneCountCB_2
// 2486       }
// 2487       break;
// 2488 
// 2489     case ZCL_OPER_WRITE:
// 2490       // Fall through
// 2491 
// 2492     default:
// 2493       status = ZCL_STATUS_SOFTWARE_FAILURE; // should never get here!
??zclGeneral_ReadSceneCountCB_1:
        MOV     ?V0,#-0x3f
// 2494       break;
// 2495   }
// 2496 
// 2497   return ( status );
??zclGeneral_ReadSceneCountCB_2:
        LJMP    ?Subroutine9 & 0xFFFF
          CFI EndBlock cfiBlock373
// 2498 }
// 2499 
// 2500 /*********************************************************************
// 2501  * @fn      zclGeneral_ProcessInScenesServer
// 2502  *
// 2503  * @brief   Process in the received Scenes Command.
// 2504  *
// 2505  * @param   pInMsg - pointer to the incoming message
// 2506  *
// 2507  * @return  ZStatus_t
// 2508  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2509 static ZStatus_t zclGeneral_ProcessInScenesServer( zclIncoming_t *pInMsg,
zclGeneral_ProcessInScenesServer:
          CFI Block cfiBlock374 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
        CODE
// 2510                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2511 {
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 86, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneViewRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 86, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_RemoveScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_RemoveAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindAllScenesForGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneGetMembershipResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 89, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 89, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 60
        MOV     A,#-0x3c
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     ?V6,R4
        MOV     ?V7,R5
// 2512   zclGeneral_Scene_t scene;
// 2513   zclGeneral_Scene_t *pScene;
// 2514   uint8 *pData = pInMsg->pData;
        MOV     A,R2
        ADD     A,#0x8
        MOV     ?V8,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V9,A
        MOV     DPL,?V8
        MOV     DPH,A
        LCALL   ??Subroutine96_0 & 0xFFFF
// 2515   uint8 nameLen;
// 2516   uint8 status;
// 2517   uint8 sceneCnt = 0;
??CrossCallReturnLabel_254:
        MOV     ?V1,#0x0
// 2518   uint8 *sceneList = NULL;
        MOV     ?V4,#0x0
        MOV     ?V5,#0x0
// 2519   uint8 sendRsp = TRUE;
// 2520   uint8 nameSupport = FALSE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 2521   ZStatus_t stat = ZSuccess;
        MOV     ?V0,#0x0
// 2522 
// 2523   zcl_memset( (uint8*)&scene, 0, sizeof( zclGeneral_Scene_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x37
        MOV     R5,A
        MOV     R1,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??osal_memset?relay  ; Banked call to: osal_memset
// 2524 
// 2525   scene.groupID = BUILD_UINT16( pData[0], pData[1] );
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_236:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 2526   pData += 2;   // Move past group ID
??CrossCallReturnLabel_85:
        JNC     ??zclGeneral_ProcessInScenesServer_0
        INC     R7
// 2527   scene.ID = *pData++;
??zclGeneral_ProcessInScenesServer_0:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        LCALL   ?Subroutine49 & 0xFFFF
// 2528 
// 2529   switch ( pInMsg->hdr.commandID )
??CrossCallReturnLabel_89:
        MOV     A,?V2
        ADD     A,#0x6
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_125:
        MOV     DPL,?V10
        MOV     DPH,A
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInScenesServer_1
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_2 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_3 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_4 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_5 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_6 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_7 & 0xFFFF
        LJMP    ??zclGeneral_ProcessInScenesServer_8 & 0xFFFF
// 2530   {
// 2531     case COMMAND_SCENE_ADD:
// 2532 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2533     case COMMAND_SCENE_ENHANCED_ADD:
// 2534 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2535       // Parse the rest of the incoming message
// 2536       scene.transTime = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInScenesServer_1:
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_237:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 2537       pData += 2;
??CrossCallReturnLabel_86:
        JNC     ??zclGeneral_ProcessInScenesServer_9
        INC     R7
// 2538 
// 2539       if ( pInMsg->hdr.commandID == COMMAND_SCENE_ENHANCED_ADD )
??zclGeneral_ProcessInScenesServer_9:
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        XRL     A,#0x40
        JNZ     ??CrossCallReturnLabel_184
// 2540       {
// 2541         // Received transition time is in 1/10 second
// 2542         scene.transTime100ms = scene.transTime % 10;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine89_0 & 0xFFFF
// 2543         scene.transTime /= 10;
??CrossCallReturnLabel_217:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine95_0 & 0xFFFF
// 2544       }
??CrossCallReturnLabel_243:
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine56 & 0xFFFF
// 2545 
// 2546       nameLen= *pData++; // Name length
??CrossCallReturnLabel_184:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 2547 
// 2548       // Retrieve Name Support attribute
// 2549       zcl_ReadAttrData( pInMsg->msg->endPoint, ZCL_CLUSTER_ID_GEN_SCENES,
// 2550                         ATTRID_SCENES_NAME_SUPPORT, &nameSupport, NULL );
        ; Setup parameters for call to function zcl_ReadAttrData
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 84)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 86)
        MOV     R4,#0x4
        MOV     R5,#0x0
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   ??Subroutine97_0 & 0xFFFF
??CrossCallReturnLabel_269:
        LCALL   ??zcl_ReadAttrData?relay; Banked call to: zcl_ReadAttrData
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2551 
// 2552       if ( nameSupport )
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInScenesServer_10
// 2553       {
// 2554         if ( nameLen > (ZCL_GEN_SCENE_NAME_LEN-1) )
        MOV     A,?V0
        CLR     C
        SUBB    A,#0x10
        JC      ??zclGeneral_ProcessInScenesServer_11
// 2555           nameLen = (ZCL_GEN_SCENE_NAME_LEN-1);
        MOV     ?V0,#0xf
// 2556         scene.name[0] = nameLen;
??zclGeneral_ProcessInScenesServer_11:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0
        LCALL   ?Subroutine52 & 0xFFFF
// 2557         zcl_memcpy( &(scene.name[1]), pData, nameLen );
// 2558       }
??CrossCallReturnLabel_96:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV     R4,?V0
        MOV     R5,#0x0
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2559 
// 2560       pData += nameLen; // move past name, use original length
??zclGeneral_ProcessInScenesServer_10:
        MOV     R0,?V0
        MOV     A,R6
        ADD     A,R0
        MOV     R6,A
        CLR     A
        ADDC    A,R7
        MOV     R7,A
// 2561 
// 2562       scene.extLen = pInMsg->pDataLen - ( (uint16)( pData - pInMsg->pData ) );
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R6
        MOV     R1,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R1
        ADD     A,R0
        MOV     R0,A
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
// 2563       if ( scene.extLen > 0 )
        JZ      ??zclGeneral_ProcessInScenesServer_12
// 2564       {
// 2565         // Copy the extention field(s)
// 2566         if ( scene.extLen > ZCL_GEN_SCENE_EXT_LEN )
        CLR     C
        SUBB    A,#0x20
        JC      ??zclGeneral_ProcessInScenesServer_13
// 2567         {
// 2568           scene.extLen = ZCL_GEN_SCENE_EXT_LEN;
        MOV     A,#0x1f
        MOVX    @DPTR,A
// 2569         }
// 2570         zcl_memcpy( scene.extField, pData, scene.extLen );
??zclGeneral_ProcessInScenesServer_13:
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,R6
        MOV     ?V5,R7
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV     A,#0x1f
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2571       }
// 2572 
// 2573       if ( scene.groupID == 0x0000 ||
// 2574            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_12:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_192:
        JZ      ??zclGeneral_ProcessInScenesServer_14
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_272:
        LCALL   ??aps_FindGroup?relay; Banked call to: aps_FindGroup
        MOV     ?V1,R3
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_15 & 0xFFFF
// 2575       {
// 2576         // Either the Scene doesn't belong to a Group (Group ID = 0x0000) or it
// 2577         // does and the corresponding Group exits
// 2578         pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_14:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_273:
        LCALL   ??zclGeneral_FindScene?relay; Banked call to: zclGeneral_FindScene
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R6,?V0
        MOV     R7,?V1
// 2579         if ( pScene || ( zclGeneral_CountAllScenes() < ZCL_GEN_MAX_SCENES ) )
        MOV     A,R6
        ORL     A,R7
        JNZ     ??zclGeneral_ProcessInScenesServer_16
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL   ??zclGeneral_CountAllScenes?relay; Banked call to: zclGeneral_CountAllScenes
        MOV     A,R1
        CLR     C
        SUBB    A,#0x10
        JC      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_17 & 0xFFFF
// 2580         {
// 2581           status = ZCL_STATUS_SUCCESS;
??zclGeneral_ProcessInScenesServer_16:
        MOV     ?V0,#0x0
// 2582           if ( pScene != NULL )
        MOV     A,R6
        ORL     A,R7
        JZ      ??zclGeneral_ProcessInScenesServer_18
// 2583           {
// 2584             // The Scene already exists so update it
// 2585             pScene->transTime = scene.transTime;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine95_0 & 0xFFFF
??CrossCallReturnLabel_244:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine56 & 0xFFFF
// 2586             zcl_memcpy( pScene->name, scene.name, ZCL_GEN_SCENE_NAME_LEN );
??CrossCallReturnLabel_185:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV     R4,#0x10
        MOV     R5,#0x0
        MOV     A,R6
        ADD     A,#0x7
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2587 
// 2588             // Use the new extention field(s)
// 2589             zcl_memcpy( pScene->extField, scene.extField, scene.extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV     A,#0x1f
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,R6
        ADD     A,#0x18
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2590             pScene->extLen = scene.extLen;
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0x17
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2591 
// 2592             // Save Scenes
// 2593             zclGeneral_ScenesSave();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay; Banked call to: zclGeneral_ScenesWriteNV
// 2594           }
        SJMP    ??zclGeneral_ProcessInScenesServer_19
// 2595           else
// 2596           {
// 2597             // The Scene doesn't exist so add it
// 2598             zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
??zclGeneral_ProcessInScenesServer_18:
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??Subroutine97_0 & 0xFFFF
// 2599           }
// 2600         }
??CrossCallReturnLabel_270:
        LCALL   ??zclGeneral_AddScene?relay; Banked call to: zclGeneral_AddScene
        SJMP    ??zclGeneral_ProcessInScenesServer_19
// 2601         else
// 2602         {
// 2603           status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
??zclGeneral_ProcessInScenesServer_17:
        MOV     ?V0,#-0x77
        SJMP    ??zclGeneral_ProcessInScenesServer_19
// 2604         }
// 2605       }
// 2606       else
// 2607       {
// 2608         status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
??zclGeneral_ProcessInScenesServer_15:
        MOV     ?V0,#-0x7b
// 2609       }
// 2610 
// 2611       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_19:
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_0:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_203:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2612       {
// 2613         if ( pInMsg->hdr.commandID == COMMAND_SCENE_ADD )
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2614         {
// 2615           zclGeneral_SendSceneAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2616                                           status, scene.groupID, scene.ID,
// 2617                                           true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL   ?Subroutine12 & 0xFFFF
// 2618         }
// 2619 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2620         else // COMMAND_SCENE_ENHANCED_ADD
// 2621         {
// 2622           zclGeneral_SendSceneEnhancedAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2623                                                   status, scene.groupID, scene.ID,
// 2624                                                   true, pInMsg->hdr.transSeqNum );
// 2625         }
// 2626 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2627       }
??CrossCallReturnLabel_164:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_161:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV     R5,?V0
        MOV     R4,#0x0
        LJMP    ??zclGeneral_ProcessInScenesServer_21 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 82)
// 2628       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2629 
// 2630       break;
// 2631 
// 2632     case COMMAND_SCENE_VIEW:
// 2633 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2634     case COMMAND_SCENE_ENHANCED_VIEW:
// 2635 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2636       pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_2:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_274:
        LCALL   ??zclGeneral_FindScene?relay; Banked call to: zclGeneral_FindScene
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R6,?V0
        MOV     R7,?V1
// 2637       if ( pScene != NULL )
        MOV     A,R6
        ORL     A,R7
        JZ      ??zclGeneral_ProcessInScenesServer_22
// 2638       {
// 2639         status = ZCL_STATUS_SUCCESS;
        MOV     ?V0,#0x0
        SJMP    ??zclGeneral_ProcessInScenesServer_23
// 2640       }
// 2641       else
// 2642       {
// 2643         // Scene not found
// 2644         if ( scene.groupID != 0x0000 &&
// 2645              aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) == NULL )
??zclGeneral_ProcessInScenesServer_22:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_193:
        JZ      ??zclGeneral_ProcessInScenesServer_24
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_275:
        LCALL   ??aps_FindGroup?relay; Banked call to: aps_FindGroup
        MOV     ?V1,R3
        MOV     A,R2
        ORL     A,?V1
        JNZ     ??zclGeneral_ProcessInScenesServer_24
// 2646         {
// 2647           status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
        MOV     ?V0,#-0x7b
        SJMP    ??zclGeneral_ProcessInScenesServer_25
// 2648         }
// 2649         else
// 2650         {
// 2651           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInScenesServer_24:
        MOV     ?V0,#-0x75
// 2652         }
// 2653         pScene = &scene;
??zclGeneral_ProcessInScenesServer_25:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R6,?V4
        MOV     R7,?V5
// 2654       }
// 2655 
// 2656       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_23:
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_59:
        MOV     A,?V2
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine86_0 & 0xFFFF
??CrossCallReturnLabel_201:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2657       {
// 2658         if ( pInMsg->hdr.commandID == COMMAND_SCENE_VIEW )
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        XRL     A,#0x1
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2659         {
// 2660           zclGeneral_SendSceneViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2661                                            status, pScene, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneViewRsp
        LCALL   ?Subroutine12 & 0xFFFF
// 2662         }
// 2663 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2664         else
// 2665         {
// 2666           zclGeneral_SendSceneEnhancedViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2667                                                    status, pScene, true, pInMsg->hdr.transSeqNum );
// 2668         }
// 2669 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2670       }
??CrossCallReturnLabel_165:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV     ?V4,R6
        MOV     ?V5,R7
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 86)
        MOV     R5,?V0
        MOV     R4,#0x1
        MOV     A,?V2
        ADD     A,#0x6
        MOV     R2,A
        CLR     A
        ADDC    A,?V3
        MOV     R3,A
        MOV     A,?V2
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??zclGeneral_SendSceneViewRsp?relay; Banked call to: zclGeneral_SendSceneViewRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2671       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2672       break;
// 2673 
// 2674     case COMMAND_SCENE_REMOVE:
// 2675       if ( zclGeneral_RemoveScene( pInMsg->msg->endPoint, scene.groupID, scene.ID ) )
??zclGeneral_ProcessInScenesServer_3:
        ; Setup parameters for call to function zclGeneral_RemoveScene
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_276:
        LCALL   ??zclGeneral_RemoveScene?relay; Banked call to: zclGeneral_RemoveScene
        MOV     A,R1
        JZ      ??zclGeneral_ProcessInScenesServer_26
// 2676       {
// 2677         status = ZCL_STATUS_SUCCESS;
        MOV     ?V0,#0x0
        SJMP    ??zclGeneral_ProcessInScenesServer_27
// 2678       }
// 2679       else
// 2680       {
// 2681         // Scene not found
// 2682         if ( aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) == NULL )
??zclGeneral_ProcessInScenesServer_26:
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_277:
        LCALL   ??aps_FindGroup?relay; Banked call to: aps_FindGroup
        MOV     ?V1,R3
        MOV     A,R2
        ORL     A,?V1
        JNZ     ??zclGeneral_ProcessInScenesServer_28
// 2683         {
// 2684           // The Group is not in the Group Table
// 2685           status = ZCL_STATUS_INVALID_FIELD;
        MOV     ?V0,#-0x7b
        SJMP    ??zclGeneral_ProcessInScenesServer_27
// 2686         }
// 2687         else
// 2688         {
// 2689           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInScenesServer_28:
        MOV     ?V0,#-0x75
// 2690         }
// 2691       }
// 2692 
// 2693       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_27:
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_1:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_204:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2694       {
// 2695         // Addressed to this device (not to a group) - send a response back
// 2696         zclGeneral_SendSceneRemoveResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2697                                             status, scene.groupID,
// 2698                                             scene.ID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL   ?Subroutine12 & 0xFFFF
// 2699       }
??CrossCallReturnLabel_166:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV     R5,?V0
        MOV     R4,#0x2
        LJMP    ??zclGeneral_ProcessInScenesServer_21 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 82)
// 2700       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2701       break;
// 2702 
// 2703     case COMMAND_SCENE_REMOVE_ALL:
// 2704       if ( scene.groupID == 0x0000 ||
// 2705            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_4:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_194:
        JZ      ??zclGeneral_ProcessInScenesServer_29
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_278:
        LCALL   ??aps_FindGroup?relay; Banked call to: aps_FindGroup
        MOV     ?V1,R3
        MOV     A,R2
        ORL     A,?V1
        JZ      ??zclGeneral_ProcessInScenesServer_30
// 2706       {
// 2707         zclGeneral_RemoveAllScenes( pInMsg->msg->endPoint, scene.groupID );
??zclGeneral_ProcessInScenesServer_29:
        ; Setup parameters for call to function zclGeneral_RemoveAllScenes
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_279:
        LCALL   ??zclGeneral_RemoveAllScenes?relay; Banked call to: zclGeneral_RemoveAllScenes
// 2708         status = ZCL_STATUS_SUCCESS;
        MOV     ?V0,#0x0
        SJMP    ??zclGeneral_ProcessInScenesServer_31
// 2709       }
// 2710       else
// 2711       {
// 2712         status = ZCL_STATUS_INVALID_FIELD;
??zclGeneral_ProcessInScenesServer_30:
        MOV     ?V0,#-0x7b
// 2713       }
// 2714 
// 2715       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_31:
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_2:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_205:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2716       {
// 2717         // Addressed to this device (not to a group) - send a response back
// 2718         zclGeneral_SendSceneRemoveAllResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2719                                                status, scene.groupID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL   ?Subroutine12 & 0xFFFF
// 2720       }
??CrossCallReturnLabel_167:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV     ?V1,#0x0
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV     R5,?V0
        MOV     R4,#0x3
        LJMP    ??zclGeneral_ProcessInScenesServer_21 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 82)
// 2721       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2722       break;
// 2723 
// 2724     case COMMAND_SCENE_STORE:
// 2725       if ( scene.groupID == 0x0000 ||
// 2726            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_5:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_195:
        JZ      ??zclGeneral_ProcessInScenesServer_32
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_280:
        LCALL   ??aps_FindGroup?relay; Banked call to: aps_FindGroup
        MOV     ?V1,R3
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_33 & 0xFFFF
// 2727       {
// 2728         // Either the Scene doesn't belong to a Group (Group ID = 0x0000) or it
// 2729         // does and the corresponding Group exits
// 2730         pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_32:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_281:
        LCALL   ??zclGeneral_FindScene?relay; Banked call to: zclGeneral_FindScene
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R6,?V0
        MOV     R7,?V1
// 2731         if ( pScene || ( zclGeneral_CountAllScenes() < ZCL_GEN_MAX_SCENES ) )
        MOV     A,R6
        ORL     A,R7
        JNZ     ??zclGeneral_ProcessInScenesServer_34
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL   ??zclGeneral_CountAllScenes?relay; Banked call to: zclGeneral_CountAllScenes
        MOV     A,R1
        CLR     C
        SUBB    A,#0x10
        JNC     ??zclGeneral_ProcessInScenesServer_35
// 2732         {
// 2733           uint8 sceneChanged = FALSE;
??zclGeneral_ProcessInScenesServer_34:
        MOV     ?V1,#0x0
// 2734 
// 2735           status = ZCL_STATUS_SUCCESS;
        MOV     ?V0,#0x0
// 2736           if ( pScene == NULL )
        MOV     A,R6
        ORL     A,R7
        JNZ     ??zclGeneral_ProcessInScenesServer_36
// 2737           {
// 2738             // Haven't been added yet
// 2739             pScene = &scene;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R6,?V4
        MOV     R7,?V5
// 2740           }
// 2741 
// 2742           if ( pCBs->pfnSceneStoreReq )
??zclGeneral_ProcessInScenesServer_36:
        MOV     A,?V6
        ADD     A,#0x1a
        MOV     DPL,A
        CLR     A
        ADDC    A,?V7
        MOV     DPH,A
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_196:
        JZ      ??zclGeneral_ProcessInScenesServer_37
// 2743           {
// 2744             zclSceneReq_t req;
// 2745 
// 2746             req.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_60:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine53 & 0xFFFF
// 2747             req.scene = pScene;
??CrossCallReturnLabel_231:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
// 2748 
// 2749             // Get the latest Scene info
// 2750             if ( pCBs->pfnSceneStoreReq( &req ) )
        ; Setup parameters for indirect call
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP101_8
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?CALL_IND
        MOV     A,R1
        JZ      ??zclGeneral_ProcessInScenesServer_37
// 2751             {
// 2752               sceneChanged = TRUE;
        MOV     ?V1,#0x1
// 2753             }
// 2754           }
// 2755 
// 2756           if ( pScene == &scene )
??zclGeneral_ProcessInScenesServer_37:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     A,R6
        XRL     A,?V4
        JNZ     ??zclGeneral_ProcessInScenesServer_38
        MOV     A,R7
        XRL     A,?V5
??zclGeneral_ProcessInScenesServer_38:
        JNZ     ??zclGeneral_ProcessInScenesServer_39
// 2757           {
// 2758             // The Scene doesn't exist so add it
// 2759             zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??Subroutine97_0 & 0xFFFF
// 2760           }
??CrossCallReturnLabel_271:
        LCALL   ??zclGeneral_AddScene?relay; Banked call to: zclGeneral_AddScene
        SJMP    ??zclGeneral_ProcessInScenesServer_40
// 2761           else if ( sceneChanged )
??zclGeneral_ProcessInScenesServer_39:
        MOV     A,?V1
        MOV     C,0xE0 /* A   */.0
        JNC     ??zclGeneral_ProcessInScenesServer_40
// 2762           {
// 2763             // The Scene already exists so update only NV
// 2764             zclGeneral_ScenesSave();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay; Banked call to: zclGeneral_ScenesWriteNV
// 2765           }
// 2766         }
        SJMP    ??zclGeneral_ProcessInScenesServer_40
// 2767         else
// 2768         {
// 2769           status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
??zclGeneral_ProcessInScenesServer_35:
        MOV     ?V0,#-0x77
        SJMP    ??zclGeneral_ProcessInScenesServer_40
// 2770         }
// 2771       }
// 2772       else
// 2773       {
// 2774         status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
??zclGeneral_ProcessInScenesServer_33:
        MOV     ?V0,#-0x7b
// 2775       }
// 2776 
// 2777       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_40:
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_3:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_206:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2778       {
// 2779         // Addressed to this device (not to a group) - send a response back
// 2780         zclGeneral_SendSceneStoreResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2781                                            status, scene.groupID, scene.ID,
// 2782                                            true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL   ?Subroutine12 & 0xFFFF
// 2783       }
??CrossCallReturnLabel_168:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV     ?V1,#0x1
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_163:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV     R5,?V0
        MOV     R4,#0x4
??zclGeneral_ProcessInScenesServer_21:
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_107:
        LCALL   ??zclGeneral_SendSceneResponse?relay; Banked call to: zclGeneral_SendSceneResponse
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
        LJMP    ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2784       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2785       break;
// 2786 
// 2787     case COMMAND_SCENE_RECALL:
// 2788       pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_6:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_282:
        LCALL   ??zclGeneral_FindScene?relay; Banked call to: zclGeneral_FindScene
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R6,?V4
        MOV     R7,?V5
// 2789       if ( pScene && pCBs->pfnSceneRecallReq )
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_41 & 0xFFFF
        MOV     A,?V6
        ADD     A,#0x1c
        MOV     DPL,A
        CLR     A
        ADDC    A,?V7
        MOV     DPH,A
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_197:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_41 & 0xFFFF
// 2790       {
// 2791         zclSceneReq_t req;
// 2792 
// 2793         req.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_61:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine53 & 0xFFFF
// 2794         req.scene = pScene;
??CrossCallReturnLabel_232:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
// 2795 
// 2796         pCBs->pfnSceneRecallReq( &req );
        ; Setup parameters for indirect call
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP101_8
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?CALL_IND
        LJMP    ??zclGeneral_ProcessInScenesServer_41 & 0xFFFF
// 2797       }
// 2798       // No response
// 2799       break;
// 2800 
// 2801     case COMMAND_SCENE_GET_MEMBERSHIP:
// 2802       // Find all the Scenes corresponding to the Group ID
// 2803       if ( scene.groupID == 0x0000 ||
// 2804            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_7:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_198:
        JZ      ??zclGeneral_ProcessInScenesServer_42
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_283:
        LCALL   ??aps_FindGroup?relay; Banked call to: aps_FindGroup
        MOV     ?V7,R3
        MOV     A,R2
        ORL     A,?V7
        JZ      ??zclGeneral_ProcessInScenesServer_43
// 2805       {
// 2806         // Allocate space for the scene list
// 2807         sceneList = zcl_mem_alloc( ZCL_GEN_MAX_SCENES );
??zclGeneral_ProcessInScenesServer_42:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x10
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
// 2808         if ( sceneList != NULL )
        MOV     A,R2
        ORL     A,?V5
        JZ      ??zclGeneral_ProcessInScenesServer_44
// 2809         {
// 2810           sceneCnt = zclGeneral_FindAllScenesForGroup( pInMsg->msg->endPoint,
// 2811                                                        scene.groupID, sceneList );
        ; Setup parameters for call to function zclGeneral_FindAllScenesForGroup
        MOV     R4,?V4
        MOV     R5,?V5
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_284:
        LCALL   ??zclGeneral_FindAllScenesForGroup?relay; Banked call to: zclGeneral_FindAllScenesForGroup
        MOV     A,R1
        MOV     ?V1,A
// 2812           status = ZCL_STATUS_SUCCESS;
        MOV     ?V0,#0x0
// 2813           if ( ! UNICAST_MSG( pInMsg->msg ) )
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_40:
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??zclGeneral_ProcessInScenesServer_45
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine86_0 & 0xFFFF
??CrossCallReturnLabel_202:
        JZ      ??zclGeneral_ProcessInScenesServer_46
// 2814           {
// 2815             // Addressed to the Group - ONLY send a response if an entry within the
// 2816             // Scene Table corresponds to the Group ID
// 2817             if ( sceneCnt == 0 )
??zclGeneral_ProcessInScenesServer_45:
        MOV     A,?V1
        JNZ     ??zclGeneral_ProcessInScenesServer_46
        SJMP    ??zclGeneral_ProcessInScenesServer_47
// 2818             {
// 2819               sendRsp = FALSE;
// 2820             }
// 2821           }
// 2822         }
// 2823         else
// 2824         {
// 2825           // Couldn't allocate space for the scene list!
// 2826           status = ZCL_STATUS_INSUFFICIENT_SPACE;
??zclGeneral_ProcessInScenesServer_44:
        MOV     ?V0,#-0x77
        SJMP    ??zclGeneral_ProcessInScenesServer_46
// 2827         }
// 2828       }
// 2829       else
// 2830       {
// 2831         // The Group is not in the Group Table - send a response back
// 2832         status = ZCL_STATUS_INVALID_FIELD;
??zclGeneral_ProcessInScenesServer_43:
        MOV     ?V0,#-0x7b
// 2833       }
// 2834 
// 2835 #ifdef ZCL_LIGHT_LINK_ENHANCE //ZLL allows response to unicast only
// 2836       if ( sendRsp && UNICAST_MSG( pInMsg->msg ) )
// 2837 #else
// 2838       if ( sendRsp )
// 2839 #endif //ZCL_LIGHT_LINK_ENHANCE
// 2840       {
// 2841         zclGeneral_SendSceneGetMembershipResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2842                                     status, zclGeneral_ScenesRemaingCapacity(), sceneCnt, sceneList,
// 2843                                     scene.groupID, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInScenesServer_46:
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL   ??zclGeneral_CountAllScenes?relay; Banked call to: zclGeneral_CountAllScenes
        MOV     A,R1
        MOV     R1,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine96_0 & 0xFFFF
// 2844       }
??CrossCallReturnLabel_255:
        ; Setup parameters for call to function zclGeneral_SendSceneGetMembershipResponse
        MOV     DPL,?V12
        MOV     DPH,?V13
        MOVX    A,@DPTR
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV     ?V2,#0x1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 86)
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     A,#0x10
        CLR     C
        SUBB    A,R1
        MOV     R5,A
        MOV     R4,?V0
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_108:
        LCALL   ??zclGeneral_SendSceneGetMembershipResponse?rel; Banked call to: zclGeneral_SendSceneGetMembershipResponse
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2845 
// 2846       if ( sceneList != NULL )
        MOV     A,?V4
        ORL     A,?V5
        JZ      ??zclGeneral_ProcessInScenesServer_20
// 2847         zcl_mem_free( sceneList );
??zclGeneral_ProcessInScenesServer_47:
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V4
        MOV     R3,?V5
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
// 2848 
// 2849       stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInScenesServer_20:
        MOV     ?V0,#-0x1
// 2850       break;
        SJMP    ??zclGeneral_ProcessInScenesServer_41
// 2851 
// 2852 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2853     case COMMAND_SCENE_COPY:
// 2854       {
// 2855         uint8 mode;
// 2856         uint16 groupIDFrom, groupIDTo;
// 2857         uint8 sceneIDFrom, sceneIDTo;
// 2858 
// 2859         pData = pInMsg->pData; // different payload format
// 2860 
// 2861         mode = *pData++;
// 2862         groupIDFrom = BUILD_UINT16( pData[0], pData[1] ); // from group ID
// 2863         pData += 2;
// 2864         sceneIDFrom = *pData++; // from scene ID
// 2865         groupIDTo = BUILD_UINT16( pData[0], pData[1] ); // to group ID
// 2866         pData += 2;
// 2867         if ( (mode & SCENE_COPY_MODE_ALL_BIT) == 0 )
// 2868         {
// 2869           sceneIDTo = *pData++; // to scene ID
// 2870         }
// 2871 
// 2872         // Make sure the groups exist
// 2873         if ( ( aps_FindGroup( pInMsg->msg->endPoint, groupIDFrom ) != NULL ) &&
// 2874              ( aps_FindGroup( pInMsg->msg->endPoint, groupIDTo ) != NULL ) )
// 2875         {
// 2876           // Allocate space for the scene list
// 2877           sceneList = zcl_mem_alloc( (mode & SCENE_COPY_MODE_ALL_BIT) ? ZCL_GEN_MAX_SCENES : 1 );
// 2878           if ( sceneList == NULL )
// 2879           {
// 2880             status = ZCL_STATUS_INSUFFICIENT_SPACE; // Couldn't allocate space for the scene list!
// 2881           }
// 2882           else
// 2883           {
// 2884             status = ZCL_STATUS_SUCCESS;
// 2885             if ( mode & SCENE_COPY_MODE_ALL_BIT ) // Copy all scenes
// 2886             {
// 2887               sceneCnt = zclGeneral_FindAllScenesForGroup( pInMsg->msg->endPoint,
// 2888                                                            groupIDFrom, sceneList );
// 2889             }
// 2890             else // Copy single scene
// 2891             {
// 2892               // Make sure the scene exists
// 2893               pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDFrom, sceneIDFrom );
// 2894               if ( pScene != NULL )
// 2895               {
// 2896                 sceneList[0] = sceneIDFrom;
// 2897                 sceneCnt = 1;
// 2898               }
// 2899               else
// 2900               {
// 2901                 status = ZCL_STATUS_INVALID_FIELD; // Scene not found
// 2902               }
// 2903             }
// 2904           }
// 2905 
// 2906           if ( status == ZCL_STATUS_SUCCESS )
// 2907           {
// 2908             uint8 numScenesToAdd = 0;
// 2909             uint8 i;
// 2910             for ( i = 0; i < sceneCnt; i++ )
// 2911             {
// 2912               if ( zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDTo, sceneList[i] ) == NULL )
// 2913               {
// 2914                 numScenesToAdd++;
// 2915               }
// 2916             }
// 2917             if ( zclGeneral_ScenesRemaingCapacity() >= numScenesToAdd )
// 2918             {
// 2919               // Copy the scenes
// 2920               for ( i = 0; i < sceneCnt; i++ )
// 2921               {
// 2922                 // Ignore scene ID from and scene ID to fields
// 2923                 pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDFrom, sceneList[i] );
// 2924                 if ( pScene != NULL )
// 2925                 {
// 2926                   zclGeneral_Scene_t *pToScene;
// 2927                   scene = *pScene;
// 2928                   scene.groupID = groupIDTo;
// 2929                   scene.ID = ( (mode & SCENE_COPY_MODE_ALL_BIT) ? sceneList[i] : sceneIDTo );
// 2930 
// 2931                   pToScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDTo, scene.ID );
// 2932                   if( pToScene != NULL )
// 2933                   {
// 2934                     zclGeneral_RemoveScene( pInMsg->msg->endPoint, groupIDTo, scene.ID );
// 2935                   }
// 2936                   // Add the scene
// 2937                   zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
// 2938                 }
// 2939               }
// 2940             }
// 2941             else
// 2942             {
// 2943               status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
// 2944             }
// 2945           }
// 2946         }
// 2947         else
// 2948         {
// 2949           status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
// 2950         }
// 2951 
// 2952         if ( UNICAST_MSG( pInMsg->msg ) )
// 2953         {
// 2954           if ( pScene == NULL )
// 2955           {
// 2956             pScene = &scene;
// 2957           }
// 2958           // Addressed to this device (not to a group) - send a response back
// 2959           zclGeneral_SendSceneCopyResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2960                                             status, pScene->groupID, pScene->ID,
// 2961                                             true, pInMsg->hdr.transSeqNum );
// 2962         }
// 2963 
// 2964         if ( sceneList != NULL )
// 2965         {
// 2966           zcl_mem_free( sceneList );
// 2967         }
// 2968       }
// 2969 
// 2970       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2971       break;
// 2972 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2973 
// 2974     default:
// 2975       stat = ZFailure;
??zclGeneral_ProcessInScenesServer_8:
        MOV     ?V0,#0x1
// 2976     break;
// 2977   }
// 2978 
// 2979   return ( stat );
??zclGeneral_ProcessInScenesServer_41:
        MOV     R1,?V0
        MOV     A,#0x3c
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock374
// 2980 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond375 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 79)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond376) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond376) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond376) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond376) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond376) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond376) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond376) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond376) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_SP SP+-2
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-2
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-2
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_108
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-2
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker380 Using cfiCommon1
          CFI (cfiPicker380) NoFunction
          CFI (cfiPicker380) Picker
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_124:
        RET
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiPicker380

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond381 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_16
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond382) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond382) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond382) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond382) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond382) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+-4
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_104
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-4
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 79)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_105
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-4
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_106
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond385) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-4
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_107
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond386) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond386) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond386) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond386) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond386) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond386) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-4
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_108
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond387) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond387) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond387) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond387) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond387) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond387) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond387) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond387) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond387) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond387) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+-4
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker388 Using cfiCommon1
          CFI (cfiPicker388) NoFunction
          CFI (cfiPicker388) Picker
        MOV     A,R6
        ADD     A,#0x6
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_130:
        MOV     R1,A
        RET
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiPicker388

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond389 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_231
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond390) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond390) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond390) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond390) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond390) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond390) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond390) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+-2
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker391 Using cfiCommon1
          CFI (cfiPicker391) NoFunction
          CFI (cfiPicker391) Picker
        MOV     A,R2
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiPicker391
        REQUIRE ??Subroutine93_0
        ; // Fall through to label ??Subroutine93_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine93_0:
          CFI Block cfiCond392 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_233
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond393) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond393) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+-2
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond394) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond394) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond394) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond394) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond394) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond394) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond394) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-2
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker395 Using cfiCommon1
          CFI (cfiPicker395) NoFunction
          CFI (cfiPicker395) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,#0x3
        RET
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiPicker395

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond396 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_236
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond397) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond397) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond397) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+-2
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-2
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker399 Using cfiCommon1
          CFI (cfiPicker399) NoFunction
          CFI (cfiPicker399) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiPicker399
        REQUIRE ??Subroutine94_0
        ; // Fall through to label ??Subroutine94_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine94_0:
          CFI Block cfiCond400 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_234
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond401) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond401) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond401) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond401) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond401) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond401) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond401) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+-2
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond402) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond402) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond402) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond402) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond402) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-2
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-2
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond404) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond404) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond404) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond404) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+-2
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker405 Using cfiCommon1
          CFI (cfiPicker405) NoFunction
          CFI (cfiPicker405) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        RET
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiPicker405

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond406 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond407) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond407) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond407) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond407) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond407) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+-2
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker408 Using cfiCommon1
          CFI (cfiPicker408) NoFunction
          CFI (cfiPicker408) Picker
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        ADD     A,#0x6
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiPicker408

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond409 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_246
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-2
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker411 Using cfiCommon1
          CFI (cfiPicker411) NoFunction
          CFI (cfiPicker411) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiPicker411
        REQUIRE ??Subroutine95_0
        ; // Fall through to label ??Subroutine95_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine95_0:
          CFI Block cfiCond412 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlStepRequest
          CFI Conditional ??CrossCallReturnLabel_239
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function zclGeneral_RemoveScene
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function zclGeneral_RemoveScene
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+-2
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+-2
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond416) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-2
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+-2
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function zclGeneral_ScenesInit
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+-2
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 68)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond419) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond419) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond419) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond419) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond419) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond419) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond419) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-2
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-2
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker421 Using cfiCommon1
          CFI (cfiPicker421) NoFunction
          CFI (cfiPicker421) Picker
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_251:
        RET
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiPicker421

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond422 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function zclGeneral_SendSceneResponse
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_55
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-4
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_56
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-4
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_246
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond425) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+-4
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_247
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-4
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_239
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-4
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function zclGeneral_RemoveScene
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_240
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-4
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function zclGeneral_RemoveScene
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_241
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+-4
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_242
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-4
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_243
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-4
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_244
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-4
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function zclGeneral_ScenesInit
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_245
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-4
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 68)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function zclGeneral_SendGroupRequest
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_36
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-6
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function zclGeneral_SendSceneRequest
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_37
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-6
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_175
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-6
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_176
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+-6
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_174
          CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond438) CFA_SP SP+-6
          CFI (cfiCond438) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond439 Using cfiCommon0
          CFI (cfiCond439) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond439) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_203
          CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond439) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond439) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond439) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond439) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond439) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond439) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond439) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond439) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond439) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond439) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond439) CFA_SP SP+-6
          CFI (cfiCond439) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_204
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond440) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond440) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond440) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond440) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond440) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond440) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond440) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond440) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+-6
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_205
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond441) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond441) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond441) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond441) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond441) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-6
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_206
          CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond442) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond442) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond442) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond442) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond442) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond442) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond442) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond442) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond442) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond442) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond442) CFA_SP SP+-6
          CFI (cfiCond442) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond443 Using cfiCommon0
          CFI (cfiCond443) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond443) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_201
          CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond443) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond443) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond443) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond443) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond443) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond443) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond443) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond443) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond443) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond443) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond443) CFA_SP SP+-6
          CFI (cfiCond443) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_202
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-6
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_186
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-6
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_188
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+-6
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_189
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-6
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_190
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond448) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond448) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond448) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond448) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond448) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond448) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond448) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-6
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_191
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond449) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond449) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond449) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond449) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond449) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond449) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond449) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-6
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_187
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-6
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_192
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond451) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond451) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond451) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond451) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond451) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond451) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond451) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-6
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_193
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond452) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond452) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond452) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond452) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond452) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond452) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond452) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond452) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond452) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond452) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-6
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_194
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond453) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond453) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond453) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-6
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_195
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond454) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond454) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond454) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond454) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond454) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond454) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond454) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-6
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_196
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond455) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond455) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond455) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond455) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond455) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond455) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond455) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-6
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_197
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond456) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond456) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond456) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-6
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_198
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond457) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond457) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond457) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond457) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond457) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-6
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_199
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond458) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-6
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_200
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond459) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond459) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-6
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_38
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond460) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond460) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond460) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond460) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond460) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-6
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_39
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-6
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_40
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond462) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond462) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond462) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-6
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_41
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-6
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_42
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-6
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_17
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-4
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_18
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-4
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_19
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-4
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker468 Using cfiCommon1
          CFI (cfiPicker468) NoFunction
          CFI (cfiPicker468) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiPicker468

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond469 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_256
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond470) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond470) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond470) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond470) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond470) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond470) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond470) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+-2
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker471 Using cfiCommon1
          CFI (cfiPicker471) NoFunction
          CFI (cfiPicker471) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiPicker471
        REQUIRE ??Subroutine96_0
        ; // Fall through to label ??Subroutine96_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine96_0:
          CFI Block cfiCond472 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_252
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function zclGeneral_FindScene
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-2
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond474) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond474) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond474) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-2
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond475) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond475) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond475) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+-2
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-2
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond477) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-2
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker478 Using cfiCommon1
          CFI (cfiPicker478) NoFunction
          CFI (cfiPicker478) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        RET
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiPicker478

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond479 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-2
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond481) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-2
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-2
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+-2
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker484 Using cfiCommon1
          CFI (cfiPicker484) NoFunction
          CFI (cfiPicker484) Picker
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_209:
        RET
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiPicker484

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond485 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_36
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function zclGeneral_SendSceneRequest
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_37
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-4
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_175
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-4
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_176
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-4
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_174
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-4
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_203
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-4
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_204
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond491) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond491) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond491) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-4
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_205
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond492) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+-4
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_206
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond493) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond493) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond493) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond493) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond493) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+-4
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_201
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond494) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-4
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_202
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-4
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_186
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-4
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_188
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-4
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_189
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-4
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_190
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-4
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_191
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond500) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond500) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond500) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-4
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_187
          CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond501) CFA_SP SP+-4
          CFI (cfiCond501) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_192
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-4
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_193
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond503) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond503) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond503) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-4
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_194
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond504) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond504) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond504) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-4
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_195
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-4
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_196
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond506) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond506) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond506) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond506) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+-4
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_197
          CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond507) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond507) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond507) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond507) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond507) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond507) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond507) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond507) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond507) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond507) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond507) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond507) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond507) CFA_SP SP+-4
          CFI (cfiCond507) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_198
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond508) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond508) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-4
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_199
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond509) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond509) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-4
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_200
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond510) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond510) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-4
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_38
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-4
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_39
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+-4
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_40
          CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond513) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond513) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond513) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond513) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond513) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond513) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond513) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond513) CFA_SP SP+-4
          CFI (cfiCond513) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_41
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+-4
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_42
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-4
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker516 Using cfiCommon1
          CFI (cfiPicker516) NoFunction
          CFI (cfiPicker516) Picker
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_250:
        MOV     A,R0
        RET
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiPicker516

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond517 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-2
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-2
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-2
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker521 Using cfiCommon1
          CFI (cfiPicker521) NoFunction
          CFI (cfiPicker521) Picker
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiPicker521

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond522 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_272
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond523) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-2
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-2
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-2
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond526) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond526) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond526) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-2
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond527) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond527) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond527) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-2
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond528) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond528) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond528) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond528) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond528) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond528) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond528) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-2
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond529) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond529) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond529) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond529) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond529) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond529) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond529) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-2
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond530) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-2
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-2
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-2
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-2
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-2
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker535 Using cfiCommon1
          CFI (cfiPicker535) NoFunction
          CFI (cfiPicker535) Picker
        LCALL   ?Subroutine66 & 0xFFFF
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiPicker535
??CrossCallReturnLabel_226:
        REQUIRE ??Subroutine97_0
        ; // Fall through to label ??Subroutine97_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine97_0:
          CFI Block cfiCond536 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_269
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-2
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_271
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-2
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-2
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-2
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond541) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond541) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond541) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-2
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-2
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond543) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-2
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond544) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond544) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond544) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-2
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond545) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond545) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond545) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-2
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-2
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-2
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond548) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-2
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-2
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond550) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-2
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-2
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker552 Using cfiCommon1
          CFI (cfiPicker552) NoFunction
          CFI (cfiPicker552) Picker
        MOV     DPL,?V2
        MOV     DPH,?V3
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiPicker552
        REQUIRE ??Subroutine98_0
        ; // Fall through to label ??Subroutine98_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine98_0:
          CFI Block cfiCond553 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_258
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-2
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond555) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond555) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-2
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond556) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-2
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond557) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-2
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-2
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond559) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond559) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond559) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond559) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond559) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond559) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond559) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond559) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-2
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond560) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond560) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond560) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond560) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond560) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-2
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-2
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-2
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond563) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond563) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond563) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-2
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-2
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-2
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_271
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-2
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-2
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-2
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-2
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond570) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond570) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-2
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond571) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond571) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond571) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond571) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond571) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond571) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-2
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond572) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond572) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond572) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond572) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-2
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-2
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond574) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond574) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-2
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-2
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-2
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-2
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-2
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-2
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker580 Using cfiCommon1
          CFI (cfiPicker580) NoFunction
          CFI (cfiPicker580) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiPicker580
// 2981 
// 2982 /*********************************************************************
// 2983  * @fn      zclGeneral_ProcessInScenesClient
// 2984  *
// 2985  * @brief   Process in the received Scenes Command.
// 2986  *
// 2987  * @param   pInMsg - pointer to the incoming message
// 2988  *
// 2989  * @return  ZStatus_t
// 2990  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2991 static ZStatus_t zclGeneral_ProcessInScenesClient( zclIncoming_t *pInMsg,
zclGeneral_ProcessInScenesClient:
          CFI Block cfiBlock581 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
        CODE
// 2992                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2993 {
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 90, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 65
        MOV     A,#-0x41
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     ?V2,R4
        MOV     ?V3,R5
// 2994   zclGeneral_Scene_t scene;
// 2995   uint8 *pData = pInMsg->pData;
        LCALL   ?Subroutine32 & 0xFFFF
// 2996   uint8 nameLen;
// 2997   zclSceneRsp_t rsp;
// 2998   uint8 i;
// 2999   ZStatus_t stat = ZSuccess;
??CrossCallReturnLabel_257:
        MOV     ?V10,#0x0
// 3000 
// 3001   zcl_memset( (uint8*)&scene, 0, sizeof( zclGeneral_Scene_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x37
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??osal_memset?relay  ; Banked call to: osal_memset
// 3002   zcl_memset( (uint8*)&rsp, 0, sizeof( zclSceneRsp_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xa
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   ??osal_memset?relay  ; Banked call to: osal_memset
// 3003 
// 3004   // Get the status field first
// 3005   rsp.status = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine49 & 0xFFFF
// 3006 
// 3007   if ( pInMsg->hdr.commandID == COMMAND_SCENE_GET_MEMBERSHIP_RSP )
??CrossCallReturnLabel_90:
        MOV     A,?V8
        ADD     A,#0x7
        MOV     ?V0,A
        CLR     A
        ADDC    A,?V9
        MOV     ?V1,A
        MOV     DPL,?V0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,#0x6
        JNZ     ??zclGeneral_ProcessInScenesClient_0
// 3008   {
// 3009     rsp.capacity = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine69 & 0xFFFF
// 3010   }
??CrossCallReturnLabel_121:
        INC     R6
        MOV     R7,DPH
// 3011 
// 3012   scene.groupID = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInScenesClient_0:
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_82:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 3013   pData += 2;   // Move past group ID
??CrossCallReturnLabel_87:
        JNC     ??zclGeneral_ProcessInScenesClient_1
        INC     R7
// 3014 
// 3015   switch ( pInMsg->hdr.commandID )
??zclGeneral_ProcessInScenesClient_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,?V2
        ADD     A,#0x1e
        MOV     ?V2,A
        JNC     ??zclGeneral_ProcessInScenesClient_2
        INC     ?V3
??zclGeneral_ProcessInScenesClient_2:
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInScenesClient_3
        DEC     A
        JZ      ??zclGeneral_ProcessInScenesClient_4
        DEC     A
        JZ      ??zclGeneral_ProcessInScenesClient_3
        DEC     A
        JZ      ??zclGeneral_ProcessInScenesClient_3
        DEC     A
        JZ      ??zclGeneral_ProcessInScenesClient_3
        ADD     A,#-0x2
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesClient_5 & 0xFFFF
        LJMP    ??zclGeneral_ProcessInScenesClient_6 & 0xFFFF
// 3016   {
// 3017     case COMMAND_SCENE_VIEW_RSP:
// 3018       // Parse the rest of the incoming message
// 3019       scene.ID = *pData++; // Not applicable to Remove All Response command
??zclGeneral_ProcessInScenesClient_4:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 3020       scene.transTime = BUILD_UINT16( pData[0], pData[1] );
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_238:
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 3021       pData += 2;
??CrossCallReturnLabel_88:
        JNC     ??zclGeneral_ProcessInScenesClient_7
        INC     R7
// 3022       nameLen = *pData++; // Name length
??zclGeneral_ProcessInScenesClient_7:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V7,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 3023       if ( nameLen > (ZCL_GEN_SCENE_NAME_LEN-1) )
        CLR     C
        SUBB    A,#0x10
        JC      ??zclGeneral_ProcessInScenesClient_8
// 3024         nameLen = (ZCL_GEN_SCENE_NAME_LEN-1);
        MOV     ?V7,#0xf
// 3025 
// 3026       scene.name[0] = nameLen;
??zclGeneral_ProcessInScenesClient_8:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V7
        LCALL   ?Subroutine52 & 0xFFFF
// 3027       zcl_memcpy( &(scene.name[1]), pData, nameLen );
??CrossCallReturnLabel_97:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     R4,?V7
        MOV     R5,#0x0
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
// 3028 
// 3029       pData += nameLen; // move past name, use original length
        MOV     R0,?V7
        MOV     A,R6
        ADD     A,R0
        MOV     R6,A
        CLR     A
        ADDC    A,R7
        MOV     R7,A
// 3030 
// 3031       //*** Do something with the extension field(s)
// 3032 
// 3033       // Fall through to callback - break is left off intentionally
// 3034 
// 3035     case COMMAND_SCENE_ADD_RSP:
// 3036     case COMMAND_SCENE_REMOVE_RSP:
// 3037     case COMMAND_SCENE_REMOVE_ALL_RSP:
// 3038     case COMMAND_SCENE_STORE_RSP:
// 3039       if ( pCBs->pfnSceneRsp )
??zclGeneral_ProcessInScenesClient_3:
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_199:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesClient_9 & 0xFFFF
// 3040       {
// 3041         if ( pInMsg->hdr.commandID != COMMAND_SCENE_REMOVE_ALL_RSP )
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        XRL     A,#0x3
        JZ      ??zclGeneral_ProcessInScenesClient_10
// 3042         {
// 3043           scene.ID = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3044         }
// 3045         rsp.srcAddr = &(pInMsg->msg->srcAddr);
??zclGeneral_ProcessInScenesClient_10:
        LCALL   ?Subroutine19 & 0xFFFF
// 3046         rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_13:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3047         rsp.scene = &scene;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP100_8
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine16 & 0xFFFF
// 3048 
// 3049         pCBs->pfnSceneRsp( &rsp );
// 3050       }
??CrossCallReturnLabel_285:
        LCALL   ?CALL_IND
        LJMP    ??zclGeneral_ProcessInScenesClient_9 & 0xFFFF
// 3051       break;
// 3052 
// 3053     case COMMAND_SCENE_GET_MEMBERSHIP_RSP:
// 3054       {
// 3055         uint8 *sceneList = NULL;
??zclGeneral_ProcessInScenesClient_5:
        MOV     ?V4,#0x0
        MOV     ?V5,#0x0
// 3056 
// 3057         if ( rsp.status == ZCL_STATUS_SUCCESS )
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JNZ     ??zclGeneral_ProcessInScenesClient_11
// 3058         {
// 3059           uint8 sceneCnt = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V6,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 3060 
// 3061           if ( sceneCnt > 0 )
        MOV     A,?V6
        JZ      ??zclGeneral_ProcessInScenesClient_11
// 3062           {
// 3063             // Allocate space for the scene list
// 3064             sceneList = zcl_mem_alloc( sceneCnt );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
// 3065             if ( sceneList != NULL )
        MOV     A,R2
        ORL     A,?V5
        JZ      ??zclGeneral_ProcessInScenesClient_11
// 3066             {
// 3067               rsp.sceneCnt = sceneCnt;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V6
        MOVX    @DPTR,A
// 3068               for ( i = 0; i < sceneCnt; i++ )
        MOV     R2,#0x0
        SJMP    ??zclGeneral_ProcessInScenesClient_12
// 3069                 sceneList[i] = *pData++;
??zclGeneral_ProcessInScenesClient_13:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R2
        MOV     R0,A
        MOV     A,?V4
        ADD     A,R0
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_91:
        INC     R2
??zclGeneral_ProcessInScenesClient_12:
        MOV     A,R2
        CLR     C
        SUBB    A,?V6
        JC      ??zclGeneral_ProcessInScenesClient_13
// 3070             }
// 3071           }
// 3072         }
// 3073 
// 3074         if ( pCBs->pfnSceneRsp )
??zclGeneral_ProcessInScenesClient_11:
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine87_0 & 0xFFFF
??CrossCallReturnLabel_200:
        JZ      ??zclGeneral_ProcessInScenesClient_14
// 3075         {
// 3076           rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL   ?Subroutine19 & 0xFFFF
// 3077           rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_14:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3078           rsp.sceneList = sceneList;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V5
        MOVX    @DPTR,A
// 3079           rsp.scene = &scene;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP100_8
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine16 & 0xFFFF
// 3080 
// 3081           pCBs->pfnSceneRsp( &rsp);
// 3082         }
??CrossCallReturnLabel_286:
        LCALL   ?CALL_IND
// 3083 
// 3084         if ( sceneList != NULL )
??zclGeneral_ProcessInScenesClient_14:
        MOV     A,?V4
        ORL     A,?V5
        JZ      ??zclGeneral_ProcessInScenesClient_9
// 3085         {
// 3086           zcl_mem_free( sceneList );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V4
        MOV     R3,?V5
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        SJMP    ??zclGeneral_ProcessInScenesClient_9
// 3087         }
// 3088       }
// 3089       break;
// 3090 
// 3091     default:
// 3092       stat = ZFailure;
??zclGeneral_ProcessInScenesClient_6:
        MOV     ?V10,#0x1
// 3093       break;
// 3094   }
// 3095 
// 3096   return ( stat );
??zclGeneral_ProcessInScenesClient_9:
        MOV     R1,?V10
        MOV     A,#0x41
          CFI EndBlock cfiBlock581
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2
// 3097 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock582 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 76)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock582
        REQUIRE ??Subroutine99_0
        ; // Fall through to label ??Subroutine99_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine99_0:
          CFI Block cfiBlock583 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock583

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond584 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-2
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker586 Using cfiCommon1
          CFI (cfiPicker586) NoFunction
          CFI (cfiPicker586) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,R6
        MOV     ?V5,R7
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiPicker586

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond587 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-2
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond589) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond589) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond589) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond589) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond589) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond589) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-2
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker590 Using cfiCommon1
          CFI (cfiPicker590) NoFunction
          CFI (cfiPicker590) Picker
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_122:
        MOV     R6,DPL
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiPicker590

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond591 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_89
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond592) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond592) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond592) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond592) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond592) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond592) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond592) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond592) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-4
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_90
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-4
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_91
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-4
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-2
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker596 Using cfiCommon1
          CFI (cfiPicker596) NoFunction
          CFI (cfiPicker596) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        RET
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiPicker596

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond597 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond598) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-2
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond599) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond599) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond599) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond599) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond599) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond599) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond599) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond599) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond599) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond599) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond599) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond599) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond599) CFA_SP SP+-2
          CFI (cfiCond599) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond600) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond600) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond600) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond600) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond600) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond600) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-2
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker601 Using cfiCommon1
          CFI (cfiPicker601) NoFunction
          CFI (cfiPicker601) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        RET
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiPicker601

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond602 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond603) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-2
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker604 Using cfiCommon1
          CFI (cfiPicker604) NoFunction
          CFI (cfiPicker604) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        MOV     A,#0xa
        RET
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiPicker604

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond605 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_13
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond606) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond606) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond606) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond606) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond606) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-2
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker607 Using cfiCommon1
          CFI (cfiPicker607) NoFunction
          CFI (cfiPicker607) Picker
        MOV     DPL,?V8
        MOV     DPH,?V9
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_112:
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiPicker607

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond608 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_12
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond609) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond609) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond609) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond609) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond609) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-4
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_13
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-4
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_14
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-4
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker612 Using cfiCommon1
          CFI (cfiPicker612) NoFunction
          CFI (cfiPicker612) Picker
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_128:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiPicker612

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond613 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_127
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_11
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond614) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond614) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond614) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-6
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_12
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-6
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_13
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond616) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond616) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond616) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+-6
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_14
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond617) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond617) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-6
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker618 Using cfiCommon1
          CFI (cfiPicker618) NoFunction
          CFI (cfiPicker618) Picker
        MOVX    A,@DPTR
        ADD     A,#0x6
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiPicker618
// 3098 #endif // ZCL_SCENES
// 3099 
// 3100 #ifdef ZCL_ON_OFF
// 3101 /*********************************************************************
// 3102  * @fn      zclGeneral_ProcessInCmdOnOff
// 3103  *
// 3104  * @brief   Process in the received On/Off Command.
// 3105  *
// 3106  * @param   pInMsg - pointer to the incoming message
// 3107  *
// 3108  * @return  ZStatus_t
// 3109  */
// 3110 static ZStatus_t zclGeneral_ProcessInOnOff( zclIncoming_t *pInMsg,
// 3111                                             zclGeneral_AppCallbacks_t *pCBs )
// 3112 {
// 3113   ZStatus_t stat = ZSuccess;
// 3114 
// 3115   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 3116   {
// 3117     switch ( pInMsg->hdr.commandID )
// 3118     {
// 3119       case COMMAND_OFF:
// 3120       case COMMAND_ON:
// 3121       case COMMAND_TOGGLE:
// 3122         if ( pCBs->pfnOnOff )
// 3123         {
// 3124           pCBs->pfnOnOff( pInMsg->hdr.commandID );
// 3125         }
// 3126         break;
// 3127 
// 3128 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 3129       case COMMAND_OFF_WITH_EFFECT:
// 3130         if ( pCBs->pfnOnOff_OffWithEffect )
// 3131         {
// 3132           zclOffWithEffect_t cmd;
// 3133 
// 3134           cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3135           cmd.effectId = pInMsg->pData[0];
// 3136           cmd.effectVariant = pInMsg->pData[1];
// 3137 
// 3138           pCBs->pfnOnOff_OffWithEffect( &cmd );
// 3139         }
// 3140         break;
// 3141 
// 3142       case COMMAND_ON_WITH_RECALL_GLOBAL_SCENE:
// 3143         if ( pCBs->pfnOnOff_OnWithRecallGlobalScene )
// 3144         {
// 3145           pCBs->pfnOnOff_OnWithRecallGlobalScene();
// 3146         }
// 3147         break;
// 3148 
// 3149       case COMMAND_ON_WITH_TIMED_OFF:
// 3150         if ( pCBs->pfnOnOff_OnWithTimedOff )
// 3151         {
// 3152           zclOnWithTimedOff_t cmd;
// 3153 
// 3154           cmd.onOffCtrl.byte = pInMsg->pData[0];
// 3155           cmd.onTime = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 3156           cmd.offWaitTime = BUILD_UINT16( pInMsg->pData[3], pInMsg->pData[4] );
// 3157           pCBs->pfnOnOff_OnWithTimedOff( &cmd );
// 3158         }
// 3159         break;
// 3160 #endif // ZCL_LIGHT_LINK_ENHANCE
// 3161 
// 3162       default:
// 3163         stat = ZFailure;
// 3164         break;
// 3165     }
// 3166   }
// 3167   // no Client command
// 3168 
// 3169   return ( stat );
// 3170 }
// 3171 #endif // ZCL_ON_OFF
// 3172 
// 3173 #ifdef ZCL_LEVEL_CTRL
// 3174 /*********************************************************************
// 3175  * @fn      zclGeneral_ProcessInLevelControl
// 3176  *
// 3177  * @brief   Process in the received Level Control Command.
// 3178  *
// 3179  * @param   pInMsg - pointer to the incoming message
// 3180  *
// 3181  * @return  ZStatus_t
// 3182  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3183 static ZStatus_t zclGeneral_ProcessInLevelControl( zclIncoming_t *pInMsg,
zclGeneral_ProcessInLevelControl:
          CFI Block cfiBlock619 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
        CODE
// 3184                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3185 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
// 3186   uint8 withOnOff = FALSE;
        MOV     R0,#0x0
// 3187   ZStatus_t stat = ZSuccess;
        MOV     R6,#0x0
// 3188 
// 3189   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3190   {
// 3191     switch ( pInMsg->hdr.commandID )
        MOV     A,R2
        ADD     A,#0x8
        MOV     ?V0,A
        CLR     A
        ADDC    A,R3
        MOV     ?V1,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInLevelControl_1
        DEC     A
        JZ      ??zclGeneral_ProcessInLevelControl_2
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_3 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_4 & 0xFFFF
        DEC     A
        JZ      ??zclGeneral_ProcessInLevelControl_5
        DEC     A
        JZ      ??zclGeneral_ProcessInLevelControl_6
        DEC     A
        JZ      ??zclGeneral_ProcessInLevelControl_7
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_4 & 0xFFFF
        LJMP    ??zclGeneral_ProcessInLevelControl_8 & 0xFFFF
// 3192     {
// 3193       case COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF:
// 3194         withOnOff = TRUE;
??zclGeneral_ProcessInLevelControl_5:
        MOV     R0,#0x1
// 3195         // fall through
// 3196       case COMMAND_LEVEL_MOVE_TO_LEVEL:
// 3197         if ( pCBs->pfnLevelControlMoveToLevel )
??zclGeneral_ProcessInLevelControl_1:
        MOV     A,R4
        ADD     A,#0x10
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_223:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3198         {
// 3199           zclLCMoveToLevel_t cmd;
// 3200 
// 3201           cmd.level = pInMsg->pData[0];
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_46:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 3202 
// 3203           if ( ( cmd.level >= ATTR_LEVEL_MIN_LEVEL ) &&
// 3204                ( cmd.level <= ATTR_LEVEL_MAX_LEVEL ) )
        JZ      ??zclGeneral_ProcessInLevelControl_9
        CPL     A
        JZ      ??zclGeneral_ProcessInLevelControl_9
// 3205           {
// 3206             cmd.transitionTime = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_62:
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_79:
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0
        LCALL   ??Subroutine93_0 & 0xFFFF
// 3207             cmd.withOnOff = withOnOff;
??CrossCallReturnLabel_233:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
// 3208 
// 3209             pCBs->pfnLevelControlMoveToLevel( &cmd );
        ; Setup parameters for indirect call
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        SJMP    ??zclGeneral_ProcessInLevelControl_10
// 3210           }
// 3211           else
// 3212           {
// 3213             // level range requested is invalid
// 3214             stat = ZCL_STATUS_INVALID_VALUE;
??zclGeneral_ProcessInLevelControl_9:
        MOV     R6,#-0x79
        LJMP    ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3215           }
// 3216         }
// 3217         break;
// 3218 
// 3219       case COMMAND_LEVEL_MOVE_WITH_ON_OFF:
// 3220         withOnOff = TRUE;
??zclGeneral_ProcessInLevelControl_6:
        MOV     R0,#0x1
// 3221         // fall through
// 3222       case COMMAND_LEVEL_MOVE:
// 3223         if ( pCBs->pfnLevelControlMove )
??zclGeneral_ProcessInLevelControl_2:
        MOV     A,R4
        ADD     A,#0x12
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_224:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3224         {
// 3225           zclLCMove_t cmd;
// 3226 
// 3227           cmd.moveMode = pInMsg->pData[0];
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_47:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine41 & 0xFFFF
// 3228           cmd.rate = pInMsg->pData[1];
??CrossCallReturnLabel_77:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3229           cmd.withOnOff = withOnOff;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
// 3230 
// 3231           pCBs->pfnLevelControlMove( &cmd );
        ; Setup parameters for indirect call
        MOV     A,#0x4
        SJMP    ??zclGeneral_ProcessInLevelControl_11
// 3232         }
// 3233         break;
// 3234 
// 3235       case COMMAND_LEVEL_STEP_WITH_ON_OFF:
// 3236         withOnOff = TRUE;
??zclGeneral_ProcessInLevelControl_7:
        MOV     R0,#0x1
// 3237         // fall through
// 3238       case COMMAND_LEVEL_STEP:
// 3239         if ( pCBs->pfnLevelControlStep )
??zclGeneral_ProcessInLevelControl_3:
        MOV     A,R4
        ADD     A,#0x14
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_225:
        JZ      ??zclGeneral_ProcessInLevelControl_0
// 3240         {
// 3241           zclLCStep_t cmd;
// 3242 
// 3243           cmd.stepMode = pInMsg->pData[0];
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_48:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine41 & 0xFFFF
// 3244           cmd.amount =  pInMsg->pData[1];
??CrossCallReturnLabel_78:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3245           cmd.transitionTime = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_63:
        INC     DPTR
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_80:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0
        LCALL   ??Subroutine90_0 & 0xFFFF
// 3246           cmd.withOnOff = withOnOff;
??CrossCallReturnLabel_212:
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
// 3247 
// 3248           pCBs->pfnLevelControlStep( &cmd );
        ; Setup parameters for indirect call
        MOV     A,#0x7
??zclGeneral_ProcessInLevelControl_11:
        LCALL   ?XSTACK_DISP101_8
??zclGeneral_ProcessInLevelControl_10:
        MOV     DPL,R4
        MOV     DPH,R5
// 3249         }
        LCALL   ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_290:
        SJMP    ??zclGeneral_ProcessInLevelControl_12
// 3250         break;
// 3251 
// 3252       case COMMAND_LEVEL_STOP:
// 3253       case COMMAND_LEVEL_STOP_WITH_ON_OFF:
// 3254         // Both Stop commands are identical
// 3255         if ( pCBs->pfnLevelControlStop )
??zclGeneral_ProcessInLevelControl_4:
        MOV     A,R4
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_19:
        JZ      ??zclGeneral_ProcessInLevelControl_0
// 3256         {
// 3257           pCBs->pfnLevelControlStop();
        ; Setup parameters for indirect call
??zclGeneral_ProcessInLevelControl_12:
        LCALL   ?CALL_IND
        SJMP    ??zclGeneral_ProcessInLevelControl_0
// 3258         }
// 3259         break;
// 3260 
// 3261       default:
// 3262         stat = ZFailure;
??zclGeneral_ProcessInLevelControl_8:
        MOV     R6,#0x1
// 3263         break;
// 3264     }
// 3265   }
// 3266   // no Client command
// 3267 
// 3268   return ( stat );
??zclGeneral_ProcessInLevelControl_0:
        MOV     A,R6
        MOV     R1,A
        MOV     A,#0xc
        LJMP    ??Subroutine101_0 & 0xFFFF
          CFI EndBlock cfiBlock619
// 3269 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond620 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+-2
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker622 Using cfiCommon1
          CFI (cfiPicker622) NoFunction
          CFI (cfiPicker622) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiPicker622

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond623 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-2
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker625 Using cfiCommon1
          CFI (cfiPicker625) NoFunction
          CFI (cfiPicker625) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_116:
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiPicker625

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond626 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-2
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker628 Using cfiCommon1
          CFI (cfiPicker628) NoFunction
          CFI (cfiPicker628) Picker
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_228:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        RET
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiPicker628

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond629 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-2
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-2
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker632 Using cfiCommon1
          CFI (cfiPicker632) NoFunction
          CFI (cfiPicker632) Picker
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_115:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiPicker632

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond633 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_78
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-4
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_46
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-4
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_47
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-4
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_48
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-4
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker638 Using cfiCommon1
          CFI (cfiPicker638) NoFunction
          CFI (cfiPicker638) Picker
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R1
        RET
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiPicker638

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond639 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-2
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond641 Using cfiCommon0
          CFI (cfiCond641) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond641) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond641) CFA_SP SP+-2
          CFI (cfiCond641) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker642 Using cfiCommon1
          CFI (cfiPicker642) NoFunction
          CFI (cfiPicker642) Picker
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_248:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,DPL
        ORL     A,DPH
        RET
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiCond641
          CFI EndBlock cfiPicker642

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond643 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_285
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond644) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond644) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond644) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-2
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker645 Using cfiCommon1
          CFI (cfiPicker645) NoFunction
          CFI (cfiPicker645) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     DPL,?V2
        MOV     DPH,?V3
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiPicker645
        REQUIRE ??Subroutine100_0
        ; // Fall through to label ??Subroutine100_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine100_0:
          CFI Block cfiCond646 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_287
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-2
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-2
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-2
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_285
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond650) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond650) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond650) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond650) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond650) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond650) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond650) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond650) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+-2
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond651) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond651) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond651) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+-2
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker652 Using cfiCommon1
          CFI (cfiPicker652) NoFunction
          CFI (cfiPicker652) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiPicker652
// 3270 #endif // ZCL_LEVEL_CTRL
// 3271 
// 3272 #ifdef ZCL_ALARMS
// 3273 /*********************************************************************
// 3274  * @fn      zclGeneral_AddAlarm
// 3275  *
// 3276  * @brief   Add an alarm for a cluster
// 3277  *
// 3278  * @param   endpoint -
// 3279  * @param   alarm - new alarm item
// 3280  *
// 3281  * @return  ZStatus_t
// 3282  */
// 3283 ZStatus_t zclGeneral_AddAlarm( uint8 endpoint, zclGeneral_Alarm_t *alarm )
// 3284 {
// 3285   zclGenAlarmItem_t *pNewItem;
// 3286   zclGenAlarmItem_t *pLoop;
// 3287 
// 3288   // Fill in the new profile list
// 3289   pNewItem = zcl_mem_alloc( sizeof( zclGenAlarmItem_t ) );
// 3290   if ( pNewItem == NULL )
// 3291     return ( ZMemError );
// 3292 
// 3293   // Fill in the plugin record.
// 3294   pNewItem->next = (zclGenAlarmItem_t *)NULL;
// 3295   pNewItem->endpoint =  endpoint;
// 3296   zcl_memcpy( (uint8*)(&pNewItem->alarm), (uint8*)alarm, sizeof ( zclGeneral_Alarm_t ) );
// 3297 
// 3298   // Find spot in list
// 3299   if (  zclGenAlarmTable == NULL )
// 3300   {
// 3301     zclGenAlarmTable = pNewItem;
// 3302   }
// 3303   else
// 3304   {
// 3305     // Look for end of list
// 3306     pLoop = zclGenAlarmTable;
// 3307     while ( pLoop->next != NULL )
// 3308       pLoop = pLoop->next;
// 3309 
// 3310     // Put new item at end of list
// 3311     pLoop->next = pNewItem;
// 3312   }
// 3313 
// 3314   return ( ZSuccess );
// 3315 }
// 3316 
// 3317 /*********************************************************************
// 3318  * @fn      zclGeneral_FindAlarm
// 3319  *
// 3320  * @brief   Find an alarm with alarmCode and clusterID
// 3321  *
// 3322  * @param   endpoint -
// 3323  * @param   groupID - what group the scene belongs to
// 3324  * @param   sceneID - ID to look for scene
// 3325  *
// 3326  * @return  a pointer to the alarm information, NULL if not found
// 3327  */
// 3328 zclGeneral_Alarm_t *zclGeneral_FindAlarm( uint8 endpoint, uint8 alarmCode, uint16 clusterID )
// 3329 {
// 3330   zclGenAlarmItem_t *pLoop;
// 3331 
// 3332   // Look for the alarm
// 3333   pLoop = zclGenAlarmTable;
// 3334   while ( pLoop )
// 3335   {
// 3336     if ( pLoop->endpoint == endpoint &&
// 3337          pLoop->alarm.code == alarmCode && pLoop->alarm.clusterID == clusterID )
// 3338     {
// 3339       return ( &(pLoop->alarm) );
// 3340     }
// 3341     pLoop = pLoop->next;
// 3342   }
// 3343 
// 3344   return ( (zclGeneral_Alarm_t *)NULL );
// 3345 }
// 3346 
// 3347 /*********************************************************************
// 3348  * @fn      zclGeneral_FindEarliestAlarm
// 3349  *
// 3350  * @brief   Find an alarm with the earliest timestamp
// 3351  *
// 3352  * @param   endpoint -
// 3353  *
// 3354  * @return  a pointer to the alarm information, NULL if not found
// 3355  */
// 3356 zclGeneral_Alarm_t *zclGeneral_FindEarliestAlarm( uint8 endpoint )
// 3357 {
// 3358   zclGenAlarmItem_t *pLoop;
// 3359   zclGenAlarmItem_t earliestAlarm;
// 3360   zclGenAlarmItem_t *pEarliestAlarm = &earliestAlarm;
// 3361 
// 3362   pEarliestAlarm->alarm.timeStamp = 0xFFFFFFFF;
// 3363 
// 3364   // Look for alarm with earliest time
// 3365   pLoop = zclGenAlarmTable;
// 3366   while ( pLoop )
// 3367   {
// 3368     if ( pLoop->endpoint == endpoint &&
// 3369          pLoop->alarm.timeStamp < pEarliestAlarm->alarm.timeStamp )
// 3370     {
// 3371       pEarliestAlarm = pLoop;
// 3372     }
// 3373     pLoop = pLoop->next;
// 3374   }
// 3375 
// 3376   if ( pEarliestAlarm->alarm.timeStamp != 0xFFFFFFFF )
// 3377     return ( &(pEarliestAlarm->alarm) );
// 3378 
// 3379   // No alarm
// 3380   return ( (zclGeneral_Alarm_t *)NULL );
// 3381 }
// 3382 
// 3383 /*********************************************************************
// 3384  * @fn      zclGeneral_ResetAlarm
// 3385  *
// 3386  * @brief   Remove an alarm with alarmCode and clusterID
// 3387  *
// 3388  * @param   endpoint -
// 3389  * @param   alarmCode -
// 3390  * @param   clusterID -
// 3391  *
// 3392  * @return  TRUE if removed, FALSE if not found
// 3393  */
// 3394 void zclGeneral_ResetAlarm( uint8 endpoint, uint8 alarmCode, uint16 clusterID )
// 3395 {
// 3396   zclGenAlarmItem_t *pLoop;
// 3397   zclGenAlarmItem_t *pPrev;
// 3398 
// 3399   // Look for end of list
// 3400   pLoop = zclGenAlarmTable;
// 3401   pPrev = NULL;
// 3402   while ( pLoop )
// 3403   {
// 3404     if ( pLoop->endpoint == endpoint &&
// 3405          pLoop->alarm.code == alarmCode && pLoop->alarm.clusterID == clusterID )
// 3406     {
// 3407       if ( pPrev == NULL )
// 3408         zclGenAlarmTable = pLoop->next;
// 3409       else
// 3410         pPrev->next = pLoop->next;
// 3411 
// 3412       // Free the memory
// 3413       zcl_mem_free( pLoop );
// 3414 
// 3415       // Notify the Application so that if the alarm condition still active then
// 3416       // a new notification will be generated, and a new alarm record will be
// 3417       // added to the alarm log
// 3418       // zclGeneral_NotifyReset( alarmCode, clusterID ); // callback function?
// 3419       return;
// 3420     }
// 3421     pPrev = pLoop;
// 3422     pLoop = pLoop->next;
// 3423   }
// 3424 }
// 3425 
// 3426 /*********************************************************************
// 3427  * @fn      zclGeneral_ResetAllAlarms
// 3428  *
// 3429  * @brief   Remove all alarms with endpoint
// 3430  *
// 3431  * @param   endpoint -
// 3432  * @param   notifyApp -
// 3433  *
// 3434  * @return  none
// 3435  */
// 3436 void zclGeneral_ResetAllAlarms( uint8 endpoint, uint8 notifyApp )
// 3437 {
// 3438   zclGenAlarmItem_t *pLoop;
// 3439   zclGenAlarmItem_t *pPrev;
// 3440   zclGenAlarmItem_t *pNext;
// 3441 
// 3442   // Look for end of list
// 3443   pLoop = zclGenAlarmTable;
// 3444   pPrev = NULL;
// 3445   while ( pLoop )
// 3446   {
// 3447     if (  pLoop->endpoint == endpoint )
// 3448     {
// 3449       if ( pPrev == NULL )
// 3450         zclGenAlarmTable = pLoop->next;
// 3451       else
// 3452         pPrev->next = pLoop->next;
// 3453 
// 3454       pNext = pLoop->next;
// 3455 
// 3456       // Free the memory
// 3457       zcl_mem_free( pLoop );
// 3458 
// 3459       pLoop = pNext;
// 3460     }
// 3461     else
// 3462     {
// 3463       pPrev = pLoop;
// 3464       pLoop = pLoop->next;
// 3465     }
// 3466   }
// 3467 
// 3468   if ( notifyApp )
// 3469   {
// 3470     // Notify the Application so that if any alarm conditions still active then
// 3471     // a new notification will be generated, and a new alarm record will be
// 3472     // added to the alarm log
// 3473     // zclGeneral_NotifyResetAll(); // callback function?
// 3474   }
// 3475 }
// 3476 
// 3477 /*********************************************************************
// 3478  * @fn      zclGeneral_ProcessInAlarmsServer
// 3479  *
// 3480  * @brief   Process in the received Alarms Command.
// 3481  *
// 3482  * @param   pInMsg - pointer to the incoming message
// 3483  *
// 3484  * @return  ZStatus_t
// 3485  */
// 3486 static ZStatus_t zclGeneral_ProcessInAlarmsServer( zclIncoming_t *pInMsg,
// 3487                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3488 {
// 3489   zclAlarm_t alarm;
// 3490   zclGeneral_Alarm_t *pAlarm;
// 3491   uint8 *pData = pInMsg->pData;
// 3492   ZStatus_t stat = ZSuccess;
// 3493 
// 3494   switch ( pInMsg->hdr.commandID )
// 3495   {
// 3496     case COMMAND_ALARMS_RESET:
// 3497       if ( pCBs->pfnAlarm )
// 3498       {
// 3499         alarm.cmdID = pInMsg->hdr.commandID;
// 3500         alarm.alarmCode = pData[0];
// 3501         alarm.clusterID = BUILD_UINT16( pData[1], pData[2] );
// 3502 
// 3503         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3504       }
// 3505       else
// 3506       {
// 3507         stat = ZCL_STATUS_FAILURE;
// 3508       }
// 3509       break;
// 3510 
// 3511     case COMMAND_ALARMS_RESET_ALL:
// 3512       if ( pCBs->pfnAlarm )
// 3513       {
// 3514         alarm.cmdID = pInMsg->hdr.commandID;
// 3515 
// 3516         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3517       }
// 3518       else
// 3519       {
// 3520         stat = ZCL_STATUS_FAILURE;
// 3521       }
// 3522       break;
// 3523 
// 3524     case COMMAND_ALARMS_GET:
// 3525       if ( pCBs->pfnAlarm )
// 3526       {
// 3527         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3528         alarm.cmdID = pInMsg->hdr.commandID;
// 3529 
// 3530         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3531 
// 3532         pAlarm = zclGeneral_FindEarliestAlarm( pInMsg->msg->endPoint );
// 3533         if ( pAlarm )
// 3534         {
// 3535           // Send a response back
// 3536           zclGeneral_SendAlarmGetResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 3537                                            ZCL_STATUS_SUCCESS, pAlarm->code,
// 3538                                            pAlarm->clusterID, pAlarm->timeStamp,
// 3539                                            true, pInMsg->hdr.transSeqNum );
// 3540           // Remove the entry from the Alarm table
// 3541           zclGeneral_ResetAlarm( pInMsg->msg->endPoint, pAlarm->code, pAlarm->clusterID );
// 3542         }
// 3543         else
// 3544         {
// 3545           // Send a response back
// 3546           zclGeneral_SendAlarmGetResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 3547                                            ZCL_STATUS_NOT_FOUND, 0, 0, 0,
// 3548                                            true, pInMsg->hdr.transSeqNum );
// 3549         }
// 3550         stat = ZCL_STATUS_CMD_HAS_RSP;
// 3551       }
// 3552       else
// 3553       {
// 3554         stat = ZCL_STATUS_FAILURE;
// 3555       }
// 3556       break;
// 3557 
// 3558     case COMMAND_ALARMS_RESET_LOG:
// 3559       if ( pCBs->pfnAlarm )
// 3560       {
// 3561         alarm.cmdID = pInMsg->hdr.commandID;
// 3562 
// 3563         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3564 
// 3565         zclGeneral_ResetAllAlarms( pInMsg->msg->endPoint, FALSE );
// 3566       }
// 3567       else
// 3568       {
// 3569         stat = ZCL_STATUS_FAILURE;
// 3570       }
// 3571       break;
// 3572 
// 3573 #ifdef SE_UK_EXT
// 3574     case COMMAND_ALARMS_PUBLISH_EVENT_LOG:
// 3575       if ( pCBs->pfnPublishEventLog )
// 3576       {
// 3577         zclPublishEventLog_t eventLog;
// 3578 
// 3579         eventLog.logID = *pData++;
// 3580         eventLog.cmdIndex = *pData++;
// 3581         eventLog.totalCmds = *pData++;
// 3582 
// 3583         // First try to find out number of Sub Log Payloads
// 3584         eventLog.numSubLogs = (pInMsg->pDataLen-3)/(1+4); // event ID + event time
// 3585         if ( eventLog.numSubLogs > 0 )
// 3586         {
// 3587           // Try to alloc space for Log Payload
// 3588           eventLog.pLogs = (zclEventLogPayload_t *)zcl_mem_alloc( sizeof( zclEventLogPayload_t ) *
// 3589                                                                    eventLog.numSubLogs );
// 3590           if ( eventLog.pLogs != NULL )
// 3591           {
// 3592             // Copy Log Payload
// 3593             for ( uint8 i = 0; i < eventLog.numSubLogs; i++ )
// 3594             {
// 3595               eventLog.pLogs[i].eventId = *pData++;
// 3596               eventLog.pLogs[i].eventTime = zcl_build_uint32( pData, 4 );
// 3597               pData += 4;
// 3598             }
// 3599           }
// 3600           else
// 3601           {
// 3602             stat = ZCL_STATUS_SOFTWARE_FAILURE;
// 3603           }
// 3604         }
// 3605         else
// 3606         {
// 3607           eventLog.pLogs = NULL;
// 3608         }
// 3609 
// 3610         if ( stat == ZSuccess )
// 3611         {
// 3612           pCBs->pfnPublishEventLog( &(pInMsg->msg->srcAddr), &eventLog );
// 3613         }
// 3614 
// 3615         if ( eventLog.pLogs != NULL )
// 3616         {
// 3617           zcl_mem_free( eventLog.pLogs );
// 3618         }
// 3619       }
// 3620       break;
// 3621 #endif // SE_UK_EXT
// 3622 
// 3623     default:
// 3624       stat = ZCL_STATUS_UNSUP_CLUSTER_COMMAND;
// 3625       break;
// 3626   }
// 3627 
// 3628   return ( stat );
// 3629 }
// 3630 
// 3631 /*********************************************************************
// 3632  * @fn      zclGeneral_ProcessInAlarmsClient
// 3633  *
// 3634  * @brief   Process in the received Alarms Command.
// 3635  *
// 3636  * @param   pInMsg - pointer to the incoming message
// 3637  *
// 3638  * @return  ZStatus_t
// 3639  */
// 3640 static ZStatus_t zclGeneral_ProcessInAlarmsClient( zclIncoming_t *pInMsg,
// 3641                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3642 {
// 3643   uint8 *pData = pInMsg->pData;
// 3644   zclAlarm_t alarm;
// 3645   ZStatus_t stat = ZSuccess;
// 3646 
// 3647   zcl_memset( (uint8*)&alarm, 0, sizeof( zclAlarm_t ) );
// 3648 
// 3649   switch ( pInMsg->hdr.commandID )
// 3650   {
// 3651     case COMMAND_ALARMS_ALARM:
// 3652       if ( pCBs->pfnAlarm )
// 3653       {
// 3654         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3655         alarm.cmdID = pInMsg->hdr.commandID;
// 3656         alarm.alarmCode = pData[0];
// 3657         alarm.clusterID = BUILD_UINT16( pData[1], pData[2] );
// 3658 
// 3659         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3660       }
// 3661       else
// 3662       {
// 3663         stat = ZCL_STATUS_FAILURE;
// 3664       }
// 3665       break;
// 3666 
// 3667     case COMMAND_ALARMS_GET_RSP:
// 3668       if ( pCBs->pfnAlarm )
// 3669       {
// 3670         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3671         alarm.cmdID = pInMsg->hdr.commandID;
// 3672         alarm.alarmCode = *pData++;
// 3673         alarm.clusterID = BUILD_UINT16( pData[0], pData[1] );
// 3674 
// 3675         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3676       }
// 3677       else
// 3678       {
// 3679         stat = ZCL_STATUS_FAILURE;
// 3680       }
// 3681       break;
// 3682 
// 3683 #ifdef SE_UK_EXT
// 3684     case COMMAND_ALARMS_GET_EVENT_LOG:
// 3685       if ( pCBs->pfnGetEventLog )
// 3686       {
// 3687         zclGetEventLog_t eventLog;
// 3688 
// 3689         eventLog.logID = *pData++;
// 3690         eventLog.startTime = zcl_build_uint32( pData, 4 );
// 3691         pData += 4;
// 3692         eventLog.endTime = zcl_build_uint32( pData, 4 );
// 3693         pData += 4;
// 3694         eventLog.numEvents = *pData;
// 3695 
// 3696         pCBs->pfnGetEventLog( pInMsg->msg->endPoint, &(pInMsg->msg->srcAddr),
// 3697                               &eventLog, pInMsg->hdr.transSeqNum );
// 3698       }
// 3699       break;
// 3700 #endif // SE_UK_EXT
// 3701 
// 3702     default:
// 3703       stat = ZCL_STATUS_UNSUP_CLUSTER_COMMAND;
// 3704       break;
// 3705   }
// 3706 
// 3707   return ( stat );
// 3708 }
// 3709 #endif // ZCL_ALARMS
// 3710 
// 3711 #ifdef ZCL_LOCATION
// 3712 /*********************************************************************
// 3713  * @fn      zclGeneral_ProcessInLocationServer
// 3714  *
// 3715  * @brief   Process in the received Location Command.
// 3716  *
// 3717  * @param   pInMsg - pointer to the incoming message
// 3718  *
// 3719  * @return  ZStatus_t
// 3720  */
// 3721 static ZStatus_t zclGeneral_ProcessInLocationServer( zclIncoming_t *pInMsg,
// 3722                                                      zclGeneral_AppCallbacks_t *pCBs )
// 3723 {
// 3724   uint8 *pData = pInMsg->pData;
// 3725   zclLocation_t cmd;
// 3726   ZStatus_t stat = ZSuccess;
// 3727 
// 3728   zcl_memset( (uint8*)&cmd, 0, sizeof( zclLocation_t ) );
// 3729 
// 3730   switch ( pInMsg->hdr.commandID )
// 3731   {
// 3732     case COMMAND_LOCATION_SET_ABSOLUTE:
// 3733       cmd.un.absLoc.coordinate1 = BUILD_UINT16( pData[0], pData[1] );
// 3734       pData += 2;
// 3735       cmd.un.absLoc.coordinate2 = BUILD_UINT16( pData[0], pData[1] );
// 3736       pData += 2;
// 3737       cmd.un.absLoc.coordinate3 = BUILD_UINT16( pData[0], pData[1] );
// 3738       pData += 2;
// 3739       cmd.un.absLoc.power = BUILD_UINT16( pData[0], pData[1] );
// 3740       pData += 2;
// 3741       cmd.un.absLoc.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3742 
// 3743       if ( pCBs->pfnLocation )
// 3744       {
// 3745         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3746         cmd.cmdID = pInMsg->hdr.commandID;
// 3747 
// 3748         // Update the absolute location info
// 3749         pCBs->pfnLocation( &cmd );
// 3750       }
// 3751       break;
// 3752 
// 3753     case COMMAND_LOCATION_SET_DEV_CFG:
// 3754       cmd.un.devCfg.power = BUILD_UINT16( pData[0], pData[1] );
// 3755       pData += 2;
// 3756       cmd.un.devCfg.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3757       pData += 2;
// 3758       cmd.un.devCfg.calcPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3759       pData += 2;
// 3760       cmd.un.devCfg.numMeasurements = *pData++;
// 3761       cmd.un.devCfg.reportPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3762 
// 3763       if ( pCBs->pfnLocation )
// 3764       {
// 3765         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3766         cmd.cmdID = pInMsg->hdr.commandID;
// 3767 
// 3768         // Update the device configuration info
// 3769         pCBs->pfnLocation( &cmd );
// 3770       }
// 3771       break;
// 3772 
// 3773     case COMMAND_LOCATION_GET_DEV_CFG:
// 3774       cmd.un.ieeeAddr = pData;
// 3775 
// 3776       if ( pCBs->pfnLocation )
// 3777       {
// 3778         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3779         cmd.cmdID = pInMsg->hdr.commandID;
// 3780         cmd.seqNum = pInMsg->hdr.transSeqNum;
// 3781 
// 3782         // Retreive the Device Configuration
// 3783         pCBs->pfnLocation( &cmd );
// 3784       }
// 3785       stat = ZCL_STATUS_CMD_HAS_RSP;
// 3786       break;
// 3787 
// 3788     case COMMAND_LOCATION_GET_DATA:
// 3789       cmd.un.loc.bitmap.locByte = *pData++;
// 3790       cmd.un.loc.numResponses = *pData++;
// 3791 
// 3792       if ( cmd.un.loc.brdcastResponse == 0 ) // command is sent as a unicast
// 3793         zcl_memcpy( cmd.un.loc.targetAddr, pData, 8 );
// 3794 
// 3795       if ( pCBs->pfnLocation )
// 3796       {
// 3797         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3798         cmd.cmdID = pInMsg->hdr.commandID;
// 3799         cmd.seqNum = pInMsg->hdr.transSeqNum;
// 3800 
// 3801         // Retreive the Location Data
// 3802         pCBs->pfnLocation( &cmd );
// 3803       }
// 3804       stat = ZCL_STATUS_CMD_HAS_RSP;
// 3805       break;
// 3806 
// 3807     default:
// 3808       stat = ZFailure;
// 3809       break;
// 3810   }
// 3811 
// 3812   return ( stat );
// 3813 }
// 3814 
// 3815 /*********************************************************************
// 3816  * @fn      zclGeneral_ProcessInLocationDataRsp
// 3817  *
// 3818  * @brief   Process in the received Location Command.
// 3819  *
// 3820  * @param   pInMsg - pointer to the incoming message
// 3821  *
// 3822  * @return  ZStatus_t
// 3823  */
// 3824 static void zclGeneral_ProcessInLocationDataRsp( zclIncoming_t *pInMsg,
// 3825                                                  zclGeneral_AppCallbacks_t *pCBs )
// 3826 {
// 3827   uint8 *pData = pInMsg->pData;
// 3828   zclLocationRsp_t rsp;
// 3829 
// 3830   zcl_memset( (uint8*)&rsp, 0, sizeof( zclLocationRsp_t ) );
// 3831 
// 3832   if ( pCBs->pfnLocationRsp )
// 3833   {
// 3834     if ( pInMsg->hdr.commandID == COMMAND_LOCATION_DATA_RSP )
// 3835       rsp.un.loc.status = *pData++;
// 3836 
// 3837     if ( pInMsg->hdr.commandID != COMMAND_LOCATION_DATA_RSP ||
// 3838          rsp.un.loc.status == ZCL_STATUS_SUCCESS )
// 3839     {
// 3840       rsp.un.loc.data.type = *pData++;
// 3841       rsp.un.loc.data.absLoc.coordinate1 = BUILD_UINT16( pData[0], pData[1] );
// 3842       pData += 2;
// 3843       rsp.un.loc.data.absLoc.coordinate2 = BUILD_UINT16( pData[0], pData[1] );
// 3844       pData += 2;
// 3845 
// 3846       if ( locationType2D( rsp.un.loc.data.type ) == 0 )
// 3847       {
// 3848         rsp.un.loc.data.absLoc.coordinate3 = BUILD_UINT16( pData[0], pData[1] );
// 3849         pData += 2;
// 3850       }
// 3851 
// 3852       if ( pInMsg->hdr.commandID != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 3853       {
// 3854         rsp.un.loc.data.absLoc.power = BUILD_UINT16( pData[0], pData[1] );
// 3855         pData += 2;
// 3856         rsp.un.loc.data.absLoc.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3857         pData += 2;
// 3858       }
// 3859 
// 3860       if ( locationTypeAbsolute( rsp.un.loc.data.type ) == 0 )
// 3861       {
// 3862         if ( pInMsg->hdr.commandID != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 3863           rsp.un.loc.data.calcLoc.locationMethod = *pData++;
// 3864 
// 3865         rsp.un.loc.data.calcLoc.qualityMeasure = *pData++;
// 3866         rsp.un.loc.data.calcLoc.locationAge = BUILD_UINT16( pData[0], pData[1] );
// 3867       }
// 3868     }
// 3869 
// 3870     rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 3871     rsp.cmdID = pInMsg->hdr.commandID;
// 3872 
// 3873     // Notify the Application
// 3874     pCBs->pfnLocationRsp( &rsp );
// 3875   }
// 3876 }
// 3877 
// 3878 /*********************************************************************
// 3879  * @fn      zclGeneral_ProcessInLocationClient
// 3880  *
// 3881  * @brief   Process in the received Location Command.
// 3882  *
// 3883  * @param   pInMsg - pointer to the incoming message
// 3884  *
// 3885  * @return  ZStatus_t
// 3886  */
// 3887 static ZStatus_t zclGeneral_ProcessInLocationClient( zclIncoming_t *pInMsg,
// 3888                                                      zclGeneral_AppCallbacks_t *pCBs )
// 3889 {
// 3890   uint8 *pData = pInMsg->pData;
// 3891   zclLocationRsp_t rsp;
// 3892   ZStatus_t stat = ZSuccess;
// 3893 
// 3894   zcl_memset( (uint8*)&rsp, 0, sizeof( zclLocationRsp_t ) );
// 3895 
// 3896   switch ( pInMsg->hdr.commandID )
// 3897   {
// 3898     case COMMAND_LOCATION_DEV_CFG_RSP:
// 3899       if ( pCBs->pfnLocationRsp )
// 3900       {
// 3901         rsp.un.devCfg.status = *pData++;
// 3902         if ( rsp.un.devCfg.status == ZCL_STATUS_SUCCESS )
// 3903         {
// 3904           rsp.un.devCfg.data.power = BUILD_UINT16( pData[0], pData[1] );
// 3905           pData += 2;
// 3906           rsp.un.devCfg.data.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3907           pData += 2;
// 3908           rsp.un.devCfg.data.calcPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3909           pData += 2;
// 3910           rsp.un.devCfg.data.numMeasurements = *pData++;
// 3911           rsp.un.devCfg.data.reportPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3912 
// 3913           rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 3914           rsp.cmdID = pInMsg->hdr.commandID;
// 3915 
// 3916           // Notify the Application
// 3917           pCBs->pfnLocationRsp( &rsp );
// 3918         }
// 3919       }
// 3920       break;
// 3921 
// 3922     case COMMAND_LOCATION_DATA_RSP:
// 3923     case COMMAND_LOCATION_DATA_NOTIF:
// 3924     case COMMAND_LOCATION_COMPACT_DATA_NOTIF:
// 3925       zclGeneral_ProcessInLocationDataRsp( pInMsg, pCBs );
// 3926       break;
// 3927 
// 3928     case COMMAND_LOCATION_RSSI_PING:
// 3929       if ( pCBs->pfnLocationRsp )
// 3930       {
// 3931         rsp.un.locationType = *pData;
// 3932 
// 3933         rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 3934         rsp.cmdID = pInMsg->hdr.commandID;
// 3935 
// 3936         // Notify the Application
// 3937         pCBs->pfnLocationRsp( &rsp );
// 3938       }
// 3939       break;
// 3940 
// 3941     default:
// 3942       stat = ZFailure;
// 3943       break;
// 3944   }
// 3945 
// 3946   return ( stat );
// 3947 }
// 3948 #endif // ZCL_LOCATION
// 3949 
// 3950 #ifdef ZCL_SCENES
// 3951 #if !defined ( ZCL_STANDALONE )
// 3952 /*********************************************************************
// 3953  * @fn      zclGeneral_ScenesInitNV
// 3954  *
// 3955  * @brief   Initialize the NV Scene Table Items
// 3956  *
// 3957  * @param   none
// 3958  *
// 3959  * @return  number of scenes
// 3960  */
// 3961 static uint8 zclGeneral_ScenesInitNV( void )
// 3962 {
// 3963   uint8  status;
// 3964   uint16 size;
// 3965 
// 3966   size = (uint16)((sizeof ( nvGenScenesHdr_t ))
// 3967                   + ( sizeof( zclGenSceneNVItem_t ) * ZCL_GEN_MAX_SCENES ));
// 3968 
// 3969   status = zcl_nv_item_init( ZCD_NV_SCENE_TABLE, size, NULL );
// 3970 
// 3971   if ( status != ZSUCCESS )
// 3972   {
// 3973     zclGeneral_ScenesSetDefaultNV();
// 3974   }
// 3975 
// 3976   return status;
// 3977 }
// 3978 #endif // ZCL_STANDALONE
// 3979 
// 3980 #if !defined ( ZCL_STANDALONE )
// 3981 /*********************************************************************
// 3982  * @fn          zclGeneral_ScenesSetDefaultNV
// 3983  *
// 3984  * @brief       Write the defaults to NV
// 3985  *
// 3986  * @param       none
// 3987  *
// 3988  * @return      none
// 3989  */
// 3990 static void zclGeneral_ScenesSetDefaultNV( void )
// 3991 {
// 3992   nvGenScenesHdr_t hdr;
// 3993 
// 3994   // Initialize the header
// 3995   hdr.numRecs = 0;
// 3996 
// 3997   // Save off the header
// 3998   zcl_nv_write( ZCD_NV_SCENE_TABLE, 0, sizeof( nvGenScenesHdr_t ), &hdr );
// 3999 }
// 4000 #endif // ZCL_STANDALONE
// 4001 
// 4002 #if !defined ( ZCL_STANDALONE )
// 4003 /*********************************************************************
// 4004  * @fn          zclGeneral_ScenesWriteNV
// 4005  *
// 4006  * @brief       Save the Scene Table in NV
// 4007  *
// 4008  * @param       none
// 4009  *
// 4010  * @return      none
// 4011  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 4012 static void zclGeneral_ScenesWriteNV( void )
zclGeneral_ScenesWriteNV:
          CFI Block cfiBlock653 Using cfiCommon0
          CFI Function zclGeneral_ScenesWriteNV
        CODE
// 4013 {
        FUNCALL zclGeneral_ScenesWriteNV, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesWriteNV, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 73, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesWriteNV, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 73, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 58
        MOV     A,#-0x3a
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 4014   nvGenScenesHdr_t hdr;
// 4015   zclGenSceneItem_t *pLoop;
// 4016   zclGenSceneNVItem_t item;
// 4017 
// 4018   hdr.numRecs = 0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 4019 
// 4020   // Look for end of list
// 4021   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??zclGeneral_ScenesWriteNV_0
// 4022   while ( pLoop )
// 4023   {
// 4024     // Build the record
// 4025     item.endpoint = pLoop->endpoint;
??zclGeneral_ScenesWriteNV_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine69 & 0xFFFF
// 4026     zcl_memcpy( &(item.scene), &(pLoop->scene), sizeof ( zclGeneral_Scene_t ) );
??CrossCallReturnLabel_120:
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0,R1
        MOV     ?V1,R2
        MOV     ?V2,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 72)
        MOV     R4,#0x37
        MOV     R5,#0x0
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 4027 
// 4028     // Save the record to NV
// 4029     zcl_nv_write( ZCD_NV_SCENE_TABLE,
// 4030             (uint16)((sizeof( nvGenScenesHdr_t )) + (hdr.numRecs * sizeof ( zclGenSceneNVItem_t ))),
// 4031                     sizeof ( zclGenSceneNVItem_t ), &item );
        ; Setup parameters for call to function osal_nv_write
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 71)
        MOV     ?V0,#0x38
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 73)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_41:
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_102:
        LCALL   ??osal_nv_write?relay; Banked call to: osal_nv_write
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 4032 
// 4033     hdr.numRecs++;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOVX    @DPTR,A
// 4034 
// 4035     pLoop = pLoop->next;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine29 & 0xFFFF
// 4036   }
??CrossCallReturnLabel_42:
        MOV     R6,A
        MOV     A,R1
??zclGeneral_ScenesWriteNV_0:
        MOV     R7,A
        MOV     A,R6
        ORL     A,R7
        JZ      $+5
        LJMP    ??zclGeneral_ScenesWriteNV_1 & 0xFFFF
// 4037 
// 4038   // Save off the header
// 4039   zcl_nv_write( ZCD_NV_SCENE_TABLE, 0, sizeof( nvGenScenesHdr_t ), &hdr );
        ; Setup parameters for call to function osal_nv_write
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 71)
        MOV     ?V0,#0x2
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 73)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x6f
        MOV     R3,#0x0
        LCALL   ??osal_nv_write?relay; Banked call to: osal_nv_write
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 4040 }
        MOV     A,#0x3a
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock653
// 4041 #endif // ZCL_STANDALONE
// 4042 
// 4043 #if !defined ( ZCL_STANDALONE )
// 4044 /*********************************************************************
// 4045  * @fn          zclGeneral_ScenesRestoreFromNV
// 4046  *
// 4047  * @brief       Restore the Scene table from NV
// 4048  *
// 4049  * @param       none
// 4050  *
// 4051  * @return      Number of entries restored
// 4052  */
// 4053 static uint16 zclGeneral_ScenesRestoreFromNV( void )
// 4054 {
// 4055   uint16 x;
// 4056   nvGenScenesHdr_t hdr;
// 4057 
// 4058   zclGenSceneNVItem_t item;
// 4059   uint16 numAdded = 0;
// 4060 
// 4061   if ( zcl_nv_read( ZCD_NV_SCENE_TABLE, 0, sizeof(nvGenScenesHdr_t), &hdr ) == ZSuccess )
// 4062   {
// 4063     // Read in the device list
// 4064     for ( x = 0; x < hdr.numRecs; x++ )
// 4065     {
// 4066       if ( zcl_nv_read( ZCD_NV_SCENE_TABLE,
// 4067                 (uint16)(sizeof(nvGenScenesHdr_t) + (x * sizeof ( zclGenSceneNVItem_t ))),
// 4068                                   sizeof ( zclGenSceneNVItem_t ), &item ) == ZSUCCESS )
// 4069       {
// 4070         // Add the scene
// 4071         if ( zclGeneral_AddScene( item.endpoint, &(item.scene) ) == ZSuccess )
// 4072         {
// 4073           numAdded++;
// 4074         }
// 4075       }
// 4076     }
// 4077   }
// 4078 
// 4079   return ( numAdded );
// 4080 }
// 4081 #endif // ZCL_STANDALONE
// 4082 
// 4083 #if !defined ( ZCL_STANDALONE )
// 4084 /*********************************************************************
// 4085  * @fn          zclGeneral_ScenesInit
// 4086  *
// 4087  * @brief       Initialize the scenes table
// 4088  *
// 4089  * @param       none
// 4090  *
// 4091  * @return      none
// 4092  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 4093 void zclGeneral_ScenesInit( void )
zclGeneral_ScenesInit:
          CFI Block cfiBlock654 Using cfiCommon0
          CFI Function zclGeneral_ScenesInit
        CODE
// 4094 {
        FUNCALL zclGeneral_ScenesInit, osal_nv_item_init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 70, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 70, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 68, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 68, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 58
        MOV     A,#-0x3a
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
// 4095   // Initialize NV items
// 4096   zclGeneral_ScenesInitNV();
        ; Setup parameters for call to function osal_nv_item_init
        CLR     A
        MOV     ?V0,A
        MOV     ?V1,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV     R4,#-0x7e
        MOV     R5,#0x3
        MOV     R2,#-0x6f
        MOV     R3,#0x0
        LCALL   ??osal_nv_item_init?relay; Banked call to: osal_nv_item_init
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
        MOV     A,R1
        JZ      ??zclGeneral_ScenesInit_0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ??Subroutine76_0 & 0xFFFF
??CrossCallReturnLabel_133:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV     ?V0,#0x2
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x6f
        MOV     R3,#0x0
        LCALL   ??osal_nv_write?relay; Banked call to: osal_nv_write
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
// 4097 
// 4098   // Restore the Scene table
// 4099   zclGeneral_ScenesRestoreFromNV();
??zclGeneral_ScenesInit_0:
        ; Setup parameters for call to function osal_nv_read
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV     ?V0,#0x2
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x6f
        MOV     R3,#0x0
        LCALL   ??osal_nv_read?relay ; Banked call to: osal_nv_read
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
        MOV     A,R1
        JNZ     ??zclGeneral_ScenesInit_1
        MOV     R6,#0x0
        MOV     R7,#0x0
        SJMP    ??zclGeneral_ScenesInit_2
??zclGeneral_ScenesInit_3:
        ; Setup parameters for call to function osal_nv_read
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV     ?V0,#0x38
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        MOV     R1,A
        MOV     A,R0
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_103:
        LCALL   ??osal_nv_read?relay ; Banked call to: osal_nv_read
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
        MOV     A,R1
        JNZ     ??zclGeneral_ScenesInit_4
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??zclGeneral_AddScene?relay; Banked call to: zclGeneral_AddScene
??zclGeneral_ScenesInit_4:
        INC     R6
        MOV     A,R6
        JNZ     ??zclGeneral_ScenesInit_2
        INC     R7
??zclGeneral_ScenesInit_2:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine95_0 & 0xFFFF
??CrossCallReturnLabel_245:
        CLR     C
        MOV     A,R6
        SUBB    A,R0
        MOV     A,R7
        SUBB    A,R1
        JC      ??zclGeneral_ScenesInit_3
// 4100 }
??zclGeneral_ScenesInit_1:
        MOV     A,#0x3a
        SJMP    ??Subroutine101_0
          CFI EndBlock cfiBlock654

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond655 Using cfiCommon0
          CFI Function zclGeneral_ScenesWriteNV
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function zclGeneral_ScenesInit
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+-2
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 72)
          CFI Block cfiPicker657 Using cfiCommon1
          CFI (cfiPicker657) NoFunction
          CFI (cfiPicker657) Picker
        MOV     B,#0x38
        MUL     AB
        MOV     R0,A
        MOV     R2,B
        MOV     B,#0x38
        MOV     A,R1
        MUL     AB
        ADD     A,R2
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     R2,#-0x6f
        MOV     R3,#0x0
        RET
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiPicker657

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock658 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R4,#0x3
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay; Banked call to: zcl_SendCommand
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x2
          CFI EndBlock cfiBlock658
        REQUIRE ??Subroutine101_0
        ; // Fall through to label ??Subroutine101_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine101_0:
          CFI Block cfiBlock659 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock659
        REQUIRE ??Subroutine102_0
        ; // Fall through to label ??Subroutine102_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine102_0:
          CFI Block cfiBlock660 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock660
// 4101 #endif // ZCL_STANDALONE
// 4102 
// 4103 #if !defined ( ZCL_STANDALONE )
// 4104 /*********************************************************************
// 4105  * @fn          zclGeneral_ScenesSave
// 4106  *
// 4107  * @brief       Save the scenes table
// 4108  *
// 4109  * @param       none
// 4110  *
// 4111  * @return      none
// 4112  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 4113 void zclGeneral_ScenesSave( void )
zclGeneral_ScenesSave:
          CFI Block cfiBlock661 Using cfiCommon0
          CFI Function zclGeneral_ScenesSave
        CODE
// 4114 {
        FUNCALL zclGeneral_ScenesSave, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 4115   // Update NV
// 4116   zclGeneral_ScenesWriteNV();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay; Banked call to: zclGeneral_ScenesWriteNV
// 4117 }
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock661

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_RegisterCmdCallbacks?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RegisterCmdCallbacks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendIdentify?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendIdentifyEZModeInvoke?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyEZModeInvoke

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendIdentifyUpdateCommState?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyUpdateCommState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendIdentifyQueryResponse?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyQueryResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendGroupRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendAddGroupRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendAddGroupRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendGroupGetMembershipRequest?rela:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupGetMembershipRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendGroupResponse?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendGroupViewResponse?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupViewResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendAddSceneRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendAddSceneRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendSceneRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendSceneResponse?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendSceneViewRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneViewRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendSceneGetMembershipResponse?rel:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneGetMembershipResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendLevelControlMoveToLevelRequest:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlMoveToLevelRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendLevelControlMoveRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlMoveRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendLevelControlStepRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlStepRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendLevelControlStopRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlStopRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_HdlIncoming?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_HdlIncoming

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_HdlInSpecificCommands?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_HdlInSpecificCommands

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInIdentity?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInIdentity

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_AddGroup?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_AddGroup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInGroupsServer?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInGroupsServer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInGroupsClient?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInGroupsClient

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_AddScene?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_AddScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_FindScene?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_FindScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_FindAllScenesForGroup?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_FindAllScenesForGroup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_RemoveScene?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RemoveScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_RemoveAllScenes?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RemoveAllScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_CountScenes?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_CountScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_CountAllScenes?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_CountAllScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ReadSceneCountCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ReadSceneCountCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInScenesServer?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInScenesServer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInScenesClient?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInScenesClient

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInLevelControl?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInLevelControl

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ScenesWriteNV?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesWriteNV

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ScenesInit?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ScenesSave?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesSave

        END
// 4118 #endif // ZCL_STANDALONE
// 4119 
// 4120 #endif // ZCL_SCENES
// 4121 
// 4122 /***************************************************************************
// 4123 ****************************************************************************/
// 
// 9 227 bytes in segment BANKED_CODE
//   234 bytes in segment BANK_RELAYS
//     5 bytes in segment XDATA_Z
// 
// 9 461 bytes of CODE  memory
//     5 bytes of XDATA memory
//
//Errors: none
//Warnings: none
