###############################################################################
#
# IAR C/C++ Compiler V9.10.1.2146 for 8051                22/Jan/2018  15:11:39
# Copyright 2004-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\Source\zcl_sceneselector_data.c
#    Command line       =  
#        -f "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
#        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x07FFF800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=120000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
#        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=180000)
#        -f "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\Source\zcl_sceneselector_data.c"
#        -D SCENE_SELECTOR_TOUCHKEY -D xSCENE_SELECTOR -D ISR_KEYINTERRUPT -D
#        OSC32K_CRYSTAL_INSTALLED=FALSE -D xxHAL_PA_LNA -D SECURE=1 -D
#        TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D POWER_SAVING -D
#        NWK_AUTO_POLL -D xHOLD_AUTO_START -D xZTOOL_P1 -D MT_TASK -D
#        MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D xLCD_SUPPORTED=DEBUG -D
#        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_WRITE -D ZCL_REPORT -D
#        xZCL_EZMODE -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_GROUPS -D ZCL_SCENES
#        -D ZCL_ON_OFF -D ZCL_LEVEL_CTRL -D ZCL_DIAGNOSTIC -D
#        FEATURE_SYSTEM_STATS -lC "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\EndDeviceEB\List\"
#        -lA "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\EndDeviceEB\List\"
#        --diag_suppress Pe001,Pa010 -o "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\EndDeviceEB\Obj\"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -I
#        "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\Add\AddSceneSelector\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\Add\AddCommon\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\Add\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\Source\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\Source\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -Ohz --require_prototypes
#    List file          =  
#        E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\EndDeviceEB\List\zcl_sceneselector_data.lst
#    Object file        =  
#        E:\GitHub\面板Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\CC2530DB\EndDeviceEB\Obj\zcl_sceneselector_data.r51
#
###############################################################################

E:\GitHub\面板Z-Stack Home 1.2.2a.44539\Projects\zstack\HomeAutomation\SceneSelector\Source\zcl_sceneselector_data.c
      1          /**************************************************************************************************
      2            Filename:       zcl_samplesw_data.c
      3            Revised:        $Date: 2014-07-30 12:57:37 -0700 (Wed, 30 Jul 2014) $
      4            Revision:       $Revision: 39591 $
      5          
      6          
      7            Description:    Zigbee Cluster Library - sample device application.
      8          
      9          
     10            Copyright 2006-2014 Texas Instruments Incorporated. All rights reserved.
     11          
     12            IMPORTANT: Your use of this Software is limited to those specific rights
     13            granted under the terms of a software license agreement between the user
     14            who downloaded the software, his/her employer (which must be your employer)
     15            and Texas Instruments Incorporated (the "License").  You may not use this
     16            Software unless you agree to abide by the terms of the License. The License
     17            limits your use, and you acknowledge, that the Software may not be modified,
     18            copied or distributed unless embedded on a Texas Instruments microcontroller
     19            or used solely and exclusively in conjunction with a Texas Instruments radio
     20            frequency transceiver, which is integrated into your product.  Other than for
     21            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     22            works of, modify, distribute, perform, display or sell this Software and/or
     23            its documentation for any purpose.
     24          
     25            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     26            PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     27            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     28            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     29            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     30            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     31            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     32            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     33            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     34            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     35            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     36          
     37            Should you have any questions regarding your right to use this Software,
     38            contact Texas Instruments Incorporated at www.TI.com.
     39          **************************************************************************************************/
     40          
     41          /*********************************************************************
     42           * INCLUDES
     43           */
     44          #include "ZComDef.h"
     45          #include "OSAL.h"
     46          #include "AF.h"
     47          #include "ZDConfig.h"
     48          
     49          #include "zcl.h"
     50          #include "zcl_general.h"
     51          #include "zcl_ha.h"
     52          #include "zcl_poll_control.h"
     53          #include "zcl_electrical_measurement.h"
     54          #include "zcl_diagnostic.h"
     55          #include "zcl_meter_identification.h"
     56          #include "zcl_appliance_identification.h"
     57          #include "zcl_appliance_events_alerts.h"
     58          #include "zcl_power_profile.h"
     59          #include "zcl_appliance_control.h"
     60          #include "zcl_appliance_statistics.h"
     61          #include "zcl_hvac.h"
     62          #include "zcl_ezmode.h"
     63          
     64          #include "zcl_sceneselector.h"
     65          
     66          /*********************************************************************
     67           * CONSTANTS
     68           */
     69          
     70          #define SCENESELECTOR_DEVICE_VERSION     0
     71          #define SCENESELECTOR_FLAGS              0
     72          
     73          #define SCENESELECTOR_HWVERSION          0
     74          #define SCENESELECTOR_ZCLVERSION         0
     75          
     76          /*********************************************************************
     77           * TYPEDEFS
     78           */
     79          
     80          /*********************************************************************
     81           * MACROS
     82           */
     83          
     84          /*********************************************************************
     85           * GLOBAL VARIABLES
     86           */
     87          
     88          // Basic Cluster

   \                                 In  segment XDATA_ROM_C, align 1
     89          const uint8 zclSceneSelector_HWRevision = SCENESELECTOR_HWVERSION;
   \                     zclSceneSelector_HWRevision:
   \   000000   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
     90          const uint8 zclSceneSelector_ZCLVersion = SCENESELECTOR_ZCLVERSION;
   \                     zclSceneSelector_ZCLVersion:
   \   000000   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
     91          const uint8 zclSceneSelector_ManufacturerName[] = { 16, 'L','i','f','u','d',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' };
   \                     zclSceneSelector_ManufacturerName:
   \   000000   10           DB 16
   \   000001   4C           DB 76
   \   000002   69           DB 105
   \   000003   66           DB 102
   \   000004   75           DB 117
   \   000005   64           DB 100
   \   000006   20           DB 32
   \   000007   20           DB 32
   \   000008   20           DB 32
   \   000009   20           DB 32
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   20           DB 32
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32

   \                                 In  segment XDATA_ROM_C, align 1
     92          const uint8 zclSceneSelector_ModelId[] = { 16, 'L','F','D','_','S','c','e','n','e','S','e','l','e','c','t',' ' };
   \                     zclSceneSelector_ModelId:
   \   000000   10           DB 16
   \   000001   4C           DB 76
   \   000002   46           DB 70
   \   000003   44           DB 68
   \   000004   5F           DB 95
   \   000005   53           DB 83
   \   000006   63           DB 99
   \   000007   65           DB 101
   \   000008   6E           DB 110
   \   000009   65           DB 101
   \   00000A   53           DB 83
   \   00000B   65           DB 101
   \   00000C   6C           DB 108
   \   00000D   65           DB 101
   \   00000E   63           DB 99
   \   00000F   74           DB 116
   \   000010   20           DB 32

   \                                 In  segment XDATA_ROM_C, align 1
     93          const uint8 zclSceneSelector_DateCode[] = { 16, '2','0','1','7','1','0','2','7',' ',' ',' ',' ',' ',' ',' ',' ' };
   \                     zclSceneSelector_DateCode:
   \   000000   10           DB 16
   \   000001   32           DB 50
   \   000002   30           DB 48
   \   000003   31           DB 49
   \   000004   37           DB 55
   \   000005   31           DB 49
   \   000006   30           DB 48
   \   000007   32           DB 50
   \   000008   37           DB 55
   \   000009   20           DB 32
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   20           DB 32
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32

   \                                 In  segment XDATA_ROM_C, align 1
     94          const uint8 zclSceneSelector_PowerSource = POWER_SOURCE_MAINS_1_PHASE;
   \                     zclSceneSelector_PowerSource:
   \   000000   01           DB 1
     95          

   \                                 In  segment XDATA_I, align 1, keep-with-next
     96          uint8 zclSceneSelector_LocationDescription[17] = { 16, ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' };
   \                     zclSceneSelector_LocationDescription:
   \   000000                DS 17
   \   000011                REQUIRE `?<Initializer for zclSceneSelector_LocationDes`
   \   000011                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     97          uint8 zclSceneSelector_PhysicalEnvironment = 0;
   \                     zclSceneSelector_PhysicalEnvironment:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_I, align 1, keep-with-next
     98          uint8 zclSceneSelector_DeviceEnable = DEVICE_ENABLED;
   \                     zclSceneSelector_DeviceEnable:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for zclSceneSelector_DeviceEnabl`
   \   000001                REQUIRE __INIT_XDATA_I
     99          
    100          // Identify Cluster

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    101          uint16 zclSceneSelector_IdentifyTime = 0;
   \                     zclSceneSelector_IdentifyTime:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    102          
    103          // On/Off Cluster

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    104          uint8  zclSceneSelector_OnOff = LIGHT_OFF;
   \                     zclSceneSelector_OnOff:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    105          
    106          /*********************************************************************
    107           * ATTRIBUTE DEFINITIONS - Uses REAL cluster IDs
    108           */

   \                                 In  segment CODE_C, align 1
    109          CONST zclAttrRec_t zclSceneSelector_Attrs[SCENESELECTOR_MAX_ATTRIBUTES] =
   \                     zclSceneSelector_Attrs:
   \   000000   0000         DW 0
   \   000002   0300         DW 3
   \   000004   20           DB 32
   \   000005   01           DB 1
   \   000006   ....         DW zclSceneSelector_HWRevision
   \   000008   0000         DW 0
   \   00000A   0000         DW 0
   \   00000C   20           DB 32
   \   00000D   01           DB 1
   \   00000E   ....         DW zclSceneSelector_ZCLVersion
   \   000010   0000         DW 0
   \   000012   0400         DW 4
   \   000014   42           DB 66
   \   000015   01           DB 1
   \   000016   ....         DW zclSceneSelector_ManufacturerName
   \   000018   0000         DW 0
   \   00001A   0500         DW 5
   \   00001C   42           DB 66
   \   00001D   01           DB 1
   \   00001E   ....         DW zclSceneSelector_ModelId
   \   000020   0000         DW 0
   \   000022   0600         DW 6
   \   000024   42           DB 66
   \   000025   01           DB 1
   \   000026   ....         DW zclSceneSelector_DateCode
   \   000028   0000         DW 0
   \   00002A   0700         DW 7
   \   00002C   20           DB 32
   \   00002D   01           DB 1
   \   00002E   ....         DW zclSceneSelector_PowerSource
   \   000030   0000         DW 0
   \   000032   1000         DW 16
   \   000034   42           DB 66
   \   000035   03           DB 3
   \   000036   ....         DW zclSceneSelector_LocationDescription
   \   000038   0000         DW 0
   \   00003A   1100         DW 17
   \   00003C   20           DB 32
   \   00003D   03           DB 3
   \   00003E   ....         DW zclSceneSelector_PhysicalEnvironment
   \   000040   0000         DW 0
   \   000042   1200         DW 18
   \   000044   20           DB 32
   \   000045   03           DB 3
   \   000046   ....         DW zclSceneSelector_DeviceEnable
   \   000048   0300         DW 3
   \   00004A   0000         DW 0
   \   00004C   21           DB 33
   \   00004D   03           DB 3
   \   00004E   ....         DW zclSceneSelector_IdentifyTime
   \   000050   0600         DW 6
   \   000052   0000         DW 0
   \   000054   10           DB 16
   \   000055   01           DB 1
   \   000056   ....         DW zclSceneSelector_OnOff
   \   000058   0700         DW 7
   \   00005A   0000         DW 0
   \   00005C   30           DB 48
   \   00005D   01           DB 1
   \   00005E   ....         DW zclSceneSelector_OnOffSwitchType
   \   000060   0700         DW 7
   \   000062   1000         DW 16
   \   000064   30           DB 48
   \   000065   03           DB 3
   \   000066   ....         DW zclSceneSelector_OnOffSwitchActions
   \   000068   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000070   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
    110          {
    111            // *** General Basic Cluster Attributes ***
    112            {
    113              ZCL_CLUSTER_ID_GEN_BASIC,             // Cluster IDs - defined in the foundation (ie. zcl.h)
    114              {  // Attribute record
    115                ATTRID_BASIC_HW_VERSION,            // Attribute ID - Found in Cluster Library header (ie. zcl_general.h)
    116                ZCL_DATATYPE_UINT8,                 // Data Type - found in zcl.h
    117                ACCESS_CONTROL_READ,                // Variable access control - found in zcl.h
    118                (void *)&zclSceneSelector_HWRevision  // Pointer to attribute variable
    119              }
    120            },
    121            {
    122              ZCL_CLUSTER_ID_GEN_BASIC,
    123              { // Attribute record
    124                ATTRID_BASIC_ZCL_VERSION,
    125                ZCL_DATATYPE_UINT8,
    126                ACCESS_CONTROL_READ,
    127                (void *)&zclSceneSelector_ZCLVersion
    128              }
    129            },
    130            {
    131              ZCL_CLUSTER_ID_GEN_BASIC,
    132              { // Attribute record
    133                ATTRID_BASIC_MANUFACTURER_NAME,
    134                ZCL_DATATYPE_CHAR_STR,
    135                ACCESS_CONTROL_READ,
    136                (void *)zclSceneSelector_ManufacturerName
    137              }
    138            },
    139            {
    140              ZCL_CLUSTER_ID_GEN_BASIC,
    141              { // Attribute record
    142                ATTRID_BASIC_MODEL_ID,
    143                ZCL_DATATYPE_CHAR_STR,
    144                ACCESS_CONTROL_READ,
    145                (void *)zclSceneSelector_ModelId
    146              }
    147            },
    148            {
    149              ZCL_CLUSTER_ID_GEN_BASIC,
    150              { // Attribute record
    151                ATTRID_BASIC_DATE_CODE,
    152                ZCL_DATATYPE_CHAR_STR,
    153                ACCESS_CONTROL_READ,
    154                (void *)zclSceneSelector_DateCode
    155              }
    156            },
    157            {
    158              ZCL_CLUSTER_ID_GEN_BASIC,
    159              { // Attribute record
    160                ATTRID_BASIC_POWER_SOURCE,
    161                ZCL_DATATYPE_UINT8,
    162                ACCESS_CONTROL_READ,
    163                (void *)&zclSceneSelector_PowerSource
    164              }
    165            },
    166            {
    167              ZCL_CLUSTER_ID_GEN_BASIC,
    168              { // Attribute record
    169                ATTRID_BASIC_LOCATION_DESC,
    170                ZCL_DATATYPE_CHAR_STR,
    171                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    172                (void *)zclSceneSelector_LocationDescription
    173              }
    174            },
    175            {
    176              ZCL_CLUSTER_ID_GEN_BASIC,
    177              { // Attribute record
    178                ATTRID_BASIC_PHYSICAL_ENV,
    179                ZCL_DATATYPE_UINT8,
    180                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    181                (void *)&zclSceneSelector_PhysicalEnvironment
    182              }
    183            },
    184            {
    185              ZCL_CLUSTER_ID_GEN_BASIC,
    186              { // Attribute record
    187                ATTRID_BASIC_DEVICE_ENABLED,
    188                ZCL_DATATYPE_UINT8,
    189                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    190                (void *)&zclSceneSelector_DeviceEnable
    191              }
    192            },
    193          
    194            // *** Identify Cluster Attribute ***
    195            {
    196              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    197              { // Attribute record
    198                ATTRID_IDENTIFY_TIME,
    199                ZCL_DATATYPE_UINT16,
    200                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    201                (void *)&zclSceneSelector_IdentifyTime
    202              }
    203            },
    204          
    205            // *** On / Off Cluster Attributes ***
    206            {
    207              ZCL_CLUSTER_ID_GEN_ON_OFF,
    208              { // Attribute record
    209                ATTRID_ON_OFF,
    210                ZCL_DATATYPE_BOOLEAN,
    211                ACCESS_CONTROL_READ,
    212                (void *)&zclSceneSelector_OnOff
    213              }
    214            },
    215          
    216            // *** On / Off Switch Configuration Cluster *** //
    217            {
    218              ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG,
    219              { // Attribute record
    220                ATTRID_ON_OFF_SWITCH_TYPE,
    221                ZCL_DATATYPE_ENUM8,
    222                ACCESS_CONTROL_READ,
    223                (void *)&zclSceneSelector_OnOffSwitchType
    224              }
    225            },
    226            {
    227              ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG,
    228              { // Attribute record
    229                ATTRID_ON_OFF_SWITCH_ACTIONS,
    230                ZCL_DATATYPE_ENUM8,
    231                ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
    232                (void *)&zclSceneSelector_OnOffSwitchActions
    233              }
    234            },
    235          };
    236          
    237          /*********************************************************************
    238           * SIMPLE DESCRIPTOR
    239           */
    240          // This is the Cluster ID List and should be filled with Application
    241          // specific cluster IDs.
    242          /*#define ZCLDIMMERSWITCH_MAX_INCLUSTERS       2
    243          const cId_t zclDimmerSwitch_InClusterList[ZCLDIMMERSWITCH_MAX_INCLUSTERS] =
    244          {
    245            ZCL_CLUSTER_ID_GEN_BASIC,
    246            ZCL_CLUSTER_ID_GEN_IDENTIFY
    247          };
    248          
    249          const cId_t zclDimmerSwitch_OutClusterList[] =
    250          {
    251            ZCL_CLUSTER_ID_GEN_ON_OFF,
    252            ZCL_CLUSTER_ID_GEN_IDENTIFY,
    253          #ifdef ZCL_LEVEL_CTRL
    254            ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
    255          #endif
    256            0
    257          };
    258          
    259          #define ZCLDIMMERSWITCH_MAX_OUTCLUSTERS    ( ( sizeof( zclDimmerSwitch_OutClusterList ) / sizeof( zclDimmerSwitch_OutClusterList[0] ) ) - 1 )
    260          */
    261          //####################################################################
    262          //####################################################################	
    263          #define ZCLSCENESELECTOR_MAX_INCLUSTERS       4

   \                                 In  segment XDATA_ROM_C, align 1
    264          const cId_t zclSceneSelector_InClusterList[ZCLSCENESELECTOR_MAX_INCLUSTERS] =
   \                     zclSceneSelector_InClusterList:
   \   000000   0000         DW 0
   \   000002   0300         DW 3
   \   000004   0400         DW 4
   \   000006   0500         DW 5
    265          {
    266            ZCL_CLUSTER_ID_GEN_BASIC,
    267            ZCL_CLUSTER_ID_GEN_IDENTIFY,
    268            ZCL_CLUSTER_ID_GEN_GROUPS,
    269            ZCL_CLUSTER_ID_GEN_SCENES
    270          };
    271          

   \                                 In  segment XDATA_ROM_C, align 1
    272          const cId_t zclSceneSelector_OutClusterList[] =
   \                     zclSceneSelector_OutClusterList:
   \   000000   0000         DW 0
   \   000002   0400         DW 4
   \   000004   0500         DW 5
   \   000006   0600         DW 6
   \   000008   0300         DW 3
   \   00000A   0800         DW 8
   \   00000C   0000         DW 0
    273          {
    274            ZCL_CLUSTER_ID_GEN_BASIC,
    275            ZCL_CLUSTER_ID_GEN_GROUPS,
    276            ZCL_CLUSTER_ID_GEN_SCENES,
    277            ZCL_CLUSTER_ID_GEN_ON_OFF,
    278            ZCL_CLUSTER_ID_GEN_IDENTIFY,
    279          #ifdef ZCL_LEVEL_CTRL
    280            ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
    281          #endif
    282            0
    283          };
    284          
    285          #define ZCLSCENESELECTOR_MAX_OUTCLUSTERS    ( ( sizeof( zclSceneSelector_OutClusterList ) / sizeof( zclSceneSelector_OutClusterList[0] ) ) - 1 )
    286          //####################################################################
    287          //####################################################################	
    288          
    289          
    290          /*SimpleDescriptionFormat_t zclSceneSelector_SimpleDesc =
    291          {
    292            SCENESELECTOR_ENDPOINT,                  //  int Endpoint;
    293            ZCL_HA_PROFILE_ID,                  //  uint16 AppProfId[2];
    294            ZCL_HA_DEVICEID_ON_OFF_SWITCH,      //  uint16 AppDeviceId[2];
    295            SCENESELECTOR_DEVICE_VERSION,            //  int   AppDevVer:4;
    296            SCENESELECTOR_FLAGS,                     //  int   AppFlags:4;
    297            ZCLSCENESELECTOR_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
    298            (cId_t *)zclSceneSelector_InClusterList, //  byte *pAppInClusterList;
    299            ZCLSCENESELECTOR_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
    300            (cId_t *)zclSceneSelector_OutClusterList //  byte *pAppInClusterList;
    301          };*/
    302          //####################################################################
    303          //####################################################################	

   \                                 In  segment XDATA_I, align 1, keep-with-next
    304          SimpleDescriptionFormat_t zclSceneSelector_SimpleDesc1 =
   \                     zclSceneSelector_SimpleDesc1:
   \   000000                DS 12
   \   00000C                REQUIRE `?<Initializer for zclSceneSelector_SimpleDesc1`
   \   00000C                REQUIRE __INIT_XDATA_I
    305          {
    306            SCENESELECTOR_ENDPOINT1,                  //  int Endpoint;
    307            ZCL_HA_PROFILE_ID,                  //  uint16 AppProfId[2];
    308            ZCL_HA_DEVICEID_SCENE_SELECTOR,      //  uint16 AppDeviceId[2];
    309            SCENESELECTOR_DEVICE_VERSION,            //  int   AppDevVer:4;
    310            SCENESELECTOR_FLAGS,                     //  int   AppFlags:4;
    311            ZCLSCENESELECTOR_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
    312            (cId_t *)zclSceneSelector_InClusterList, //  byte *pAppInClusterList;
    313            ZCLSCENESELECTOR_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
    314            (cId_t *)zclSceneSelector_OutClusterList //  byte *pAppInClusterList;
    315          };
    316          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    317          SimpleDescriptionFormat_t zclSceneSelector_SimpleDesc2 =
   \                     zclSceneSelector_SimpleDesc2:
   \   000000                DS 12
   \   00000C                REQUIRE `?<Initializer for zclSceneSelector_SimpleDesc2`
   \   00000C                REQUIRE __INIT_XDATA_I
    318          {
    319            SCENESELECTOR_ENDPOINT2,                  //  int Endpoint;
    320            ZCL_HA_PROFILE_ID,                  //  uint16 AppProfId[2];
    321            ZCL_HA_DEVICEID_SCENE_SELECTOR,      //  uint16 AppDeviceId[2];
    322            SCENESELECTOR_DEVICE_VERSION,            //  int   AppDevVer:4;
    323            SCENESELECTOR_FLAGS,                     //  int   AppFlags:4;
    324            ZCLSCENESELECTOR_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
    325            (cId_t *)zclSceneSelector_InClusterList, //  byte *pAppInClusterList;
    326            ZCLSCENESELECTOR_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
    327            (cId_t *)zclSceneSelector_OutClusterList //  byte *pAppInClusterList;
    328          };
    329          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    330          SimpleDescriptionFormat_t zclSceneSelector_SimpleDesc3 =
   \                     zclSceneSelector_SimpleDesc3:
   \   000000                DS 12
   \   00000C                REQUIRE `?<Initializer for zclSceneSelector_SimpleDesc3`
   \   00000C                REQUIRE __INIT_XDATA_I
    331          {
    332            SCENESELECTOR_ENDPOINT3,                  //  int Endpoint;
    333            ZCL_HA_PROFILE_ID,                  //  uint16 AppProfId[2];
    334            ZCL_HA_DEVICEID_SCENE_SELECTOR,      //  uint16 AppDeviceId[2];
    335            SCENESELECTOR_DEVICE_VERSION,            //  int   AppDevVer:4;
    336            SCENESELECTOR_FLAGS,                     //  int   AppFlags:4;
    337            ZCLSCENESELECTOR_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
    338            (cId_t *)zclSceneSelector_InClusterList, //  byte *pAppInClusterList;
    339            ZCLSCENESELECTOR_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
    340            (cId_t *)zclSceneSelector_OutClusterList //  byte *pAppInClusterList;
    341          };
    342          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    343          SimpleDescriptionFormat_t zclSceneSelector_SimpleDesc4 =
   \                     zclSceneSelector_SimpleDesc4:
   \   000000                DS 12
   \   00000C                REQUIRE `?<Initializer for zclSceneSelector_SimpleDesc4`
   \   00000C                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclSceneSelector_LocationDes`:
   \   000000   10           DB 16
   \   000001   20           DB 32
   \   000002   20           DB 32
   \   000003   20           DB 32
   \   000004   20           DB 32
   \   000005   20           DB 32
   \   000006   20           DB 32
   \   000007   20           DB 32
   \   000008   20           DB 32
   \   000009   20           DB 32
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   20           DB 32
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclSceneSelector_DeviceEnabl`:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclSceneSelector_SimpleDesc1`:
   \   000000   01           DB 1
   \   000001   0401         DW 260
   \   000003   0400         DW 4
   \   000005   00           DB 0
   \   000006   04           DB 4
   \   000007   ....         DW zclSceneSelector_InClusterList
   \   000009   06           DB 6
   \   00000A   ....         DW zclSceneSelector_OutClusterList

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclSceneSelector_SimpleDesc2`:
   \   000000   02           DB 2
   \   000001   0401         DW 260
   \   000003   0400         DW 4
   \   000005   00           DB 0
   \   000006   04           DB 4
   \   000007   ....         DW zclSceneSelector_InClusterList
   \   000009   06           DB 6
   \   00000A   ....         DW zclSceneSelector_OutClusterList

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclSceneSelector_SimpleDesc3`:
   \   000000   03           DB 3
   \   000001   0401         DW 260
   \   000003   0400         DW 4
   \   000005   00           DB 0
   \   000006   04           DB 4
   \   000007   ....         DW zclSceneSelector_InClusterList
   \   000009   06           DB 6
   \   00000A   ....         DW zclSceneSelector_OutClusterList

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclSceneSelector_SimpleDesc4`:
   \   000000   04           DB 4
   \   000001   0401         DW 260
   \   000003   0400         DW 4
   \   000005   00           DB 0
   \   000006   04           DB 4
   \   000007   ....         DW zclSceneSelector_InClusterList
   \   000009   06           DB 6
   \   00000A   ....         DW zclSceneSelector_OutClusterList
    344          {
    345            SCENESELECTOR_ENDPOINT4,                  //  int Endpoint;
    346            ZCL_HA_PROFILE_ID,                  //  uint16 AppProfId[2];
    347            ZCL_HA_DEVICEID_SCENE_SELECTOR,      //  uint16 AppDeviceId[2];
    348            SCENESELECTOR_DEVICE_VERSION,            //  int   AppDevVer:4;
    349            SCENESELECTOR_FLAGS,                     //  int   AppFlags:4;
    350            ZCLSCENESELECTOR_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
    351            (cId_t *)zclSceneSelector_InClusterList, //  byte *pAppInClusterList;
    352            ZCLSCENESELECTOR_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
    353            (cId_t *)zclSceneSelector_OutClusterList //  byte *pAppInClusterList;
    354          };
    355          
    356          //####################################################################
    357          //####################################################################
    358          
    359          /*********************************************************************
    360           * GLOBAL FUNCTIONS
    361           */
    362          
    363          /*********************************************************************
    364           * LOCAL FUNCTIONS
    365           */
    366          
    367          /****************************************************************************
    368          ****************************************************************************/
    369          


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Initializer for zclSceneSelector_DeviceEnabl
      17  ?<Initializer for zclSceneSelector_LocationDes
      12  ?<Initializer for zclSceneSelector_SimpleDesc1
      12  ?<Initializer for zclSceneSelector_SimpleDesc2
      12  ?<Initializer for zclSceneSelector_SimpleDesc3
      12  ?<Initializer for zclSceneSelector_SimpleDesc4
     120  zclSceneSelector_Attrs
      17  zclSceneSelector_DateCode
       1  zclSceneSelector_DeviceEnable
       1  zclSceneSelector_HWRevision
       2  zclSceneSelector_IdentifyTime
       8  zclSceneSelector_InClusterList
      17  zclSceneSelector_LocationDescription
      17  zclSceneSelector_ManufacturerName
      17  zclSceneSelector_ModelId
       1  zclSceneSelector_OnOff
      14  zclSceneSelector_OutClusterList
       1  zclSceneSelector_PhysicalEnvironment
       1  zclSceneSelector_PowerSource
      12  zclSceneSelector_SimpleDesc1
      12  zclSceneSelector_SimpleDesc2
      12  zclSceneSelector_SimpleDesc3
      12  zclSceneSelector_SimpleDesc4
       1  zclSceneSelector_ZCLVersion

 
 120 bytes in segment CODE_C
  66 bytes in segment XDATA_I
  66 bytes in segment XDATA_ID
  76 bytes in segment XDATA_ROM_C
   4 bytes in segment XDATA_Z
 
 186 bytes of CODE  memory
  76 bytes of CONST memory
  70 bytes of XDATA memory

Errors: none
Warnings: none
